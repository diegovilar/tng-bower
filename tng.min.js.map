{"version":3,"file":"tng.js","sources":["node_modules/browser-pack/_prelude.js","src/assert.ts","src/reflection.ts","src/ui/bootstrap/modal-service-decorator.ts","src/ui/bootstrap/modal-view.ts","src/ui/router/events.ts","src/utils.ts","src/animation.ts","src/application.ts","src/bootstrap.ts","src/component-view.ts","src/component.ts","src/constant.ts","src/decorator.ts","src/directive.ts","src/di.ts","src/filter.ts","src/module.ts","src/service.ts","src/ui/bootstrap/modal.ts","src/ui/bootstrap/bootstrap.ts","src/ui/router/routes.ts","src/ui/router/states.ts","src/value.ts","src/view.ts","src/tng.ts","/source/node_modules/browser-pack/_prelude.js","/source/src/assert.ts","/source/src/reflection.ts","/source/src/ui/bootstrap/modal-service-decorator.ts","/source/src/ui/bootstrap/modal-view.ts","/source/src/ui/router/events.ts","/source/src/utils.ts","/source/src/animation.ts","/source/src/application.ts","/source/src/bootstrap.ts","/source/src/component-view.ts","/source/src/component.ts","/source/src/constant.ts","/source/src/decorator.ts","/source/src/directive.ts","/source/src/di.ts","/source/src/filter.ts","/source/src/module.ts","/source/src/service.ts","/source/src/ui/bootstrap/modal.ts","/source/src/ui/bootstrap/bootstrap.ts","/source/src/ui/router/routes.ts","/source/src/ui/router/states.ts","/source/src/value.ts","/source/src/view.ts","/source/src/tng.ts"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length",1,"module","AssertionError","message","this","name","_assert","condition","errorOrMessage","_notNull","value","_notEmpty","utils_1","isString","trim","Array","prototype","slice","__","constructor","notNull","notEmpty","assert","GetPrototypeOf","O","proto","Object","getPrototypeOf","functionPrototype","prototypeProto","getKey","key","ANNOTATIONS_METADATA_KEY","getAnnotations","target","type","metas","push","getOwnAnnotations","reverse","annotations","concat","Reflect","getOwnMetadata","filter","setAnnotations","defineMetadata","addAnnotation","annotation","hasAnnotation","hasMetadata","hasOwnAnnotation","hasOwnMetadata","mergeAnnotations","_i","arguments","dest","shift","_a","source","forEach","isDefined","_Reflect","Function","di_1","decorator_1","modal_1","ModalServiceDecorator","decorate","$modal","$injector","originalOpen","open","optionsOrModal","scope","handler","getModalHandler","invoke","__decorate","__param","Inject","Decorator","view_1","ModalBackdrop","MODAL_BACKDROP_MAP","ModalViewAnnotation","_super","options","animation","backdrop","backdropClass","keyboard","windowClass","windowTemplateUrl","size","setIfInterface","__extends","ViewAnnotation","ModalView","makeDecorator","publishListeners","moduleController","ngModule","listenerNotes","reflection_1","UiRouterEventListenerAnnotation","run","injectable","$rootScope","listenerAnnotation","event_1","event","isNumber","EVENTS_MAP","$on","StateChangeEvent","ViewLoadEvent","On","create","setIf","hasOwnProperty","annotationClass","annotationInstance","apply","makeParamDecorator","unusedKey","index","parameters","getMetadata","parseSelector","selector","m","RE_SELECTOR_TAG","exec","RE_SELECTOR_ATTRIBUTE","RE_SELECTOR_CLASS","semanticeName","imperativeName","toCamelCase","str","replace","upperCase","lowerCase","toUpperCase","toLowerCase","bindFunctions","host","aux","isFunction","safeBind","func","context","bound","bind","setHashKey","obj","h","$$hashKey","baseExtend","dst","objs","deep","ifValue","ii","isObject","keys","j","jj","src","isArray","_mergeIfValue","angular","isElement","isDate","extend","copy","merge","mergeIfValue","SelectorType","registerAnimation","animationClass","AnimationAnnotation","utils_2","singleton","instantiate","Animation","assert_1","module_1","ApplicationAnnotation","elementOroptions","element","ModuleAnnotation","Application","bootstrap","moduleClass","dependencies","constructorParameters","publishModule","ComponentTemplateNamespace","NAMESPACE_MAP","ComponentViewAnnotation","namespace","ComponentView","publishComponent","componentClass","ComponentAnnotation","makeComponentFactory","factory","directive","makeComponentDO","cdo","directive_2","makeCommonDO","view","bindToController","controllerAs","templateNamespace","component_view_1","styles","template","templateUrl","inFactory","isAnnotated","tElement","tAttrs","attributes","insertStyle","style","id","head","document","querySelector","el","createElement","textContent","insertBefore","directive_1","directive_3","Bind","CommonDirectiveAnnotation","Component","Constant","ConstantWrapper","publishConstant","constant","_name","_value","defineProperty","publishDecorator","decoratorClass","DecoratorAnnotation","config","$provide","decorator","$delegate","instance","bindDecorator","binding","propertyKey","newBind","BindAnnotation","publishDirective","directiveClass","DirectiveAnnotation","makeDirectiveFactory","selectorData","ddo","semanticName","restrict","RESTRICTION_MAP","controller","transclude","TRANSCLUSION_MAP","compile","link","bindAnnotations","map","makeDirectiveDO","multiElement","priority","terminal","$element","$attrs","$transclude","linkFn","iElement","iAttrs","controllers","lenght","$scope","$controller","$controllers","Transclusion","Directive","$inject","dependency","parameterIndex","registerFilter","filterClass","FilterAnnotation","notes","filterSingleton","boundFilterMethod","stateful","$stateful","Filter","getNewModuleName","moduleCount","processDependency","dep","modules","_dep","constant_1","constants","value_1","ValueWrapper","values","service_1","ServiceAnnotation","services","decorators","filter_1","filters","animation_1","animations","component_1","components","directives","publishedAs","PUBLISHED_ANNOTATION_KEY","allDeps","configFns","onConfig","fn","runFns","onRun","states_1","publishStates","routes_1","registerRoutes","_b","item","publishValue","_c","_d","_e","_f","publishService","_g","_h","_j","Module","serviceClass","provider","service","Service","modalClass","modalNotes","ModalAnnotation","viewNotes","modal_view_1","settings","modal","resolve","ModalHandler","modal_view_2","dismissAll","Modal","$modalStack","calltimeSettings","dismiss","modal_service_decorator_1","TngUiBootstrapModule","RoutesAnnotation","routes","note","$urlRouterProvider","route","otherwise","when","Routes","statesAnnotation","StatesAnnotation","states","state","translateToUiState","$stateProvider","events_1","translatedState","url","abstract","reloadOnSearch","onEnter","onExit","parent","parent_1","views","extractViewData","outlet","viewModel","data","view_2","View","events_2","States","on","Value","application_1","bootstrap_1"],"mappings":"A0BAAA,A1BAA,Q0BAA,QAAAC,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAR,UAAAA,OAAA,KAAAO,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAG,EAAA,MAAAA,GAAAH,GAAA,EAAA,IAAAI,GAAA,GAAAC,OAAA,uBAAAL,EAAA,IAAA,MAAAI,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAV,EAAAG,IAAAQ,WAAAZ,GAAAI,GAAA,GAAAS,KAAAF,EAAAC,QAAA,SAAAb,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAC,QAAAb,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAQ,QAAA,IAAA,GAAAL,GAAA,kBAAAT,UAAAA,QAAAM,EAAA,EAAAA,EAAAF,EAAAY,OAAAV,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAY,GAAA,SAAAjB,EAAAkB,EAAAJ,GC6BA,QAAAK,GAA+BC,GAE3BC,KAAKC,KAAO,iBACZD,KAAKD,QAAqB,MAAXA,EAAkBA,EAAU,GAQ/C,QAAAG,GAAiBC,EAAoBC,GACjC,IAAKD,EACD,KAAOC,aAA0Bd,OAASc,EACtC,GAAUN,GAAgBM,GAAkB,oBAIxD,QAAAC,GAAkBC,EAAYF,GAC7BF,EAAiB,MAATI,EAAeF,GAGxB,QAAAG,GAAmBD,EAAYF,GAC3BC,EAASC,EAAOF,GAEZI,EAAAC,SAASH,GACTJ,EAAQI,EAAMI,OAAOf,OAAS,EAAGS,GAGjCF,EAAQI,EAAMX,OAAS,EAAGS,GAxDlC,CAAA,GAAAI,GAAA7B,EAAgC,UAEpBgC,OAAMC,UAAUC,MAyBZpB,EAAAK,eAAcA,EAK9B,WACI,QAAAgB,KAAgBd,KAAKe,YAAcjB,EACnCgB,EAAGF,UAAYtB,MAAMsB,UACrBd,EAAec,UAAY,GAAUE,MAyB/BZ,EAASc,QAAUX,EACnBH,EAASe,SAAWV,EAEnBd,EAAAyB,OAAkBhB,qCCtD7B,QAAAiB,GAAwBC,GAEpB,GAAIC,GAAQC,OAAOC,eAAeH,EAClC,IAAiB,kBAANA,IAAoBA,IAAMI,EACjC,MAAOH,EAWX,IAAIA,IAAUG,EACV,MAAOH,EAIX,IAAIT,GAAYQ,EAAER,UACda,EAAiBH,OAAOC,eAAeX,EAC3C,IAAsB,MAAlBa,GAA0BA,IAAmBH,OAAOV,UACpD,MAAOS,EAIX,IAAIN,GAAcU,EAAeV,WACjC,OAA2B,kBAAhBA,GACAM,EAIPN,IAAgBK,EACTC,EAIJN,EAIX,QAAAW,GAAgBC,GACf,MAAQA,GAAoClC,EAAAmC,yBAAwB,IAAID,EAA1DlC,EAAAmC,yBAGf,QAAAC,GAA+BC,EAAaC,EAAiBJ,GAEzD,GAAIK,MACAX,EAAQS,CAEZ,GACIE,GAAMC,KAAKC,EAAkBb,EAAOU,EAAMJ,IAC1CN,EAAQF,EAAeE,SACD,kBAAVA,IAAwBA,IAAUG,EAElDQ,GAAMG,SAGN,KAAK,GAFDC,MAEKhD,EAAI,EAAGA,EAAI4C,EAAMrC,OAAQP,IAC9BgD,EAAcA,EAAYC,OAAOL,EAAM5C,GAG3C,OAAOgD,GAgBX,QAAAF,GAAkCJ,EAAaC,EAAiBJ,GAE/D,GAAIS,GAAsBE,QAAQC,eAAeb,EAAOC,GAAMG,MAE9D,OAAIC,GACIK,EAAYI,OAAO,SAAClC,GAAU,MAAAA,aAAiByB,KAAMI,UAGtDC,EAAYvB,MAAM,GAAGsB,UAI7B,QAAAM,GAA+BX,EAAaM,EAAoBT,GAE/DW,QAAQI,eAAehB,EAAOC,GAAMS,EAAaN,GAIlD,QAAAa,GAA8Bb,EAAac,EAAiBjB,GAE3D,GAAIS,GAAcF,EAAkBJ,EAAQ,KAAMH,EAClDS,GAAYH,KAAKW,GACjBH,EAAeX,EAAQM,EAAaT,GAIrC,QAAAkB,GAA8Bf,EAAaC,EAAiBJ,GAE3D,MAAKI,GAIEF,EAAeC,EAAQC,EAAMJ,GAAKhC,OAAS,EAH1C2C,QAAQQ,YAAYpB,EAAOC,GAAMG,GAO1C,QAAAiB,GAAiCjB,EAAaC,EAAiBJ,GAE9D,MAAKI,GAIEF,EAAeC,EAAQC,EAAMJ,GAAKhC,OAAS,EAH1C2C,QAAQU,eAAetB,EAAOC,GAAMG,GAS7C,QAAAmB,SAAiC,GAAAb,MAAAc,EAAA,EAAAA,EAAAC,UAAAxD,OAAAuD,IAAAd,EAAAc,EAAA,GAAAC,UAAAD,EAEhC,KAAKd,EAAYzC,OAChB,MAAO,KAEH,IAA0B,GAAtByC,EAAYzC,OACpB,MAAOyC,GAAY,EAKpB,KAAmB,GAFfgB,GAAqChB,EAAYiB,QAElCC,EAAA,EAAdA,EAAAlB,EAAAzC,OAAA2D,IAA0B,CAA1B,GAAIC,GAAUnB,EAAWkB,EAC7B9C,GAAAgD,QAAQD,EAAQ,SAACjD,EAAOqB,GAEnBnB,EAAAiD,UAAUnD,KACb8C,EAAKzB,GAAOrB,KAKf,MAAa8C,GA5Jd,GAAA5C,GAAA7B,EAAiC,UAEpBc,GAAAmC,yBAA2B,KAExC,IAAI8B,GAAWpB,OACK7C,GAAA6C,QAAOoB,CAE3B,IAAMlC,GAAoBF,OAAOC,eAAeoC,SAgDhClE,GAAAoC,eAAcA,EAiCdpC,EAAAyC,kBAAiBA,EAYjBzC,EAAAgD,eAAcA,EAMdhD,EAAAkD,cAAaA,EAQblD,EAAAoD,cAAaA,EAUbpD,EAAAsD,iBAAgBA,EAYhBtD,EAAAwD,iBAAgBA,0cCxIhCW,EAAAjF,EAAqB,YACrBkF,EAAAlF,EAAwB,mBACxBmF,EAAAnF,EAA8B,WAS9BoF,EAAA,WAAA,QAAAA,MA4BA,MAvBCA,GAAAnD,UAAAoD,SAAA,SACsBC,EACAC,GAErB,GAAIC,GAAeF,EAAOG,IAe1B,OAdAH,GAAOG,KAAO,SAASC,EAAqBC,GAG3C,GAA8B,kBAAnBD,GAA+B,CACzC,GAAIE,GAAUT,EAAAU,gBAA2BH,EAAgBC,EACzD,OAAOJ,GAAUO,OAAOF,EAAQH,KAAMG,GAItC,MAAOJ,GAAazE,KAAKuE,EAAQI,IAK5BJ,GAnBRS,GACCC,EAAA,EAACf,EAAAgB,OAAO,cACRD,EAAA,EAACf,EAAAgB,OAAO,eAFTb,EAAAnD,UAAA,WAAQ,MALTmD,EAAAW,GAACb,EAAAgB,WACA5E,KAAM,iBAEMR,GAAAsE,sBAAqBA,mTCdlCvD,EAAA7B,EAA4C,eAC5CmG,EAAAnG,EAA0C,eAI1C,SAAYoG,GACXA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,OAAA,GAAA,UAHWtF,EAAAsF,gBAAAtF,EAAAsF,kBAAAtF,GAAAsF,aASCtF,GAAAuF,qBAAsB,GAAM,EAAO,SAqBhD,IAAAC,GAAA,SAAAC,GAUI,QAAAD,GAAYE,GACdD,EAAAxF,KAAAM,KAAMmF,GATJnF,KAAAoF,UAAqB,OACxBpF,KAAAqF,SAA0B,OAC1BrF,KAAAsF,cAAwB,OACxBtF,KAAAuF,SAAoB,OACpBvF,KAAAwF,YAAsB,OACtBxF,KAAAyF,kBAA4B,OAC5BzF,KAAA0F,KAAe,OAIdlF,EAAAmF,eAAe3F,KAAMmF,GAGvB,MAfyCS,GAAAX,EAAAC,GAezCD,GAfyCH,EAAAe,eAA5BpG,GAAAwF,oBAAmBA,EAsBrBxF,EAAAqG,UAAiCtF,EAAAuF,cAAcd,kECoG1D,QAAAe,GAAiCC,EAA4BC,GAKzD,GAAIC,GAAoDC,EAAAvE,eAAeoE,EAAkBI,EAErFF,GAAcxG,QACduG,EAASI,IAAI1C,EAAA2C,YAAY,cAAe,SAACC,GAErC,IAA+B,GAAAtD,GAAA,EAA1BA,EAAAiD,EAAAxG,OAAAuD,IAAwC,CAAxC,GAAIuD,GAAsBN,EAAajD,GACpCwD,EAAiBD,EAAmBE,KAEpCnG,GAAAoG,SAASF,KACTA,EAAQG,EAAoBJ,EAAmBE,QAGnDH,EAAWM,IAAIJ,EAAaD,EAAmBlC,aA9K/D,GAAA/D,GAAA7B,EAAsC,eACtCyH,EAAAzH,EAA6B,oBAC7BiF,EAAAjF,EAAyB,aAOzB,SAAkBoI,GAmBdA,EAAAA,EAAA,mBAAA,GAAA,qBAiBAA,EAAAA,EAAA,qBAAA,GAAA,uBAyBAA,EAAAA,EAAA,mBAAA,GAAA,sBA7DctH,EAAAsH,mBAAAtH,EAAAsH,qBAAAtH,GAAAsH,kBA+ElB,SAAkBC,GAcdA,EAAAA,EAAA,qBAAA,GAAA,uBAaAA,EAAAA,EAAA,oBAAA,GAAA,uBA3BcvH,EAAAuH,gBAAAvH,EAAAuH,kBAAlB,IAmCMH,IAnCYpH,EAAAuH,eAoCd,oBACA,sBACA,oBACA,iBAEA,sBACA,uBAMJX,EAAA,WAEI,QAAAA,GAAmBM,EAAqDpC,GAArDvE,KAAA2G,MAAAA,EAAqD3G,KAAAuE,QAAAA,EAI5E,MAAA8B,KANa5G,GAAA4G,gCAA+BA,EAgBjC5G,EAAAwH,GAAmBzG,EAAAuF,cAAcM,GAK5B5G,EAAAuG,iBAAgBA,kFChIhC,QAAAkB,GAA6BnG,GAEzB,MAAOO,QAAO4F,OAAOnG,EAAYH,WAIrC,QAAAuG,GAAsBrF,EAAYyB,GAE9B,GAAc,MAAVzB,GAA4B,MAAVyB,EAIzB,IAAK,GAAI5B,KAAO4B,GACLA,EAAO6D,eAAezF,IAAQlC,EAAAgE,UAAUF,EAAO5B,MAC/CG,EAAOH,GAAO4B,EAAO5B,IAMjC,QAAAgE,GAA+B7D,EAAYyB,GAEvC,GAAc,MAAVzB,GAA4B,MAAVyB,EAIzB,IAAK,GAAI5B,KAAO4B,GACLA,EAAO6D,eAAezF,IAAQlC,EAAAgE,UAAUF,EAAO5B,KAC3CG,EAAOsF,eAAezF,KACtBG,EAAOH,GAAO4B,EAAO5B,IAOrC,QAAAoE,GAAkDsB,GAE9C,MAAO,YAEH,GAAIC,GAAqBhG,OAAO4F,OAAOG,EAAgBzG,UAGvD,OAFAyG,GAAgBE,MAAMD,EAAoBnE,WAEnC,SAASrB,GAEZ,MADAsE,GAAAzD,cAAcb,EAAQwF,GACfxF,IAOnB,QAAA0F,GAAuDH,GAEnD,MAAO,YAEH,GAAIC,GAAqBhG,OAAO4F,OAAOG,EAAgBzG,UAGvD,OAFAyG,GAAgBE,MAAMD,EAAoBnE,WAEnC,SAASrB,EAAW2F,EAAmBC,GAE1C,GAAIC,GAAavB,EAAA9D,QAAQsF,YAAY,aAAc9F,EAKnD,KAJA6F,EAAaA,MAINA,EAAWhI,QAAU+H,GACxBC,EAAW1F,KAAK,KAKpB,OAFA0F,GAAWD,GAASJ,EACpBlB,EAAA9D,QAAQI,eAAe,aAAciF,EAAY7F,GAC1CA,IA0BnB,QAAA+F,GAA8BC,GAE1B,GACI/F,GACAgG,CAEJ,IAAIA,EAAIC,EAAgBC,KAAKH,GACzB/F,EAAO,MAEN,IAAIgG,EAAIG,EAAsBD,KAAKH,GACpC/F,EAAO,MAEN,CAAA,KAAIgG,EAAII,EAAkBF,KAAKH,IAOhC,KAAM,IAAIxI,OAAM,qBAAqBwI,EANrC/F,GAAO,EASX,OACIqG,cAAeL,EAAE,GACjBM,eAAgBC,EAAYP,EAAE,IAC9BhG,KAAMA,GAKd,QAAAuG,GAAqBC,GAKjB,MAJAA,GAAMA,EAAIC,QAAQ,SAAU,KACvBA,QAAQ,WAAYC,GACpBD,QAAQ,OAAQ,IAChBA,QAAQ,UAAWE,GAG5B,QAAAD,GAAmBF,GACf,MAAOA,GAAII,cAEf,QAAAD,GAAmBH,GACf,MAAOA,GAAIK,cAMf,QAAAC,GAAiCC,GAE7B,GAAIC,GAAYD,CAEhB,IAAIC,EACA,IAAK,GAAIpH,KAAOoH,GACRtJ,EAAAuJ,WAAWD,EAAIpH,MACfoH,EAAIpH,GAAOsH,EAASF,EAAIpH,GAAMoH,GAK1C,OAAOD,GAIX,QAAAG,GAA6CC,EAASC,GAElD,GAAIC,GAAQF,EAAKG,KAAKF,EAItB,OAFA1J,GAAA+D,QAAQ0F,EAAM,SAAC5I,EAAOL,GAAS,MAAAmJ,GAAMnJ,GAAQK,IAEtC8I,EAaX,QAAAE,GAAoBC,EAASC,GACvBA,EACFD,EAAIE,UAAYD,QAETD,GAAIE,UAKf,QAAAC,GAAoBC,EAASC,EAAYC,EAAcC,GAAA,SAAAA,IAAAA,GAAA,EAGrD,KAAK,GAFDN,GAAIG,EAAIF,UAEHrK,EAAI,EAAG2K,EAAKH,EAAKjK,OAAYoK,EAAJ3K,IAAUA,EAAG,CAC7C,GAAImK,GAAMK,EAAKxK,EACf,IAAKK,EAAAuK,SAAST,IAAS9J,EAAAuJ,WAAWO,GAElC,IAAK,GADDU,GAAO3I,OAAO2I,KAAKV,GACdW,EAAI,EAAGC,EAAKF,EAAKtK,OAAYwK,EAAJD,EAAQA,IAAK,CAC7C,GAAIvI,GAAMsI,EAAKC,GACXE,EAAMb,EAAI5H,EAEVkI,IAAQpK,EAAAuK,SAASI,IACd3K,EAAAuK,SAASL,EAAIhI,MAAOgI,EAAIhI,GAAOlC,EAAA4K,QAAQD,UAC5CV,EAAWC,EAAIhI,IAAOyI,IAAM,IAClBN,GAAkB,MAAPM,IACrBT,EAAIhI,GAAOyI,IAMjB,MADAd,GAAWK,EAAKH,GACTG,EAGT,QAAAW,GAAuBX,GACnB,MAAOD,GAAWC,KAAQ9I,MAAMnB,KAAKyD,UAAW,IAAI,GAAM,GAnP9D,GAAAiD,GAAAzH,EAAqD,eAM1Cc,GAAAgE,UAAY8G,QAAQ9G,UACpBhE,EAAAgB,SAAW8J,QAAQ9J,SACnBhB,EAAAmH,SAAW2D,QAAQ3D,SACnBnH,EAAAuK,SAAWO,QAAQP,SACnBvK,EAAA+K,UAAYD,QAAQC,UACpB/K,EAAAgL,OAASF,QAAQE,OACjBhL,EAAA4K,QAAUE,QAAQF,QAClB5K,EAAAuJ,WAAauB,QAAQvB,WACrBvJ,EAAA+D,QAAU+G,QAAQ/G,QAClB/D,EAAAiL,OAA2BH,QAAQG,OACnCjL,EAAAkL,KAAyBJ,QAAQI,KACjClL,EAAAmL,MAAiCL,QAASK,MAC1CnL,EAAAoL,aAAiCP,EAW5B7K,EAAAyH,OAAMA,EAMNzH,EAAA0H,MAAKA,EAcL1H,EAAAkG,eAAcA,EAgBdlG,EAAAsG,cAAaA,EAgBbtG,EAAA+H,mBAAkBA,EA4BlC,SAAkBsD,GACdA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,MAAA,GAAA,QAEAA,EAAAA,EAAA,IAAA,GAAA,OAJcrL,EAAAqL,eAAArL,EAAAqL,iBAAlB,IAaM5C,IAbYzI,EAAAqL,aAaY,+BACxB3C,EAAoB,4BAEpBH,EAAkB,yBAERvI,GAAAoI,cAAaA,EA+CbpI,EAAAoJ,cAAaA,EAgBbpJ,EAAAwJ,SAAQA,wDC9HxB,QAAA8B,GAAkCC,EAAsC9E,GAKpE,GAAI6C,GAAM3C,EAAAvE,eAAemJ,EAAgBC,EAEzC,KAAKlC,EAAIpJ,OACL,KAAM,IAAIL,OAAM,8BAGpB,IAAKW,GAAQmG,EAAAnD,iBAAgBsE,MAAA,QAAsB2D,EAAAhE,OAAO+D,IAAoB5I,OAAK0G,IAAI9I,IAIvFiG,GAASd,UAAUnF,EAAM2D,EAAA2C,YAAY,aAAc,SAASrC,GACxD,GAAIiH,GAAwBjH,EAAUkH,YAAYJ,EAElD,OADAE,GAAArC,cAAcsC,GACPA,KAlFf,GAAA/E,GAAAzH,EAA+C,gBAC/CiF,EAAAjF,EAAyB,QACzB6B,EAAA7B,EAAwE,WACxEuM,EAAAvM,EAAgD,WAmBhDsM,EAAA,WAII,QAAAA,GAAY9F,GAFZnF,KAAAC,KAAe,KAGXO,EAAAmF,eAAe3F,KAAMmF,GAG7B,MAAA8F,KARaxL,GAAAwL,oBAAmBA,EAqCrBxL,EAAA4L,UAAiC7K,EAAAuF,cAAckF,GAK1CxL,EAAAsL,kBAAiBA,uRC/DjCO,EAAA3M,EAAqB,YACrB6B,EAAA7B,EAAuD,WACvD4M,EAAA5M,EAAyE,YAgBzE6M,EAAA,SAAAtG,GAOC,QAAAsG,GAAYC,GACXvG,EAAAxF,KAAAM,KAAMmF,GALPnF,KAAA0L,QAA4B,MAO3B,IAAIvG,GAAU3E,EAAAgK,UAAUiB,IAAsBC,QAASD,GAAqBA,CAGtEH,GAAApK,OAAOiE,GAAWA,EAAQuG,QAAS,4BAIzClL,EAAAmF,eAAe3F,KAAMmF,GAGvB,MApB2CS,GAAA4F,EAAAtG,GAoB3CsG,GApB2CD,EAAAI,iBAA9BlM,GAAA+L,sBAAqBA,EA4CvB/L,EAAAmM,YAAqCpL,EAAAuF,cAAcyF,yFC5B9D,QAAAK,GAA0BC,EAAgCJ,EACtDK,EAAkCC,GAKlC,GAAIjD,GAAM3C,EAAAvE,eAAeiK,EAAaP,EAAAI,iBAGtCL,GAAApK,OAAOD,SAAS8H,EAAK,6CAErB,IAAInG,GAAqCwD,EAAAnD,iBAAgBsE,MAAA,YAAGlF,OAAK0G,GAEjE2C,GAAUA,GAAW9I,EAAW8I,QAGhCJ,EAAApK,OAAOwK,EAAS,2BAEhB,IAAIxF,GAAWqF,EAAAU,cAAcH,EAAa,KAAMC,EAAcC,EAE9D,OAAOzB,SAAQsB,UAAgBH,GAAUxF,EAASjG,OAlCtD,GAAAqL,GAAA3M,EAAqB,YAErByH,EAAAzH,EAA+C,gBAG/C4M,EAAA5M,EAAoF,WASpEc,GAAAoM,UAASA,mSCnCzBrL,EAAA7B,EAA4C,WAC5CmG,EAAAnG,EAA0C,WAO1C,SAAkBuN,GACdA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,OAAA,GAAA,UAHczM,EAAAyM,6BAAAzM,EAAAyM,+BAAAzM,GAAAyM,0BASLzM,GAAA0M,eAAiB,OAAQ,MAAO,OAuB7C,IAAAC,GAAA,SAAAlH,GAKI,QAAAkH,GAAYjH,GACRD,EAAAxF,KAAAM,KAAMmF,GAJVnF,KAAAqM,UAAwC,OACxCrM,KAAAwI,QAAmB,OAIfhI,EAAAmF,eAAe3F,KAAMmF,GAG7B,MAV6CS,GAAAwG,EAAAlH,GAU7CkH,GAV6CtH,EAAAe,eAAhCpG,GAAA2M,wBAAuBA,EAiBzB3M,EAAA6M,cAAyC9L,EAAAuF,cAAcqG,wECmClE,QAAAG,GAAiCC,EAAsCtG,GAGnEoF,EAAApK,OAAOkF,EAAArD,iBAAiByJ,EAAgBC,GAAsB,iCAC9DnB,EAAApK,OAAOkF,EAAAvD,cAAc2J,EAAgB1H,EAAAe,gBAAiB,2BAEtD,IAAIvC,GAAkBoJ,EAAqBF,GAAtCvM,EAAIqD,EAAArD,KAAE0M,EAAOrJ,EAAAqJ,OAMlB,OAFAzG,GAAS0G,UAAU3M,EAAM0M,GAElBzG,EAOX,QAAA2G,GAAgCL,GAE5B,GAAIM,GAAkCC,EAAAC,aAAoCR,GAKtEzD,EAAM3C,EAAAvE,eAAe2K,EAAgB1H,EAAAe,gBACrCoH,IAaJ,IAZA7G,EAAAnD,iBAAgBsE,MAAA,QAAC0F,GAAI5K,OAAK0G,IAErBvI,EAAAiD,UAAUqJ,EAAIxI,SAAQwI,EAAIxI,UAC1B9D,EAAAiD,UAAUqJ,EAAII,oBAAmBJ,EAAII,kBAAmB,GACzD1M,EAAAiD,UAAUwJ,EAAKE,gBAAeL,EAAIK,aAAeF,EAAKE,cACtD3M,EAAAiD,UAAUwJ,EAAKZ,aAAYS,EAAIM,kBAAoBC,EAAAlB,cAAcc,EAAKZ,YAEtE7L,EAAAiD,UAAUwJ,EAAKK,UACfR,EAAIQ,OAAgC,gBAAhBL,GAAKK,QAAgCL,EAAKK,QAAUL,EAAKK,QAI7E9M,EAAAiD,UAAUwJ,EAAKM,UAAWT,EAAIS,SAAWN,EAAKM,aAC7C,CAAA,IAAI/M,EAAAiD,UAAUwJ,EAAKO,aACnB,KAAM,IAAIlO,OAAM,gEADiBwN,GAAIU,YAAcP,EAAKO,YAG7D,MAAOV,GAOX,QAAAW,GAA0BX,EAAgC5I,GAsBtD,MApBI1D,GAAAwI,WAAW8D,EAAIS,YACfT,EAAIS,SAAY3J,EAAA8J,YAAkBZ,EAAIS,UAA2B,SAACI,EAAeC,GAC7E,MAAO1J,GAAUO,OAAaqI,EAAIS,SAAU,MACxC7B,QAASiC,EACTE,WAAYD,KAH8Bd,EAAIS,UAQtD/M,EAAAwI,WAAW8D,EAAIU,eACfV,EAAIU,YAAe5J,EAAA8J,YAAkBZ,EAAIU,aAAiC,SAACG,EAAeC,GACtF,MAAO1J,GAAUO,OAAaqI,EAAIU,YAAa,MAC3C9B,QAASiC,EACTE,WAAYD,KAHoCd,EAAIU,aAUzDV,EAOX,QAAAJ,GAAqCF,GAEjC,GAAIM,GAAMD,EAAgBL,GAEtBG,EAAU/I,EAAA2C,YAAY,aAAc,SAA0BrC,GAE9D,GAAI4I,EAAIQ,OACJ,IAAK,GAAIlO,GAAI,EAAGA,EAAI0N,EAAIQ,OAAO3N,OAAQP,IACnC0O,EAAYhB,EAAIQ,OAAOlO,GAAI,iBAAiB0N,EAAIzE,eAAc,IAAIjJ,EAO1E,OAAaqO,GAAUV,EAAAU,UAAmBX,EAAK5I,GAAYA,IAG/D,QACIjE,KAAM6M,EAAIzE,eACVsE,QAASA,GAKjB,QAAAmB,GAAqBC,EAAeC,GAEhCA,EAAK,IAAIA,CACT,IAAIC,GAAOC,SAASD,IAEpB,KAAIA,EAAKE,cAAcH,GAAvB,CAIA,GAAII,GAAKF,SAASG,cAAc,QAChCD,GAAGJ,GAAKA,EACRI,EAAGrM,KAAO,WACVqM,EAAGE,YAAcP,EACjBE,EAAKM,aAAaH,EAAIH,EAAKE,cAAc,4MAlN7C7C,EAAA3M,EAAqB,YACrBiF,EAAAjF,EAA8C,QAC9C6B,EAAA7B,EAAwE,WAExEyH,EAAAzH,EAA+F,gBAC/FmG,EAAAnG,EAA6B,UAC7B0O,EAAA1O,EAAqD,oBACrD6P,EAAA7P,EAAgE,eAEhEoO,EAAApO,EAAuF,eAEvF8P,EAAA9P,EAAmB,cAAXc,GAAAiP,KAAAD,EAAAC,IAcR,IAAAjC,GAAA,SAAAvH,GAEI,QAAAuH,GAAYtH,GACRD,EAAAxF,KAAAM,KAAMmF,GAId,MAPyCS,GAAA6G,EAAAvH,GAOzCuH,GAPyC+B,EAAAG,0BAA5BlP,GAAAgN,oBAAmBA,EAmDrBhN,EAAAmP,UAA0CpO,EAAAuF,cAAc0G,GAgBnDhN,EAAA8M,iBAAgBA,EAmBhB9M,EAAAoN,gBAAeA,EAgCfpN,EAAAgO,UAASA,EA6BThO,EAAAiN,qBAAoBA,0LC/IpC,QAAAmC,GAA+B5O,EAAcK,GAKzC,MAFAgL,GAAApK,OAAOD,SAAShB,EAAM,gCAEf,GAAI6O,GAAgB7O,EAAMK,GAIrC,QAAAyO,GAAsCC,EAAiC9I,EAAsBjG,GAQzF,MALAqL,GAAApK,OAAO8N,YAAoBF,GAAiB,sCAE5C7O,EAAe,MAARA,EAAeA,EAAO+O,EAAS/O,KACtCiG,EAAS8I,SAAS/O,EAAM+O,EAAS1O,OAE1B4F,EA7CX,GAAAoF,GAAA3M,EAAqB,YAKrBmQ,EAAA,WAEI,QAAAA,GAAoBG,EAAuBC,GAAvBlP,KAAAiP,MAAAA,EAAuBjP,KAAAkP,OAAAA,EAW/C,MARI5N,QAAA6N,eAAIL,EAAAlO,UAAA,YAAJ,WACI,MAAOZ,MAAKiP,uCAGhB3N,OAAA6N,eAAIL,EAAAlO,UAAA,aAAJ,WACI,MAAOZ,MAAKkP,wCAGpBJ,IAbarP,GAAAqP,gBAAeA,EAuBZrP,EAAAoP,SAAQA,EASRpP,EAAAsP,gBAAeA,uFC+B/B,QAAAK,GAAiCC,EAAsCnJ,EAAsBjG,GAKzF,GAAI8I,GAAM3C,EAAAvE,eAAewN,EAAgBC,EAEzC,KAAKvG,EAAIpJ,OACL,KAAM,IAAIL,OAAM,iCAGpB,IAAIsD,GAAmCwD,EAAAnD,iBAAgBsE,MAAA,QAAC/G,EAAA0G,OAAOoI,IAAoBjN,OAAK0G,GAGxF,IAFA9I,EAAe,MAARA,EAAeA,EAAO2C,EAAW3C,MAEnCO,EAAAwI,WAAWqG,EAAezO,UAAUoD,UACrC,KAAM,IAAI1E,OAAM,cAAcW,EAAI,yCAiBtC,OAdAiG,GAASqJ,OAAO3L,EAAA2C,YAAY,YAAa,SAASiJ,GAC9CA,EAASC,UAAUxP,EAAM2D,EAAA2C,YAAY,YAAa,aAAc,SAASmJ,EAAgBxL,GAErF,GAAIyL,GAAuBzL,EAAUkH,YAAYiE,GAC7CK,UAAWA,GAGf,OAAOxL,GAAUO,OAAOkL,EAAS3L,SAAU2L,GACvCD,UAAWA,UAMhBxJ,EArGX,GAAAtC,GAAAjF,EAAyB,QACzByH,EAAAzH,EAA+C,gBAC/C6B,EAAA7B,EAAgE,WAmBhE2Q,EAAA,WAII,QAAAA,GAAYnK,GAFZnF,KAAAC,KAAe,KAGXO,EAAAmF,eAAe3F,KAAMmF,GAG7B,MAAAmK,KARa7P,GAAA6P,oBAAmBA,EA8CrB7P,EAAAoF,UAAiCrE,EAAAuF,cAAcuJ,GAE1C7P,EAAA2P,iBAAgBA,oFCmEhC,QAAAQ,GAAuBC,GAEnB,MAAO,UAAS/N,EAAagO,GAEzB,GAAIC,GAAU,GAAIC,GAAeF,EAAaD,EAC9CzJ,GAAAzD,cAAcb,EAAOf,YAAagP,IAY1C,QAAAE,GAAiCC,EAAsChK,GAGnEoF,EAAApK,OAAOkF,EAAArD,iBAAiBmN,EAAgBC,GAAsB,uCAE9D,IAAI7M,GAAkB8M,EAAqBF,GAAtCjQ,EAAIqD,EAAArD,KAAE0M,EAAOrJ,EAAAqJ,OAMlB,OAFAzG,GAAS0G,UAAU3M,EAAM0M,GAElBzG,EAoCX,QAAA8G,GAA6BkD,GAKzB,GAAInH,GAAM3C,EAAAvE,eAAeqO,EAAgBvB,GACrC/L,IACJwD,GAAAnD,iBAAgBsE,MAAA,QAAC3E,GAAUP,OAAK0G,GAEhC,IAAIsH,GAAenF,EAAArD,cAAcjF,EAAWkF,UAExCwI,GACAC,aAAcF,EAAajI,cAC3BC,eAAgBgI,EAAahI,eAC7BmI,SAAUC,EAAgBJ,EAAatO,MACvC2O,WAAYR,EAGZ1P,GAAAiD,UAAUb,EAAW+N,cAAaL,EAAIK,WAAaC,EAAiBhO,EAAW+N,aAC/EnQ,EAAAiD,UAAUb,EAAWiO,WAAUP,EAAIO,QAAUjO,EAAWiO,SACxDrQ,EAAAiD,UAAUb,EAAWkO,QAAOR,EAAIQ,KAAOlO,EAAWkO,MAGlDtQ,EAAAiD,UAAUb,EAAW0B,SAAQgM,EAAIhM,MAAQ1B,EAAW0B,MAIxD,IAAIyM,GAAqC3K,EAAAvE,eAAeqO,EAAgBF,EACxE,IAAIe,EAAgBpR,OAAQ,CAExB,IAAiB,GADbqR,MACa9N,EAAA,EAAZA,EAAA6N,EAAApR,OAAAuD,IAA4B,CAA5B,GAAImG,GAAQ0H,EAAe7N,EAC5B8N,GAAI3H,EAAKyG,aAAezG,EAAKwG,QAEjCS,EAAIpD,iBAAmB8D,MAElBxQ,GAAAiD,UAAUb,EAAWsK,oBAAmBoD,EAAIpD,iBAAmBtK,EAAWsK,iBAEnF,OAAOoD,GAOX,QAAAW,GAAgCf,GAE5B,GAAII,GAAMtD,EAAoCkD,GAK1CnH,EAAM3C,EAAAvE,eAAeqO,EAAgBC,GACrCvN,IAOJ,OANAwD,GAAAnD,iBAAgBsE,MAAA,QAAC3E,GAAUP,OAAK0G,IAE5BvI,EAAAiD,UAAUb,EAAWsO,gBAAeZ,EAAIY,aAAetO,EAAWsO,cAClE1Q,EAAAiD,UAAUb,EAAWuO,YAAWb,EAAIa,SAAWvO,EAAWuO,UAC1D3Q,EAAAiD,UAAUb,EAAWwO,YAAWd,EAAIc,SAAWxO,EAAWwO,UAEvDd,EAOX,QAAA7C,GAA0B6C,EAAgCpM,GAatD,GAXI1D,EAAAwI,WAAWsH,EAAIO,WACfP,EAAIO,QAAWjN,EAAA8J,YAAY4C,EAAIO,SAC3B,SAAClD,EAAeC,EAAa+C,GACzB,MAAOzM,GAAUO,OAAO6L,EAAIO,QAAS,MACjCQ,SAAU1D,EACV2D,OAAQ1D,EACR2D,YAAaZ,KALiBL,EAAIO,SAU1B,gBAAbP,GAAIQ,KAAmB,CAC9B,GAAIU,GAASlB,EAAII,WAAW9P,UAAmB0P,EAAIQ,KAQ/CR,GAAIQ,KAPHlN,EAAA8J,YAAY8D,GAOF,SAASlN,EAAYmN,EAAeC,EAAaC,EAAkBhB,GAC1E,GAAID,GAAanG,QAAQF,QAAQsH,GAAeA,EAAYA,EAAYC,OAAS,GAAKD,CACtF,OAAOzN,GAAUO,OAAa+M,EAAQd,GAClCmB,OAAQvN,EACR+M,SAAUI,EACVH,OAAQI,EACRI,YAAaH,EACbI,aAAcJ,EACdJ,YAAaZ,KAdV,SAASrM,EAAYmN,EAAeC,EAAaC,GACxD,GAAIjB,GAAanG,QAAQF,QAAQsH,GAAeA,EAAYA,EAAYC,OAAS,GAAKD,CACtFH,GAAOjK,MAAMmJ,GAAc,QAAS7P,MAAMnB,KAAKyD,UAAW,SAiBjE,IAAIS,EAAA8J,YAAkB4C,EAAIQ,MAAO,CAClC,GAAIU,GAASlB,EAAIQ,IACjBR,GAAIQ,KAAO,SAACxM,EAAYmN,EAAeC,EAAaC,EAAkBhB,GAClE,MAAOzM,GAAUO,OAAa+M,EAAQ,MAClCK,OAAQvN,EACR+M,SAAUI,EACVH,OAAQI,EACRI,YAAaH,EACbI,aAAcJ,EACdJ,YAAaZ,KAKzB,MAAOL,GAOX,QAAAF,GAAqCF,GAEjC,GAAII,GAAMW,EAAgBf,GAEtBvD,EAAU/I,EAAA2C,YAAY,aAAc,SAA0BrC,GAC9D,MAAauJ,GAAU6C,EAAKpM,IAGhC,QACIjE,KAAMqQ,EAAIjI,eACVsE,QAASA,oMA3UjBrB,EAAA3M,EAAqB,YAErBiF,EAAAjF,EAA8C,QAC9C6B,EAAA7B,EAAgF,WAChFuM,EAAAvM,EAA6F,WAC7FyH,EAAAzH,EAAgF,iBAOhF,SAAkBqT,GACdA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,QAAA,GAAA,WAFcvS,EAAAuS,eAAAvS,EAAAuS,iBAAlB,IAIMpB,IAJYnR,EAAAuS,eAIQ,EAAM,YAuChCrD,EAAA,WAUI,QAAAA,GAAYxJ,GARZnF,KAAA8H,SAAmB,OACnB9H,KAAAsE,MAA6B,OAC7BtE,KAAAkN,iBAA4B,OAC5BlN,KAAArB,QAAoB,OACpBqB,KAAA2Q,WAA2B,OAC3B3Q,KAAA6Q,QAAoD,OACpD7Q,KAAA8Q,KAAgD,OAI5CxF,EAAApK,OAAOF,QAAQmE,EAAS,4BACxBmG,EAAApK,OAAOD,SAASkE,EAAQ2C,SAAU,sCAElCtH,EAAAmF,eAAe3F,KAAMmF,GAG7B,MAAAwJ,KAlBalP,GAAAkP,0BAAyBA,CAkCtC,IAAAwB,GAAA,SAAAjL,GAMI,QAAAiL,GAAYhL,GACRD,EAAAxF,KAAAM,KAAYmF,GALhBnF,KAAAkR,aAAwB,OACxBlR,KAAAmR,SAAmB,OACnBnR,KAAAoR,SAAoB,OAIhB5Q,EAAAmF,eAAe3F,KAAMmF,GAG7B,MAXyCS,GAAAuK,EAAAjL,GAWzCiL,GAXyCxB,EAA5BlP,GAAA0Q,oBAAmBA,EAgCrB1Q,EAAAwS,UAAiCzR,EAAAuF,cAAcoK,EAO1D,IAAAH,GAAA,WACI,QAAAA,GACWF,EACAD,GADA7P,KAAA8P,YAAAA,EACA9P,KAAA6P,QAAAA,EAEf,MAAAG,KALavQ,GAAAuQ,eAAcA,EAkBhBvQ,EAAAiP,KAAOkB,EAMFnQ,EAAAwQ,iBAAgBA,CAqChC,IAAMQ,IAA+BnN,KACjCA,EAAC,GAAyB,IAC1BA,EAAC,GAAmB,IACpBA,EAAC,GAAqB,MAOV7D,GAAAuN,aAAYA,EA4CZvN,EAAAwR,gBAAeA,EAsBfxR,EAAAgO,UAASA,EAwDThO,EAAA2Q,qBAAoBA,gGCtTpC,QAAA7J,GAA+CwF,EAAwB7C,GAMtE,MADGA,GAAKgJ,QAAUnG,EAAalL,QACxBqI,EAWR,QAAAD,GAA6CC,EAASC,GAElD,GAAIC,GAAQF,EAAKG,KAAKF,EAMtB,OAJCD,GAAKgJ,UACR9I,EAAM8I,QAAUhJ,EAAKgJ,SAGZ9I,EAYX,QAAAxE,GAAuBuN,GAEtB,MAAO,UAACrQ,EAAkBgO,EAA4BsC,GAOrDtQ,EAAgC,mBAAfgO,GAA8BhO,EAASA,EAAeA,EAAQgO,EAK/E,IAAIoC,GAAqBpQ,EAAOoQ,QAAUpQ,EAAOoQ,WACjDA,GAAQE,GAAkBD,GAW5B,QAAAzE,GAA4BxE,GAE3B,MAAOA,IAAQA,EAAK9B,eAAe,WAjEpB3H,EAAA8G,WAAUA,EAiBV9G,EAAAwJ,SAAQA,EAoBRxJ,EAAAmF,OAAMA,EA0BNnF,EAAAiO,YAAWA,qCCK3B,QAAA2E,GAA+BC,EAAgCpM,GAK3D,GAAI6C,GAAM3C,EAAAvE,eAAeyQ,EAAaC,EAEtC,KAAKxJ,EAAIpJ,OACL,KAAM,IAAIL,OAAM,8BAGpB,IAAIkT,GAAQpM,EAAAnD,iBAAgBsE,MAAA,QAAmB/G,EAAA0G,OAAOqL,IAAiBlQ,OAAK0G,GAE5E,KAAKvI,EAAAwI,WAAWsJ,EAAY1R,UAAU4B,QAClC,KAAM,IAAIlD,OAAM,WAAWkT,EAAMvS,KAAI,uCAGzCiG,GAAS1D,OAAOgQ,EAAMvS,KAAM2D,EAAA2C,YAAY,aAAc,SAASrC,GAC3D,GAAIuO,GAA2BvO,EAAUkH,YAAYkH,GACjDI,EAAoBD,EAAgBjQ,OAAO6G,KAAKoJ,EAMpD,OAJID,GAAMG,WACND,EAAkBE,WAAY,GAG3BF,KAzGf,GAAAtM,GAAAzH,EAA+C,gBAC/C6B,EAAA7B,EAAgE,WAChEiF,EAAAjF,EAAyB,QA4BzB4T,EAAA,WAKI,QAAAA,GAAYpN,GAHZnF,KAAAC,KAAe,OACfD,KAAA2S,SAAoB,OAGhBnS,EAAAmF,eAAe3F,KAAMmF,GAG7B,MAAAoN,KATa9S,GAAA8S,iBAAgBA,EA6ClB9S,EAAAoT,OAA8BrS,EAAAuF,cAAcwM,GAKvC9S,EAAA4S,eAAcA,iFCe9B,QAAAS,KAEI,MAAO,2BAA0BC,EAOrC,QAAA9G,GAA8BH,EAAgC7L,EAC1D8L,EAAkCC,GA6BlC,QAAAgH,GAA2BC,GAGvB,GAAI/H,EAAAzK,SAASwS,GACTC,EAAQjR,KAAKgR,OAEZ,IAAI/H,EAAAb,QAAQ4I,GACb,IAAiB,GAAA/P,GAAA,EAAAI,EAAe2P,EAA3B/P,EAAAI,EAAA3D,OAAAuD,IAA+B,CAA/B,GAAIiQ,GAAI7P,EAAAJ,EACT8P,GAAkBG,OAGrB,IAAI/M,EAAAvD,cAAcoQ,EAAKtH,GAMpBuH,EAAQjR,KAAKgK,EAAkCgH,GAAKhT,UAGvD,IAAIgT,YAAeG,GAAAtE,gBACpBuE,EAAUpR,KAAKgR,OAEd,IAAIA,YAAeK,GAAAC,aACpBC,EAAOvR,KAAKgR,OAEX,IAAI7M,EAAAvD,cAAcoQ,EAAKQ,EAAAC,mBACxBC,EAAS1R,KAAKgR,OAEb,IAAI7M,EAAAvD,cAAcoQ,EAAKpP,EAAAyL,qBACxBsE,EAAW3R,KAAKgR,OAEf,IAAI7M,EAAAvD,cAAcoQ,EAAKY,EAAAtB,kBACxBuB,EAAQ7R,KAAKgR,OAEZ,IAAI7M,EAAAvD,cAAcoQ,EAAKc,EAAA9I,qBACxB+I,EAAW/R,KAAKgR,OAEf,IAAI7M,EAAAvD,cAAcoQ,EAAKgB,EAAAxH,qBACxByH,EAAWjS,KAAKgR,OAEf,CAAA,IAAI7M,EAAAvD,cAAcoQ,EAAKzE,EAAA2B,qBAKxB,KAAM,IAAI7Q,OAAM,sDAAsD2T,EAJtEkB,GAAWlS,KAAKgR,IAlExB,GAAIlK,GAAM3C,EAAAvE,eAAeiK,EAAaH,EAGtCL,GAAApK,OAAOD,SAAS8H,EAAK,6BAGrB,IAAIqL,EACJ,IAAIA,EAAchO,EAAA9D,QAAQC,eAAe8R,EAA0BvI,GAC/D,MAAOvB,SAAQ1K,OAAOuU,EAG1B,IAAIxR,GAAgCwD,EAAAnD,iBAAgBsE,MAAA,QAACjG,OAAO4F,OAAO,OAAK7E,OAAK0G,IAEzEsK,KACAG,KACAG,KACAC,KACAE,KACAE,KACAE,KACAC,KACAjB,KAsDAoB,KAAajS,OACZO,EAAWmJ,iBACXA,MAGLuI,GAAQ9Q,QAAQ,SAACyP,GAAQ,MAAAD,GAAkBC,KAE3ChT,EAAOA,GAAQ2C,EAAW3C,MAAQ6S,GAGlC,IAAI5M,GAAWqE,QAAQ1K,OAAOI,EAAMiT,GAIhCrT,EAASyB,OAAO4F,OAAO4E,EAAYlL,UACvCkL,GAAYvE,MAAM1H,GAASqG,GAAU7D,OAAO2J,OAG5C,IAAIuI,KACArJ,GAAAlC,WAAWnJ,EAAO2U,WAAWD,EAAUtS,KAAK2B,EAAAqF,SAASpJ,EAAO2U,SAAU3U,IACtE+C,EAAW2M,SACPrE,EAAAlC,WAAWpG,EAAW2M,QAASgF,EAAUtS,KAAgBW,EAAW2M,QAC/DrE,EAAAb,QAAQzH,EAAW2M,UAASgF,EAAYA,EAAUlS,OAAoBO,EAAW2M,SAE9F,KAAe,GAAArM,GAAA,EAAVA,EAAAqR,EAAA5U,OAAAuD,IAAoB,CAApB,GAAIuR,GAAMF,EAASrR,EAAEgD,GAASqJ,OAAOkF,GAG1C,GAAIC,KACAxJ,GAAAlC,WAAWnJ,EAAO8U,QAAQD,EAAOzS,KAAK2B,EAAAqF,SAASpJ,EAAO8U,MAAO9U,IAC7D+C,EAAW0D,MACP4E,EAAAlC,WAAWpG,EAAW0D,KAAMoO,EAAOzS,KAAgBW,EAAW0D,KACzD4E,EAAAb,QAAQzH,EAAW0D,OAAMoO,EAASA,EAAOrS,OAAoBO,EAAW0D,MAErF,KAAe,GAAAhD,GAAA,EAAVA,EAAAoR,EAAA/U,OAAA2D,IAAiB,CAAjB,GAAImR,GAAMC,EAAMpR,EAAE4C,GAASI,IAAImO,GAEpCG,EAAAC,cAAc/I,EAAa5F,GAC3B4O,EAAAC,eAAejJ,EAAa5F,EAE5B,KAAiB,GAAA8O,GAAA,EAAZA,EAAAxB,EAAA7T,OAAAqV,IAAmB,CAAnB,GAAIC,GAAQzB,EAAMwB,EAAE1B,GAAA4B,aAAaD,EAAM/O,GAC5C,IAAiB,GAAAiP,GAAA,EAAZA,EAAA9B,EAAA1T,OAAAwV,IAAsB,CAAtB,GAAIF,GAAQ5B,EAAS8B,EAAE/B,GAAArE,gBAAgBkG,EAAM/O,GAClD,IAAiB,GAAAkP,GAAA,EAAZA,EAAAtB,EAAAnU,OAAAyV,IAAoB,CAApB,GAAIH,GAAQnB,EAAOsB,EAAEvB,GAAAxB,eAAe4C,EAAM/O,GAC/C,IAAiB,GAAAmP,GAAA,EAAZA,EAAArB,EAAArU,OAAA0V,IAAuB,CAAvB,GAAIJ,GAAQjB,EAAUqB,EAAEtB,GAAAhJ,kBAAkBkK,EAAM/O,GACrD,IAAiB,GAAAoP,GAAA,EAAZA,EAAA3B,EAAAhU,OAAA2V,IAAqB,CAArB,GAAIL,GAAQtB,EAAQ2B,EAAE7B,GAAA8B,eAAeN,EAAM/O,GAChD,IAAiB,GAAAsP,GAAA,EAAZA,EAAA5B,EAAAjU,OAAA6V,IAAuB,CAAvB,GAAIP,GAAQrB,EAAU4B,EAAE3R,GAAAuL,iBAAiB6F,EAAM/O,GACpD,IAAiB,GAAAuP,GAAA,EAAZA,EAAAvB,EAAAvU,OAAA8V,IAAuB,CAAvB,GAAIR,GAAQf,EAAUuB,EAAExB,GAAA1H,iBAAiB0I,EAAM/O,GACpD,IAAiB,GAAAwP,GAAA,EAAZA,EAAAvB,EAAAxU,OAAA+V,IAAuB,CAAvB,GAAIT,GAAQd,EAAUuB,EAAElH,GAAAyB,iBAAiBgF,EAAM/O,GAIpD,MAFAE,GAAA9D,QAAQI,eAAe2R,EAA0BpU,EAAM6L,GAEhD5F,EAzOX,GAAAoF,GAAA3M,EAAqB,YACrByH,EAAAzH,EAAuE,gBACvE6B,EAAA7B,EAAsE,WACtEiF,EAAAjF,EAAuB,QACvBuM,EAAAvM,EAAoD,WACpD2U,EAAA3U,EAAyC,WACzCyU,EAAAzU,EAA+C,cAC/CkV,EAAAlV,EAA+C,YAC/CoV,EAAApV,EAAqD,eACrD8U,EAAA9U,EAAgD,aAChDkF,EAAAlF,EAAoD,eACpD6P,EAAA7P,EAAoD,eACpDsV,EAAAtV,EAAoD,eACpDiW,EAAAjW,EAA4B,sBAC5BmW,EAAAnW,EAA6B,sBAIvB0V,EAA2B,0BA4BjC1I,EAAA,WAgBC,QAAAA,GAAYxG,GAdZnF,KAAAC,KAAe,OACfD,KAAA+L,aAAkC,OAClC/L,KAAAuP,OAA8B,OAC9BvP,KAAAsG,IAA2B,OAYpB9F,EAAAmF,eAAe3F,KAAMmF,GAG7B,MAAAwG,KApBalM,GAAAkM,iBAAgBA,EA4ClBlM,EAAAkW,OAA2BnV,EAAAuF,cAAc4F,EAEpD,IAAIoH,GAAc,CAWFtT,GAAAwM,cAAaA,mZClC7B,QAAAsJ,GAA+BK,EAAkC1P,EAAsBjG,GAKnF,GAAI8I,GAAM3C,EAAAvE,eAAe+T,EAAclC,EAGvCpI,GAAApK,OAAOD,SAAS8H,EAAK,qCAErB,IAAInG,KACJwD,GAAAnD,iBAAgBsE,MAAA,QAAC3E,GAAUP,OAAK0G,GAEhC,IAAI9I,GAAe,MAARA,EAAeA,EAAO2C,EAAW3C,IAY5C,OAVI2C,GAAWiT,SACX3P,EAAS2P,SAAS5V,EAAY2C,EAAWiT,UAEpCjT,EAAW+J,QAChBzG,EAASyG,QAAQ1M,EAAM2C,EAAW+J,SAGlCzG,EAAS4P,QAAQ7V,EAAM2V,GAGpB1P,EA9FX,GAAAoF,GAAA3M,EAAqB,YAErByH,EAAAzH,EAA+C,gBAC/C6B,EAAA7B,EAAwD,WAyBxD+U,EAAA,WAMI,QAAAA,GAAYvO,GAJZnF,KAAAC,KAAe,OACfD,KAAA6V,SAA2D,OAC3D7V,KAAA2M,QAAoB,OAIhBrB,EAAApK,OAAOF,QAAQmE,EAAS,4BACxBmG,EAAApK,OAAOD,SAASkE,EAAQlF,KAAM,gCAE9BO,EAAAmF,eAAe3F,KAAMmF,GAG7B,MAAAuO,KAdajU,GAAAiU,kBAAiBA,EAoCnBjU,EAAAsW,QAA+BvV,EAAAuF,cAAc2N,GAKxCjU,EAAA8V,eAAcA,0FCmD9B,QAAA/Q,GAAgCwR,EAAsB1R,GAElD,GAAI2R,GAAa7P,EAAAvE,eAAemU,EAAYE,GACxCC,EAAY/P,EAAAvE,eAAemU,EAAYI,EAAAnR,oBAG3CqG,GAAApK,OAAO+U,EAAY,6BACnB3K,EAAApK,OAAOiV,EAAW,gCAElB,IAAIE,IACA3F,WAAYsF,GAGZM,IACJlQ,GAAAnD,iBAAgBsE,MAAA,QAAC+O,GAAKjU,OAAK4T,IAMvB3R,IACAgS,EAAMhS,MAAQA,GAGd9D,EAAAiD,UAAU6S,EAAMpJ,oBAChBmJ,EAASnJ,iBAAmBoJ,EAAMpJ,kBAGlC1M,EAAAiD,UAAU6S,EAAMC,WAChBF,EAASE,QAAUD,EAAMC,SAGzB/V,EAAAiD,UAAU6S,EAAM/Q,YAChB8Q,EAAS9Q,SAAW+Q,EAAM/Q,SAG9B,IAAI0H,KA+CJ,OA9CA7G,GAAAnD,iBAAgBsE,MAAA,QAAC0F,GAAI5K,OAAK8T,IAEtB3V,EAAAiD,UAAUwJ,EAAK7H,aACfiR,EAASjR,UAAY6H,EAAK7H,WAG1B5E,EAAAiD,UAAUwJ,EAAK5H,YACfgR,EAAShR,SAAW+Q,EAAApR,mBAAmBiI,EAAK5H,WAG5C7E,EAAAiD,UAAUwJ,EAAK3H,iBACf+Q,EAAS/Q,cAAgB2H,EAAK3H,eAG9B9E,EAAAiD,UAAUwJ,EAAK1H,YACf8Q,EAAS9Q,SAAW0H,EAAK1H,UAGzB/E,EAAAiD,UAAUwJ,EAAKzH,eACf6Q,EAAS7Q,YAAcyH,EAAKzH,aAG5BhF,EAAAiD,UAAUwJ,EAAKxH,qBACf4Q,EAAS5Q,kBAAoBwH,EAAKxH,mBAGlCjF,EAAAiD,UAAUwJ,EAAKvH,QACf2Q,EAAS3Q,KAAOuH,EAAKvH,MAGrBlF,EAAAiD,UAAUwJ,EAAKE,gBACfkJ,EAASlJ,aAAeF,EAAKE,cAe1B,GAAIqJ,GAAaF,EAAOrJ,EAAMoJ,waA3MzC/K,EAAA3M,EAAqB,gBAErBiF,EAAAjF,EAAiC,YACjC6B,EAAA7B,EAA4G,eAC5GyH,EAAAzH,EAA8D,oBAC9DyX,EAAAzX,EAAsD,gBAQtD8X,EAAA9X,EAAyD,eAAjDc,GAAAqG,UAAA2Q,EAAA3Q,UAAWrG,EAAAsF,cAAA0R,EAAA1R,aAkBnB,IAAAmR,GAAA,WASI,QAAAA,GAAY/Q,GAPZnF,KAAAsE,MAAyE,OACzEtE,KAAAkN,kBAA4B,EAE5BlN,KAAAuW,QAAyB,OACzBvW,KAAAuF,SAAoB,OACpBvF,KAAA0W,WAAsB,OAIlBlW,EAAAmF,eAAe3F,KAAMmF,GAI7B,MAAA+Q,KAfazW,GAAAyW,gBAAeA,EAsBjBzW,EAAAkX,MAAyBnW,EAAAuF,cAAcmQ,EAKlD,IAAAM,GAAA,WAII,QAAAA,GACYP,EACAE,EACAE,GAFArW,KAAAiW,WAAAA,EACAjW,KAAAmW,UAAAA,EACAnW,KAAAqW,SAAAA,EALJrW,KAAA2P,SAAkC,KAuD9C,MA/CI6G,GAAA5V,UAAAwD,KAAA,SACyBF,EACHD,EACK2S,GAEvB,GAAI3J,GAAOjN,KAAKmW,UACZG,EAAQtW,KAAKiW,WACbY,EAAmCtM,QAAQI,KAAK3K,KAAKqW,SAyBzD,OAvBIC,GAAMI,YACNE,EAAYF,aAGZlW,EAAAiD,UAAU6S,EAAMhS,SAChBuS,EAAiBvS,MAAQ9D,EAAAwI,WAAWsN,EAAMhS,OACtCJ,EAAUO,OAAa6R,EAAMhS,OACzBgS,EAAMhS,OAGd9D,EAAAiD,UAAUwJ,EAAKM,YACfsJ,EAAiBtJ,SAAW/M,EAAAwI,WAAWiE,EAAKM,UACxCrJ,EAAUO,OAAawI,EAAKM,UACfN,EAAKM,UAGtB/M,EAAAiD,UAAUwJ,EAAKO,eACfqJ,EAAiBrJ,YAAchN,EAAAwI,WAAWiE,EAAKO,aAC3CtJ,EAAUO,OAAawI,EAAKO,aACxBP,EAAKO,aAGjBxN,KAAK2P,SAAW1L,EAAOG,KAAKyS,GACrB7W,KAAK2P,UAIhB6G,EAAA5V,UAAAkW,QAAA,SAA+BF,GAEvB5W,KAAKiW,WAAWS,WAChBE,EAAYF,aAGZ1W,KAAK2P,SAASmH,WA1CtBpS,GACIC,EAAA,EAACf,EAAAgB,OAAO,cACRD,EAAA,EAACf,EAAAgB,OAAO,WACRD,EAAA,EAACf,EAAAgB,OAAO,iBAHZ4R,EAAA5V,UAAA,OAAI,MAoCJ8D,GAAQC,EAAA,EAACf,EAAAgB,OAAO,iBAAhB4R,EAAA5V,UAAA,UAAO,MAWX4V,IAzDa/W,GAAA+W,aAAYA,EA8DT/W,EAAA+E,gBAAeA,seCzH/B+G,EAAA5M,EAAqB,gBACrBoY,EAAApY,EAAoC,6BAOpCqY,EAAA,WAAA,QAAAA,MAQA,MARAA,GAAAtS,GAAC6G,EAAAoK,QACG1V,KAAM,mBACN8L,cACIgL,EAAAhT,+BAGKtE,GAAAuX,qBAAoBA,wGCejC,QAAAjC,GAA+B9O,EAA4BC,GAKvD,GAAIsM,GAA6BpM,EAAAvE,eAAeoE,EAAkBgR,EAElE,IAAKzE,EAAM7S,OAAX,CAEA,GAAIuX,KACJ1E,GAAMhP,QAAQ,SAAC2T,GAAS,MAAA/Q,GAAAnD,iBAAiBiU,EAAQC,EAAKD,UAEtDhR,EAASqJ,OAAO3L,EAAA2C,YAAY,sBAAuB,SAAC6Q,GAEhD5W,EAAAgD,QAAQ0T,EAAQ,SAAC3S,EAAS8S,GACR,MAAVA,EACAD,EAAmBE,UAAU/S,GAG7B6S,EAAmBG,KAAKF,EAAO9S,SAhD/C,GAAAX,GAAAjF,EAAyB,YACzB6B,EAAA7B,EAAkD,eAClDyH,EAAAzH,EAA+C,oBAO/CsY,EAAA,WAII,QAAAA,GAAYC,GACRlX,KAAKkX,OAASA,EAGtB,MAAAD,KARaxX,GAAAwX,iBAAgBA,EAelBxX,EAAA+X,OAA2BhX,EAAAuF,cAAckR,GAKpCxX,EAAAsV,eAAcA,uGC8C9B,QAAAF,GAA8B5O,EAA4BC,GAKtD,GAAIuR,GAAwCrR,EAAAvE,eAAeoE,EAAkByR,EAE7E,IAAID,EAAiB9X,OAAQ,CACzB,GAAIgY,KAGJnX,GAAAgD,QAAQiU,EAAkB,SAACN,SACvB3W,GAAAgD,QAAQ2T,EAAKQ,OAAQ,SAACC,SAClBD,GAAO1V,KAAK4V,EAAmBD,QAEvC1R,EAASqJ,OAAO3L,EAAA2C,YAAY,kBAAmB,SAACuR,GAE5C,IAAkB,GAAA5U,GAAA,EAAbA,EAAAyU,EAAAhY,OAAAuD,IAAoB,CAApB,GAAI0U,GAASD,EAAMzU,EACpB4U,GAAeF,MAAMA,OAMjCG,EAAA/R,iBAAiBC,EAAkBC,GAOvC,QAAA2R,GAA4BD,GAExB,GAAII,KAWJ,IATIxX,EAAAiD,UAAUmU,EAAM3X,QAAO+X,EAAgB/X,KAAO2X,EAAM3X,MACpDO,EAAAiD,UAAUmU,EAAMK,OAAMD,EAAgBC,IAAML,EAAMK,KAClDzX,EAAAiD,UAAUmU,EAAMM,YAAWF,EAAgBE,SAAWN,EAAMM,UAC5D1X,EAAAiD,UAAUmU,EAAMO,kBAAiBH,EAAgBG,eAAiBP,EAAMO,gBACxE3X,EAAAiD,UAAUmU,EAAMQ,WAAUJ,EAAgBI,QAAUR,EAAMQ,SAC1D5X,EAAAiD,UAAUmU,EAAMS,UAASL,EAAgBK,OAAST,EAAMS,QACxD7X,EAAAiD,UAAUmU,EAAMrB,WAAUyB,EAAgBzB,QAAUqB,EAAMrB,SAG1D/V,EAAAiD,UAAUmU,EAAMU,QAAS,CACzB,GAAIC,GAASX,EAAMU,MACd9X,GAAAC,SAAS8X,KACVA,EAAgCA,EAAQtY,MAGrC+X,EAAiBM,OAASC,EAUrC,GAAIX,EAAM3K,MAAQ2K,EAAMY,MAAO,CAC3B,GAAIA,KAEAZ,GAAM3K,KACNuL,EAAM,IAAMC,EAAgBb,EAAM3K,MAGlCzM,EAAAgD,QAAQoU,EAAMY,MAAO,SAAC9H,EAAYgI,GAAW,MAAAF,GAAME,GAAUD,EAAgB/H,KAGjFsH,EAAgBQ,MAAQA,MAEvB,IAAIZ,EAAMtB,MAAO,CAClB,GAAI/R,GAAUT,EAAAU,gBAAgBoT,EAAMtB,MAEpC,IAAI0B,EAAgBI,QAAS,CACzB,GAAIA,GAAqBJ,EAAgBI,OACzCJ,GAAgBI,QAAUxU,EAAA2C,YAAY,aAAc,SAASrC,GACzDA,EAAUO,OAAO2T,GACjBlU,EAAUO,OAAOF,EAAQH,KAAMG,SAInCyT,GAAgBI,QAAUxU,EAAAqF,SAAS1E,EAAQH,KAAMG,EAGrD,IAAIyT,EAAgBK,OAAQ,CACxB,GAAIA,GAAoBL,EAAgBK,MACxCL,GAAgBK,OAASzU,EAAA2C,YAAY,aAAc,SAASrC,GACxDA,EAAUO,OAAOF,EAAQuS,QAASvS,GAClCL,EAAUO,OAAO4T,SAIrBL,GAAgBK,OAASzU,EAAAqF,SAAS1E,EAAQuS,QAASvS,GAI3D,MAAOyT,GAOX,QAAAS,GAAyBE,GAKrB,GAAInG,GAAQpM,EAAAvE,eAAe8W,EAAW7T,EAAAe,eAEtC,KAAK2M,EAAM7S,OACP,KAAM,IAAIL,OAAM,uBAGpB,IAAIiO,GAA4BnH,EAAAnD,iBAAgBsE,MAAA,YAAGlF,OAAKmQ,IACpDoG,IAQJ,OANAA,GAAKlI,WAAaiI,EACdpL,EAASJ,eAAcyL,EAAKzL,aAAeI,EAASJ,cACpDI,EAASA,WAAUqL,EAAKrL,SAAWA,EAASA,UAC5CA,EAASC,cAAaoL,EAAKpL,YAAcD,EAASC,aAG/CoL,EArMX,GAAAhV,GAAAjF,EAAmC,YACnC6B,EAAA7B,EAA4F,eAC5FyH,EAAAzH,EAA+C,oBAC/CmG,EAAAnG,EAA6B,cAC7BoZ,EAAApZ,EAAmC,YACnCmF,EAAAnF,EAA8B,sBAE9Bka,EAAAla,EAAmB,aAAXc,GAAAqZ,KAAAD,EAAAC,IACR,IAAAC,GAAApa,EAA8C,WAAtCc,GAAAsH,iBAAAgS,EAAAhS,iBAAkBtH,EAAAuH,cAAA+R,EAAA/R,aAqC1B,IAAA0Q,GAAA,WAII,QAAAA,GAAYC,GAERnX,EAAAgD,QAAQmU,EAAQ,SAACC,EAAO3X,GAAS,MAAA2X,GAAM3X,KAAOA,IAC9CD,KAAK2X,OAASA,EAItB,MAAAD,KAXajY,GAAAiY,iBAAgBA,EAqBlBjY,EAAAuZ,OAAiCxY,EAAAuF,cAAc2R,GAC1DjY,EAAAuZ,OAAOC,GAAKlB,EAAA9Q,GAKIxH,EAAAoV,cAAaA,+KC9C7B,QAAAqE,GAA4BjZ,EAAcK,GAKtC,MAFAgL,GAAApK,OAAOD,SAAShB,EAAM,gCAEf,GAAIsT,GAAatT,EAAMK,GAIlC,QAAA4U,GAAmC5U,EAA2B4F,EAAsBjG,GAQhF,MALAqL,GAAApK,OAAOZ,YAAiBiT,GAAc,sCAEtCtT,EAAe,MAARA,EAAeA,EAAOK,EAAML,KACnCiG,EAAS5F,MAAML,EAAMK,EAAMA,OAEpB4F,EA7CX,GAAAoF,GAAA3M,EAAqB,YAKrB4U,EAAA,WAEI,QAAAA,GAAoBtE,EAAuBC,GAAvBlP,KAAAiP,MAAAA,EAAuBjP,KAAAkP,OAAAA,EAW/C,MARI5N,QAAA6N,eAAIoE,EAAA3S,UAAA,YAAJ,WACI,MAAOZ,MAAKiP,uCAGhB3N,OAAA6N,eAAIoE,EAAA3S,UAAA,aAAJ,WACI,MAAOZ,MAAKkP,wCAGpBqE,IAba9T,GAAA8T,aAAYA,EAuBT9T,EAAAyZ,MAAKA,EASLzZ,EAAAyV,aAAYA,+CCrC5B,GAAA5J,GAAA3M,EAAqB,YACrB6B,EAAA7B,EAAqE,WAwCrEkH,EAAA,WAQI,QAAAA,GAAYV,GANZnF,KAAAuN,SAA2C,OAC3CvN,KAAAwN,YAA8C,OAC9CxN,KAAAsN,OAA0B,OAE1BtN,KAAAmN,aAAuB,OAInB7B,EAAApK,OAAOF,QAAQmE,EAAS,4BACxBmG,EAAApK,OAAOD,SAASkE,EAAQgI,aAAc,wCAEtC3M,EAAAmF,eAAe3F,KAAMmF,GAG7B,MAAAU,KAhBapG,GAAAoG,eAAcA,EA0BhBpG,EAAAqZ,KAAuBtY,EAAAuF,cAAcF,qDCtEhD,GAAAjC,GAAAjF,EAAiC,OAAzBc,GAAAmF,OAAAhB,EAAAgB,OAAQnF,EAAA8G,WAAA3C,EAAA2C,UAChB,IAAA+M,GAAA3U,EAAoB,UAAZc,GAAAyZ,MAAA5F,EAAA4F,KACR,IAAA9F,GAAAzU,EAAuB,aAAfc,GAAAoP,SAAAuE,EAAAvE,QACR,IAAAgF,GAAAlV,EAAqB,WAAbc,GAAAoT,OAAAgB,EAAAhB,MACR,IAAAkB,GAAApV,EAAwB,cAAhBc,GAAA4L,UAAA0I,EAAA1I,SACR,IAAAoI,GAAA9U,EAAsB,YAAdc,GAAAsW,QAAAtC,EAAAsC,OACR,IAAAlS,GAAAlF,EAAwB,cAAhBc,GAAAoF,UAAAhB,EAAAgB,SACR,IAAAC,GAAAnG,EAAmB,SAAXc,GAAAqZ,KAAAhU,EAAAgU,IACR,IAAAzL,GAAA1O,EAAwD,mBAAhDc,GAAA6M,cAAAe,EAAAf,cAAe7M,EAAAyM,2BAAAmB,EAAAnB,0BACvB,IAAAsC,GAAA7P,EAA4C,cAApCc,GAAAwS,UAAAzD,EAAAyD,UAAWxS,EAAAuS,aAAAxD,EAAAwD,aAAcvS,EAAAiP,KAAAF,EAAAE,IACjC,IAAAuF,GAAAtV,EAAwB,cAAhBc,GAAAmP,UAAAqF,EAAArF,SACR,IAAArD,GAAA5M,EAAoC,WAA5Bc,GAAAkW,OAAApK,EAAAoK,OAAQlW,EAAAwM,cAAAV,EAAAU,aAChB,IAAAkN,GAAAxa,EAA0B,gBAAlBc,GAAAmM,YAAAuN,EAAAvN,WACR,IAAAwN,GAAAza,EAAwB,cAAhBc,GAAAoM,UAAAuN,EAAAvN;AlDXR,sBAAgC,SAAS,CAAC,CAAA;AAE1C,IAAI,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC;AAyBlC,wBAA+B,OAAgB;IAE3C,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;IAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,IAAI,GAAG,OAAO,GAAG,EAAE,CAAC;AAClD,CAAC;AAJe,sBAAc,iBAI7B,CAAA;AACD,CAAC;IACG,gBAAgB,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC,CAAC,CAAC;IACpD,EAAE,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;IAC/B,cAAc,CAAC,SAAS,GAAG,IAAU,EAAG,EAAE,CAAC;AAC/C,CAAC,CAAC,EAAE,CAAC;AAEL,iBAAiB,SAAkB,EAAE,cAAoB;IACrD,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QACb,MAAM,CAAC,cAAc,YAAY,KAAK,CAAC,GAAG,cAAc;YACpD,IAAU,cAAe,CAAC,cAAc,IAAI,kBAAkB,CAAC,CAAC;IACxE,CAAC;AACL,CAAC;AAED,kBAAkB,KAAU,EAAE,cAAoB;IACjD,OAAO,CAAC,KAAK,IAAI,IAAI,EAAE,cAAc,CAAC,CAAC;AACxC,CAAC;AAED,mBAAmB,KAAU,EAAE,cAAoB;IAC/C,QAAQ,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;IAEhC,EAAE,CAAC,CAAC,gBAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAClB,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE,cAAc,CAAC,CAAC;IACrD,CAAC;IACD,IAAI,CAAC,CAAC;QACF,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,cAAc,CAAC,CAAC;IAC9C,CAAC;AACL,CAAC;AAES,OAAQ,CAAC,OAAO,GAAG,QAAQ,CAAC;AAC5B,OAAQ,CAAC,QAAQ,GAAG,SAAS,CAAC;AAE7B,cAAM,GAAY,OAAO,CAAC;;AC/DrC,sBAAiC,SAAS,CAAC,CAAA;AAE9B,gCAAwB,GAAG,KAAK,CAAC;AAE9C,IAAI,QAAQ,GAAG,OAAO;AACF,eAAO,YADJ;AAGvB,IAAM,iBAAiB,GAAG,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;AAE1D,wBAAwB,CAAM;IAE1B,IAAI,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACrC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,UAAU,IAAI,CAAC,KAAK,iBAAiB,CAAC,CAAC,CAAC;QACrD,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAUD,EAAE,CAAC,CAAC,KAAK,KAAK,iBAAiB,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAGD,IAAI,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;IAC5B,IAAI,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;IACtD,EAAE,CAAC,CAAC,cAAc,IAAI,IAAI,IAAI,cAAc,KAAK,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;QAChE,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAGD,IAAI,WAAW,GAAG,cAAc,CAAC,WAAW,CAAC;IAC7C,EAAE,CAAC,CAAC,OAAO,WAAW,KAAK,UAAU,CAAC,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAGD,EAAE,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC;QACpB,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAGD,MAAM,CAAC,WAAW,CAAC;AAEvB,CAAC;AAED,gBAAgB,GAAY;IAC3B,MAAM,CAAC,CAAC,GAAG,GAAG,gCAAwB,GAAM,gCAAwB,SAAI,GAAK,CAAC;AAC/E,CAAC;AAED,wBAA+B,MAAW,EAAE,IAAe,EAAE,GAAY;IAErE,IAAI,KAAK,GAAU,EAAE,CAAC;IACtB,IAAI,KAAK,GAAG,MAAM,CAAC;IAEnB,GAAG,CAAC;QACA,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;QAChD,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC,QAAQ,OAAO,KAAK,KAAK,UAAU,IAAI,KAAK,KAAK,iBAAiB,EAAE;IAErE,KAAK,CAAC,OAAO,EAAE,CAAC;IAChB,IAAI,WAAW,GAAU,EAAE,CAAC;IAE5B,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACpC,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED,MAAM,CAAC,WAAW,CAAC;AAEvB,CAAC;AAnBe,sBAAc,iBAmB7B,CAAA;AAcD,2BAAkC,MAAW,EAAE,IAAe,EAAE,GAAY;IAE3E,IAAI,WAAW,GAAW,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC;IAE5E,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACV,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,UAAC,KAAK,IAAK,OAAA,KAAK,YAAY,IAAI,EAArB,CAAqB,CAAC,CAAC,OAAO,EAAE,CAAC;IACvE,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;AAEvC,CAAC;AAVe,yBAAiB,oBAUhC,CAAA;AAED,wBAA+B,MAAW,EAAE,WAAkB,EAAE,GAAY;IAE3E,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;AAE1D,CAAC;AAJe,sBAAc,iBAI7B,CAAA;AAED,uBAA8B,MAAW,EAAE,UAAe,EAAE,GAAY;IAEvE,IAAI,WAAW,GAAG,iBAAiB,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;IACvD,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC7B,cAAc,CAAC,MAAM,EAAE,WAAW,EAAE,GAAG,CAAC,CAAC;AAE1C,CAAC;AANe,qBAAa,gBAM5B,CAAA;AAED,uBAA8B,MAAW,EAAE,IAAe,EAAE,GAAY;IAEvE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACX,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC;IACjD,CAAC;IAED,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;AAErD,CAAC;AARe,qBAAa,gBAQ5B,CAAA;AAED,0BAAiC,MAAW,EAAE,IAAe,EAAE,GAAY;IAE1E,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACX,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC;IACpD,CAAC;IAED,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;AAErD,CAAC;AARe,wBAAgB,mBAQ/B,CAAA;AAID;IAAiC,qBAAqB;SAArB,WAAqB,CAArB,sBAAqB,CAArB,IAAqB;QAArB,oCAAqB;;IAErD,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;QACzB,MAAM,CAAC,IAAI,CAAC;IACb,CAAC;IACD,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC;IAED,IAAI,IAAI,GAAiC,WAAW,CAAC,KAAK,EAAE,CAAC;IAE7D,GAAG,CAAC,CAAe,UAAW,EAAzB,uBAAU,EAAV,IAAyB,CAAC;QAA1B,IAAI,MAAM,GAAI,WAAW,IAAf;QACd,eAAO,CAAC,MAAM,EAAE,UAAC,KAAK,EAAE,GAAG;YAE1B,EAAE,CAAC,CAAC,iBAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;YACnB,CAAC;QACF,CAAC,CAAC,CAAC;KACH;IAED,MAAM,CAAO,IAAI,CAAC;AAEnB,CAAC;AAtBe,wBAAgB,mBAsB/B,CAAA;;;;;;;;;;;AC9JD,mBAAqB,UACrB,CAAC,CAD8B;AAC/B,0BAAwB,iBACxB,CAAC,CADwC;AACzC,sBAA8B,SAE9B,CAAC,CAFsC;AASvC;IAAA;IA4BA,CAAC;IAvBA,wCAAQ,GAAR,UACsB,MAAqB,EACrB,SAAmC;QAExD,IAAI,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC;QAC/B,MAAM,CAAC,IAAI,GAAG,UAAS,cAAmB,EAAE,KAAiB;YAG5D,EAAE,CAAC,CAAC,OAAO,cAAc,KAAK,UAAU,CAAC,CAAC,CAAC;gBAC1C,IAAI,OAAO,GAAG,uBAAe,CAAY,cAAc,EAAE,KAAK,CAAC,CAAC;gBAChE,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YAChD,CAAC;YAED,IAAI,CAAC,CAAC;gBACL,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;YAClD,CAAC;QAEF,CAAC,CAAA;QAED,MAAM,CAAC,MAAM,CAAC;IAEf,CAAC;IArBD;QACC,WAAC,WAAM,CAAC,WAAW,CAAC,CAAA;QACpB,WAAC,WAAM,CAAC,WAAW,CAAC,CAAA;OAFrB,2CAAQ,QAqBP;IA1BF;QAAC,qBAAS,CAAC;YACV,IAAI,EAAE,QAAQ;SACd,CAAC;8BA0BD;IAAD,4BAAC;AAAD,CA5BA,AA4BC,IAAA;AAzBY,6BAAqB,wBAyBjC,CAAA;;;;;;;ACvCD,sBAA4C,aAC5C,CAAC,CADwD;AACzD,qBAA0C,YAI1C,CAAC,CAJqD;AAItD,WAAY,aAAa;IACxB,iDAAI,CAAA;IACJ,iDAAI,CAAA;IACJ,qDAAM,CAAA;AACP,CAAC,EAJW,qBAAa,KAAb,qBAAa,QAIxB;AAJD,IAAY,aAAa,GAAb,qBAIX,CAAA;AAKY,0BAAkB,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;AAqB1D;IAAyC,uCAAc;IAUnD,6BAAY,OAAyB;QACvC,kBAAM,OAAO,CAAC,CAAC;QATb,cAAS,GAAY,KAAK,CAAC,CAAC;QAC/B,aAAQ,GAAkB,KAAK,CAAC,CAAC;QACjC,kBAAa,GAAW,KAAK,CAAC,CAAC;QAC/B,aAAQ,GAAY,KAAK,CAAC,CAAC;QAC3B,gBAAW,GAAW,KAAK,CAAC,CAAC;QAC7B,sBAAiB,GAAW,KAAK,CAAC,CAAC;QACnC,SAAI,GAAW,KAAK,CAAC,CAAC;QAIrB,sBAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC5B,CAAC;IAEL,0BAAC;AAAD,CAfA,AAeC,EAfwC,qBAAc,EAetD;AAfY,2BAAmB,sBAe/B,CAAA;AAOU,iBAAS,GAAwB,qBAAa,CAAC,mBAAmB,CAAC,CAAC;;ACzD/E,sBAAsC,aACtC,CAAC,CADkD;AACnD,2BAA6B,kBAC7B,CAAC,CAD8C;AAC/C,mBAAyB,UAOzB,CAAC,CAPkC;AAOnC,WAAkB,gBAAgB;IAmB9B,mFAAkB,CAAA;IAiBlB,uFAAoB,CAAA;IAyBpB,mFAAkB,CAAA;AAatB,CAAC,EA1EiB,wBAAgB,KAAhB,wBAAgB,QA0EjC;AA1ED,IAAkB,gBAAgB,GAAhB,wBA0EjB,CAAA;AAKD,WAAkB,aAAa;IAc3B,iFAAwB,CAAA;IAaxB,+EAAuB,CAAA;AAE3B,CAAC,EA7BiB,qBAAa,KAAb,qBAAa,QA6B9B;AA7BD,IAAkB,aAAa,GAAb,qBA6BjB,CAAA;AAMD,IAAM,UAAU,GAAG;IACf,mBAAmB;IACnB,qBAAqB;IACrB,mBAAmB;IACnB,gBAAgB;IAEhB,qBAAqB;IACrB,oBAAoB;CACvB,CAAC;AAKF;IAEI,yCAAmB,KAA4C,EAAS,OAAiB;QAAtE,UAAK,GAAL,KAAK,CAAuC;QAAS,YAAO,GAAP,OAAO,CAAU;IAEzF,CAAC;IAEL,sCAAC;AAAD,CANA,AAMC,IAAA;AANY,uCAA+B,kCAM3C,CAAA;AAUU,UAAE,GAAiB,qBAAa,CAAC,+BAA+B,CAAC,CAAC;AAK7E,0BAAiC,gBAA0B,EAAE,QAAoB;IAK7E,IAAI,aAAa,GAAuC,2BAAc,CAAC,gBAAgB,EAAE,+BAA+B,CAAC,CAAC;IAE1H,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;QACvB,QAAQ,CAAC,GAAG,CAAC,eAAU,CAAC,CAAC,YAAY,CAAC,EAAE,UAAC,UAAgC;YAErE,GAAG,CAAC,CAA2B,UAAa,EAAvC,yBAAsB,EAAtB,IAAuC,CAAC;gBAAxC,IAAI,kBAAkB,GAAI,aAAa,IAAjB;gBACvB,IAAI,OAAK,GAAY,kBAAkB,CAAC,KAAK,CAAC;gBAE9C,EAAE,CAAC,CAAC,gBAAQ,CAAC,OAAK,CAAC,CAAC,CAAC,CAAC;oBAClB,OAAK,GAAG,UAAU,CAAU,kBAAkB,CAAC,KAAK,CAAC,CAAC;gBAC1D,CAAC;gBAED,UAAU,CAAC,GAAG,CAAC,OAAK,EAAQ,kBAAkB,CAAC,OAAO,CAAC,CAAC;aAC3D;QAEL,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;AACL,CAAC;AAtBe,wBAAgB,mBAsB/B,CAAA;;ACnLD,2BAAqD,cAIrD,CAAC,CAJkE;AAMxD,iBAAS,GAAG,OAAO,CAAC,SAAS,CAAC;AAC9B,gBAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AAC5B,gBAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AAC5B,gBAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AAC5B,iBAAS,GAAG,OAAO,CAAC,SAAS,CAAC;AAC9B,cAAM,GAAG,OAAO,CAAC,MAAM,CAAC;AACxB,eAAO,GAAG,OAAO,CAAC,OAAO,CAAC;AAC1B,kBAAU,GAAG,OAAO,CAAC,UAAU,CAAC;AAChC,eAAO,GAAG,OAAO,CAAC,OAAO,CAAC;AAC1B,cAAM,GAAqB,OAAO,CAAC,MAAM,CAAC;AAC1C,YAAI,GAAqB,OAAO,CAAC,IAAI,CAAC;AACtC,aAAK,GAA4B,OAAQ,CAAC,KAAK,CAAC;AAChD,oBAAY,GAAqB,aAAa,CAAC;AAW1D,gBAA6B,WAAgC;IAEzD,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AAEhD,CAAC;AAJe,cAAM,SAIrB,CAAA;AAED,eAAsB,MAAU,EAAE,MAAU;IAExC,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC;IACX,CAAC;IAEJ,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC;QAClB,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,iBAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QAC9B,CAAC;IACL,CAAC;AAEL,CAAC;AAZe,aAAK,QAYpB,CAAA;AAED,wBAA+B,MAAU,EAAE,MAAU;IAEjD,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC;IACX,CAAC;IAEJ,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC;QAClB,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,iBAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACvD,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7B,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;YAC9B,CAAC;QACL,CAAC;IACL,CAAC;AAEL,CAAC;AAde,sBAAc,iBAc7B,CAAA;AAED,uBAAkD,eAAkB;IAEhE,MAAM,CAAC;QAEH,IAAI,kBAAkB,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAClE,eAAe,CAAC,KAAK,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;QAErD,MAAM,CAAC,UAAS,MAAS;YACrB,0BAAa,CAAC,MAAM,EAAE,kBAAkB,CAAC,CAAC;YAC1C,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC,CAAA;IAEL,CAAC,CAAA;AAEL,CAAC;AAde,qBAAa,gBAc5B,CAAA;AAED,4BAAuD,eAAkB;IAErE,MAAM,CAAC;QAEH,IAAI,kBAAkB,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAClE,eAAe,CAAC,KAAK,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;QAErD,MAAM,CAAC,UAAS,MAAS,EAAE,SAAiB,EAAE,KAAa;YAEvD,IAAI,UAAU,GAAG,oBAAO,CAAC,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;YAC3D,UAAU,GAAG,UAAU,IAAI,EAAE,CAAC;YAI9B,OAAO,UAAU,CAAC,MAAM,IAAI,KAAK,EAAE,CAAC;gBAChC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,CAAC;YAED,UAAU,CAAC,KAAK,CAAC,GAAG,kBAAkB,CAAC;YACvC,oBAAO,CAAC,cAAc,CAAC,YAAY,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;YACzD,MAAM,CAAC,MAAM,CAAC;QAElB,CAAC,CAAA;IAEL,CAAC,CAAA;AAEL,CAAC;AA1Be,0BAAkB,qBA0BjC,CAAA;AAED,WAAkB,YAAY;IAC1B,yDAAS,CAAA;IACT,iDAAK,CAAA;IAEL,6CAAG,CAAA;AACP,CAAC,EALiB,oBAAY,KAAZ,oBAAY,QAK7B;AALD,IAAkB,YAAY,GAAZ,oBAKjB,CAAA;AAAA,CAAC;AAQF,IAAM,qBAAqB,GAAG,6BAA6B,CAAC;AAC5D,IAAM,iBAAiB,GAAG,2BAA2B,CAAC;AAEtD,IAAM,eAAe,GAAG,yBAAyB,CAAC;AAElD,uBAA8B,QAAgB;IAE1C,IAAI,aAAqB,CAAC;IAC1B,IAAI,IAAkB,CAAC;IACvB,IAAI,CAAmB,CAAC;IAExB,EAAE,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,GAAG,CAAgB,CAAC;IAC5B,CAAC;IACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAChD,IAAI,GAAG,CAAsB,CAAC;IAClC,CAAC;IACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC5C,IAAI,GAAG,CAAkB,CAAC;IAC9B,CAAC;IAID,IAAI,CAAC,CAAC;QACF,MAAM,IAAI,KAAK,CAAC,uBAAqB,QAAU,CAAC,CAAC;IACrD,CAAC;IAED,MAAM,CAAC;QACH,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC;QACnB,cAAc,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,IAAI,EAAE,IAAI;KACb,CAAC;AACN,CAAC;AA3Be,qBAAa,gBA2B5B,CAAA;AAGD,qBAAqB,GAAW;IAC5B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC;SAC3B,OAAO,CAAC,UAAU,EAAE,SAAS,CAAC;SAC9B,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;SACnB,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;IACnC,MAAM,CAAC,GAAG,CAAC;AACf,CAAC;AACD,mBAAmB,GAAW;IAC1B,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;AAC7B,CAAC;AACD,mBAAmB,GAAW;IAC1B,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;AAC7B,CAAC;AAKD,uBAAiC,IAAO;IAEpC,IAAI,GAAG,GAAS,IAAI,CAAC;IAErB,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACN,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;YAClB,EAAE,CAAC,CAAC,kBAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvB,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;YACvC,CAAC;QACL,CAAC;IACL,CAAC;IAED,MAAM,CAAC,IAAI,CAAC;AAEhB,CAAC;AAde,qBAAa,gBAc5B,CAAA;AAED,kBAA6C,IAAO,EAAE,OAAY;IAE9D,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAE/B,eAAO,CAAC,IAAI,EAAE,UAAC,KAAK,EAAE,IAAI,IAAK,OAAA,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,EAAnB,CAAmB,CAAC,CAAC;IAEpD,MAAM,CAAC,KAAK,CAAC;AAEjB,CAAC;AARe,gBAAQ,WAQvB,CAAA;AAWD,oBAAoB,GAAO,EAAE,CAAK;IAChC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACN,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;IACpB,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,OAAO,GAAG,CAAC,SAAS,CAAC;IACvB,CAAC;AACH,CAAC;AAGD,oBAAoB,GAAO,EAAE,IAAU,EAAE,IAAY,EAAE,OAAqB;IAArB,uBAAqB,GAArB,eAAqB;IAC1E,IAAI,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC;IAEtB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QAC9C,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAClB,EAAE,CAAC,CAAC,CAAC,gBAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAU,CAAC,GAAG,CAAC,CAAC;YAAC,QAAQ,CAAC;QACjD,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC5B,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;YAC9C,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAClB,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YAEnB,EAAE,CAAC,CAAC,IAAI,IAAI,gBAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,CAAC,gBAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;oBAAC,GAAG,CAAC,GAAG,CAAC,GAAG,eAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;gBAC3D,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;YACpC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;gBACnC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;YACjB,CAAC;QACH,CAAC;IACH,CAAC;IAED,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACnB,MAAM,CAAC,GAAG,CAAC;AACb,CAAC;AAED,uBAAuB,GAAO;IAC1B,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACpE,CAAC;;ACpPD,2BAA+C,cAC/C,CAAC,CAD4D;AAC7D,mBAAyB,MACzB,CAAC,CAD8B;AAC/B,sBAAwE,SACxE,CAAC,CADgF;AACjF,sBAAgD,SAQhD,CAAC,CARwD;AAmBzD;IAII,6BAAY,OAAyB;QAFrC,SAAI,GAAW,IAAI,CAAC;QAGhB,sBAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC;IAEL,0BAAC;AAAD,CARA,AAQC,IAAA;AARY,2BAAmB,sBAQ/B,CAAA;AA6BU,iBAAS,GAAwB,qBAAa,CAAC,mBAAmB,CAAC,CAAC;AAK/E,2BAAkC,cAAoC,EAAE,QAAoB;IAKxF,IAAI,GAAG,GAAG,2BAAc,CAAC,cAAc,EAAE,mBAAmB,CAAC,CAAC;IAE9D,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QACd,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;IACnD,CAAC;IAED,IAAK,IAAI,GAAI,6BAAgB,gBAAsB,cAAM,CAAC,mBAAmB,CAAC,SAAK,GAAG,EAAC,KAAA,CAAC;IAIxF,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,eAAU,CAAC,CAAC,WAAW,CAAC,EAAE,UAAS,SAAmC;QAC3F,IAAI,SAAS,GAAe,SAAS,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QAClE,qBAAa,CAAC,SAAS,CAAC,CAAC;QACzB,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC,CAAC,CAAC,CAAC;AAER,CAAC;AArBe,yBAAiB,oBAqBhC,CAAA;;;;;;;ACpFD,uBAAqB,UACrB,CAAC,CAD8B;AAC/B,sBAAuD,SACvD,CAAC,CAD+D;AAChE,uBAAyE,UAQzE,CAAC,CARkF;AAgBnF;IAA2C,yCAAgB;IAO1D,+BAAY,gBAAqB;QAChC,kBAAM,OAAO,CAAC,CAAC;QALhB,YAAO,GAAqB,KAAK,CAAC,CAAC;QAOlC,IAAI,OAAO,GAAG,iBAAS,CAAC,gBAAgB,CAAC,GAAG,EAAE,OAAO,EAAE,gBAAgB,EAAE,GAAG,gBAAgB,CAAC;QAGvF,eAAM,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE,0BAA0B,CAAC,CAAC;QAIrE,sBAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC/B,CAAC;IAEF,4BAAC;AAAD,CApBA,AAoBC,EApB0C,yBAAgB,EAoB1D;AApBY,6BAAqB,wBAoBjC,CAAA;AAwBU,mBAAW,GAA0B,qBAAa,CAAC,qBAAqB,CAAC,CAAC;;AC1CrF,uBAAqB,UAAU,CAAC,CAAA;AAEhC,2BAA+C,cAAc,CAAC,CAAA;AAG9D,uBAAoF,UAAU,CAAC,CAAA;AAS/F,mBAA0B,WAA8B,EAAE,OAA0B,EAChF,YAAgC,EAAE,qBAA6B;IAK/D,IAAI,GAAG,GAAG,2BAAc,CAAC,WAAW,EAAE,yBAAgB,CAAC,CAAC;IAGxD,eAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,4CAA4C,CAAC,CAAC;IAEnE,IAAI,UAAU,GAA2B,6BAAgB,gBAAC,EAAE,SAAK,GAAG,EAAC,CAAC;IAEtE,OAAO,GAAG,OAAO,IAAI,UAAU,CAAC,OAAO,CAAC;IAGxC,eAAM,CAAC,OAAO,EAAE,0BAA0B,CAAC,CAAC;IAE5C,IAAI,QAAQ,GAAG,sBAAa,CAAC,WAAW,EAAE,IAAI,EAAE,YAAY,EAAE,qBAAqB,CAAC,CAAC;IAErF,MAAM,CAAC,OAAO,CAAC,SAAS,CAAO,OAAO,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AAE7D,CAAC;AAtBe,iBAAS,YAsBxB,CAAA;;;;;;;ACzDD,sBAA4C,SAC5C,CAAC,CADoD;AACrD,qBAA0C,QAO1C,CAAC,CAPiD;AAOlD,WAAkB,0BAA0B;IACxC,2EAAI,CAAA;IACJ,yEAAG,CAAA;IACH,+EAAM,CAAA;AACV,CAAC,EAJiB,kCAA0B,KAA1B,kCAA0B,QAI3C;AAJD,IAAkB,0BAA0B,GAA1B,kCAIjB,CAAA;AAKY,qBAAa,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;AAuBrD;IAA6C,2CAAc;IAKvD,iCAAY,OAA6B;QACrC,kBAAM,OAAO,CAAC,CAAC;QAJnB,cAAS,GAA+B,KAAK,CAAC,CAAC;QAC/C,YAAO,GAAY,KAAK,CAAC,CAAC;QAItB,sBAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC;IAEL,8BAAC;AAAD,CAVA,AAUC,EAV4C,qBAAc,EAU1D;AAVY,+BAAuB,0BAUnC,CAAA;AAOU,qBAAa,GAA4B,qBAAa,CAAC,uBAAuB,CAAC,CAAC;;;;;;;ACzD3F,uBAAqB,UACrB,CAAC,CAD8B;AAC/B,mBAA8C,MAC9C,CAAC,CADmD;AACpD,sBAAwE,SAAS,CAAC,CAAA;AAElF,2BAA+F,cAC/F,CAAC,CAD4G;AAC7G,qBAA6B,QAC7B,CAAC,CADoC;AACrC,+BAAqD,kBACrD,CAAC,CADsE;AACvE,0BAAgE,aAChE,CAAC,CAD4E;AAE7E,0BAAuF,aAEvF,CAAC,CAFmG;AAEpG,0BAAmB,aAAa,CAAC;AAAzB,gCAAyB;AAcjC;IAAyC,uCAAyB;IAE9D,6BAAY,OAAyB;QACjC,kBAAM,OAAO,CAAC,CAAC;IAEnB,CAAC;IAEL,0BAAC;AAAD,CAPA,AAOC,EAPwC,qCAAyB,EAOjE;AAPY,2BAAmB,sBAO/B,CAAA;AA4CU,iBAAS,GAAiC,qBAAa,CAAC,mBAAmB,CAAC,CAAC;AAgBxF,0BAAiC,cAAoC,EAAE,QAAoB,EAAE,QAAiB;IAG1G,eAAM,CAAC,6BAAgB,CAAC,cAAc,EAAE,mBAAmB,CAAC,EAAE,+BAA+B,CAAC,CAAC;IAC/F,eAAM,CAAC,0BAAa,CAAC,cAAc,EAAE,qBAAc,CAAC,EAAE,0BAA0B,CAAC,CAAC;IAElF,IAAI,KAAkB,oBAAoB,CAAC,cAAc,CAAC,EAArD,IAAI,YAAE,OAAO,aAAwC,CAAC;IAI3D,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAElC,MAAM,CAAC,QAAQ,CAAC;AAEpB,CAAC;AAde,wBAAgB,mBAc/B,CAAA;AAKD,yBAAgC,cAAoC;IAEhE,IAAI,GAAG,GAA+B,wBAAY,CAAwB,cAAc,CAAC,CAAC;IAK1F,IAAI,GAAG,GAAG,2BAAc,CAAC,cAAc,EAAE,qBAAc,CAAC,CAAC;IACzD,IAAI,IAAI,GAA6B,EAAiB,CAAC;IACvD,6BAAgB,gBAAC,IAAI,SAAK,GAAG,EAAC,CAAC;IAE/B,EAAE,CAAC,CAAC,CAAC,iBAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAAC,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC;IAC1C,EAAE,CAAC,CAAC,CAAC,iBAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAClE,EAAE,CAAC,CAAC,iBAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;IACvE,EAAE,CAAC,CAAC,iBAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAAC,GAAG,CAAC,iBAAiB,GAAG,8BAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAErF,EAAE,CAAC,CAAC,iBAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACzB,GAAG,CAAC,MAAM,GAAG,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,GAAG,CAAU,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;IACxF,CAAC;IAGD,EAAE,CAAC,CAAC,iBAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC3D,IAAI,CAAC,EAAE,CAAC,CAAC,iBAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;IACzE,IAAI;QAAC,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;IAEtF,MAAM,CAAC,GAAG,CAAC;AAEf,CAAC;AA3Be,uBAAe,kBA2B9B,CAAA;AAKD,mBAA0B,GAA8B,EAAE,SAAmC;IAEzF,EAAE,CAAC,CAAC,kBAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC3B,GAAG,CAAC,QAAQ,GAAG,CAAC,gBAAW,CAAO,GAAG,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,QAAQ,GAAG,UAAC,QAAa,EAAE,MAAW;YACxF,MAAM,CAAC,SAAS,CAAC,MAAM,CAAO,GAAG,CAAC,QAAQ,EAAE,IAAI,EAAE;gBAC9C,OAAO,EAAE,QAAQ;gBACjB,UAAU,EAAE,MAAM;aACrB,CAAC,CAAC;QACP,CAAC,CAAC;IACN,CAAC;IAED,EAAE,CAAC,CAAC,kBAAU,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC9B,GAAG,CAAC,WAAW,GAAG,CAAC,gBAAW,CAAO,GAAG,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC,WAAW,GAAG,UAAC,QAAa,EAAE,MAAW;YACjG,MAAM,CAAC,SAAS,CAAC,MAAM,CAAO,GAAG,CAAC,WAAW,EAAE,IAAI,EAAE;gBACjD,OAAO,EAAE,QAAQ;gBACjB,UAAU,EAAE,MAAM;aACrB,CAAC,CAAC;QACP,CAAC,CAAC;IACN,CAAC;IAID,MAAM,CAAC,GAAG,CAAC;AAEf,CAAC;AAxBe,iBAAS,YAwBxB,CAAA;AAKD,8BAAqC,cAAoC;IAErE,IAAI,GAAG,GAAG,eAAe,CAAC,cAAc,CAAC,CAAC;IAE1C,IAAI,OAAO,GAAG,eAAU,CAAC,CAAC,WAAW,CAAC,EAAE,0BAA0B,SAAmC;QAEjG,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;YACb,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACzC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,mBAAiB,GAAG,CAAC,cAAc,SAAI,CAAG,CAAC,CAAC;YAC3E,CAAC;QACL,CAAC;QAKD,MAAM,CAAO,SAAS,CAAC,qBAAkB,CAAC,GAAG,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC;QACH,IAAI,EAAE,GAAG,CAAC,cAAc;QACxB,OAAO,EAAE,OAAO;KACnB,CAAC;AAEN,CAAC;AAvBe,4BAAoB,uBAuBnC,CAAA;AAED,qBAAqB,KAAa,EAAE,EAAU;IAE1C,EAAE,GAAG,MAAI,EAAI,CAAC;IACd,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;IAEzB,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACzB,MAAM,CAAC;IACX,CAAC;IAED,IAAI,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACzC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;IACX,EAAE,CAAC,IAAI,GAAG,UAAU,CAAA;IACpB,EAAE,CAAC,WAAW,GAAG,KAAK,CAAC;IACvB,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;AAEvD,CAAC;;ACnND,uBAAqB,UAAU,CAAC,CAAA;AAKhC;IAEI,yBAAoB,KAAa,EAAU,MAAY;QAAnC,UAAK,GAAL,KAAK,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAM;IACvD,CAAC;IAED,sBAAI,iCAAI;aAAR;YACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;;;OAAA;IAED,sBAAI,kCAAK;aAAT;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;;;OAAA;IAEL,sBAAC;AAAD,CAbA,AAaC,IAAA;AAbY,uBAAe,kBAa3B,CAAA;AAUD,kBAA+B,IAAY,EAAE,KAAW;IAGpD,eAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,8BAA8B,CAAC,CAAC;IAEtD,MAAM,CAAC,IAAI,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAE5C,CAAC;AAPe,gBAAQ,WAOvB,CAAA;AAED,yBAAsC,QAA+B,EAAE,QAAoB,EAAE,IAAa;IAGtG,eAAM,CAAC,QAAQ,YAAY,eAAe,EAAE,oCAAoC,CAAC,CAAC;IAElF,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;IAC3C,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;IAExC,MAAM,CAAC,QAAQ,CAAC;AAEpB,CAAC;AAVe,uBAAe,kBAU9B,CAAA;;;;AChDD,mBAAyB,MACzB,CAAC,CAD8B;AAC/B,2BAA+C,cAC/C,CAAC,CAD4D;AAC7D,sBAAgE,SAOhE,CAAC,CAPwE;AAmBzE;IAII,6BAAY,OAAyB;QAFrC,SAAI,GAAW,IAAI,CAAC;QAGhB,sBAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC;IAEL,0BAAC;AAAD,CARA,AAQC,IAAA;AARY,2BAAmB,sBAQ/B,CAAA;AAsCU,iBAAS,GAAwB,qBAAa,CAAC,mBAAmB,CAAC,CAAC;AAE/E,0BAAiC,cAAoC,EAAE,QAAoB,EAAE,IAAa;IAKtG,IAAI,GAAG,GAAG,2BAAc,CAAC,cAAc,EAAE,mBAAmB,CAAC,CAAC;IAE9D,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QACd,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;IACtD,CAAC;IAED,IAAI,UAAU,GAAyB,6BAAgB,gBAAC,cAAM,CAAC,mBAAmB,CAAC,SAAK,GAAG,EAAC,CAAC;IAC7F,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;IAE7C,EAAE,CAAC,CAAC,CAAC,kBAAU,CAAC,cAAc,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACjD,MAAM,IAAI,KAAK,CAAC,iBAAc,IAAI,4CAAwC,CAAC,CAAC;IAChF,CAAC;IAED,QAAQ,CAAC,MAAM,CAAC,eAAU,CAAC,CAAC,UAAU,CAAC,EAAE,UAAS,QAAiC;QAC/E,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,eAAU,CAAC,CAAC,WAAW,EAAE,WAAW,CAAC,EAAE,UAAS,SAAc,EAAE,SAAmC;YAExH,IAAI,QAAQ,GAAe,SAAS,CAAC,WAAW,CAAC,cAAc,EAAE;gBAC7D,SAAS,EAAE,SAAS;aACvB,CAAC,CAAC;YAEH,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,EAAE;gBACjD,SAAS,EAAE,SAAS;aACvB,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,CAAC,CAAC;IAEJ,MAAM,CAAC,QAAQ,CAAC;AAEpB,CAAC;AAlCe,wBAAgB,mBAkC/B,CAAA;;;;;;;ACtGD,uBAAqB,UAAU,CAAC,CAAA;AAEhC,mBAA8C,MAC9C,CAAC,CADmD;AACpD,sBAAgF,SAChF,CAAC,CADwF;AACzF,sBAA6F,SAC7F,CAAC,CADqG;AACtG,2BAAgF,cAOhF,CAAC,CAP6F;AAO9F,WAAkB,YAAY;IAC1B,qDAAO,CAAA;IACP,qDAAO,CAAA;AACX,CAAC,EAHiB,oBAAY,KAAZ,oBAAY,QAG7B;AAHD,IAAkB,YAAY,GAAZ,oBAGjB,CAAA;AACD,IAAM,gBAAgB,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AAuC3C;IAUI,mCAAY,OAA+B;QAR3C,aAAQ,GAAW,KAAK,CAAC,CAAC;QAC1B,UAAK,GAAwB,KAAK,CAAC,CAAC;QACpC,qBAAgB,GAAY,KAAK,CAAC,CAAC;QACnC,YAAO,GAAa,KAAK,CAAC,CAAC;QAC3B,eAAU,GAAiB,KAAK,CAAC,CAAC;QAClC,YAAO,GAA6C,KAAK,CAAC,CAAC;QAC3D,SAAI,GAA4C,KAAK,CAAC,CAAC;QAInD,eAAM,CAAC,OAAO,CAAC,OAAO,EAAE,0BAA0B,CAAC,CAAC;QACpD,eAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,oCAAoC,CAAC,CAAC;QAExE,sBAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC;IAEL,gCAAC;AAAD,CAlBA,AAkBC,IAAA;AAlBY,iCAAyB,4BAkBrC,CAAA;AAgBD;IAAyC,uCAAyB;IAM9D,6BAAY,OAAyB;QACjC,kBAAY,OAAO,CAAC,CAAC;QALzB,iBAAY,GAAY,KAAK,CAAC,CAAC;QAC/B,aAAQ,GAAW,KAAK,CAAC,CAAC;QAC1B,aAAQ,GAAY,KAAK,CAAC,CAAC;QAIvB,sBAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC;IAEL,0BAAC;AAAD,CAXA,AAWC,EAXwC,yBAAyB,EAWjE;AAXY,2BAAmB,sBAW/B,CAAA;AAqBU,iBAAS,GAAwB,qBAAa,CAAC,mBAAmB,CAAC,CAAC;AAO/E;IACI,wBACW,WAAmB,EACnB,OAAe;QADf,gBAAW,GAAX,WAAW,CAAQ;QACnB,YAAO,GAAP,OAAO,CAAQ;IAC1B,CAAC;IACL,qBAAC;AAAD,CALA,AAKC,IAAA;AALY,sBAAc,iBAK1B,CAAA;AAED,uBAAuB,OAAe;IAElC,MAAM,CAAC,UAAS,MAAW,EAAE,WAAmB;QAE5C,IAAI,OAAO,GAAG,IAAI,cAAc,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QACvD,0BAAa,CAAC,MAAM,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;IAE/C,CAAC,CAAA;AAEL,CAAC;AAEU,YAAI,GAAG,aAAa,CAAC;AAMhC,0BAAiC,cAAoC,EAAE,QAAoB,EAAE,QAAiB;IAG1G,eAAM,CAAC,6BAAgB,CAAC,cAAc,EAAE,mBAAmB,CAAC,EAAE,sCAAsC,CAAC,CAAC;IAEtG,IAAI,KAAkB,oBAAoB,CAAC,cAAc,CAAC,EAArD,IAAI,YAAE,OAAO,aAAwC,CAAC;IAI3D,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAElC,MAAM,CAAC,QAAQ,CAAC;AAEpB,CAAC;AAbe,wBAAgB,mBAa/B,CAAA;AAwBD,IAAM,eAAe,GAAgB;IACjC,GAAC,CAAsB,CAAC,GAAE,GAAG;IAC7B,GAAC,CAAgB,CAAC,GAAE,GAAG;IACvB,GAAC,CAAkB,CAAC,GAAE,GAAG;;CAE5B,CAAC;AAKF,sBAA6B,cAAoC;IAK7D,IAAI,GAAG,GAAG,2BAAc,CAAC,cAAc,EAAE,yBAAyB,CAAC,CAAC;IACpE,IAAI,UAAU,GAA+B,EAAiB,CAAC;IAC/D,6BAAgB,gBAAC,UAAU,SAAK,GAAG,EAAC,CAAC;IAErC,IAAI,YAAY,GAAG,qBAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IAEtD,IAAI,GAAG,GAA8B;QACjC,YAAY,EAAE,YAAY,CAAC,aAAa;QACxC,cAAc,EAAE,YAAY,CAAC,cAAc;QAC3C,QAAQ,EAAE,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC;QAC5C,UAAU,EAAE,cAAc;KAC7B,CAAC;IAEF,EAAE,CAAC,CAAC,iBAAS,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAAC,GAAG,CAAC,UAAU,GAAG,gBAAgB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IAC/F,EAAE,CAAC,CAAC,iBAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAAC,GAAG,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;IACpE,EAAE,CAAC,CAAC,iBAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAAC,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;IAG3D,EAAE,CAAC,CAAC,iBAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAAC,GAAG,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;IAI9D,IAAI,eAAe,GAAsB,2BAAc,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;IACxF,EAAE,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;QACzB,IAAI,GAAG,GAAgB,EAAE,CAAC;QAC1B,GAAG,CAAC,CAAa,UAAe,EAA3B,2BAAQ,EAAR,IAA2B,CAAC;YAA5B,IAAI,IAAI,GAAI,eAAe,IAAnB;YACT,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;SACxC;QACD,GAAG,CAAC,gBAAgB,GAAG,GAAG,CAAC;IAC/B,CAAC;IACD,IAAI,CAAC,EAAE,CAAC,CAAC,iBAAS,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;QAAC,GAAG,CAAC,gBAAgB,GAAG,UAAU,CAAC,gBAAgB,CAAC;IAEpG,MAAM,CAAC,GAAG,CAAC;AAEf,CAAC;AAvCe,oBAAY,eAuC3B,CAAA;AAKD,yBAAgC,cAAoC;IAEhE,IAAI,GAAG,GAAG,YAAY,CAAwB,cAAc,CAAC,CAAC;IAK9D,IAAI,GAAG,GAAG,2BAAc,CAAC,cAAc,EAAE,mBAAmB,CAAC,CAAC;IAC9D,IAAI,UAAU,GAAyB,EAAiB,CAAC;IACzD,6BAAgB,gBAAC,UAAU,SAAK,GAAG,EAAC,CAAC;IAErC,EAAE,CAAC,CAAC,iBAAS,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAAC,GAAG,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;IACnF,EAAE,CAAC,CAAC,iBAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAAC,GAAG,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;IACvE,EAAE,CAAC,CAAC,iBAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAAC,GAAG,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;IAEvE,MAAM,CAAC,GAAG,CAAC;AAEf,CAAC;AAjBe,uBAAe,kBAiB9B,CAAA;AAKD,mBAA0B,GAA8B,EAAE,SAAmC;IAEzF,EAAE,CAAC,CAAC,kBAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC1B,GAAG,CAAC,OAAO,GAAG,CAAC,gBAAW,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,OAAO;YACjD,UAAC,QAAa,EAAE,MAAW,EAAE,UAAe;gBACxC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE;oBACvC,QAAQ,EAAE,QAAQ;oBAClB,MAAM,EAAE,MAAM;oBACd,WAAW,EAAE,UAAU;iBAC1B,CAAC,CAAC;YACP,CAAC,CAAA;IACT,CAAC;IAED,EAAE,CAAC,CAAC,OAAO,GAAG,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;QAC/B,IAAI,MAAM,GAAG,GAAG,CAAC,UAAU,CAAC,SAAS,CAAU,GAAG,CAAC,IAAI,CAAC,CAAC;QACzD,EAAE,CAAC,CAAC,CAAC,gBAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACvB,GAAG,CAAC,IAAI,GAAG,UAAS,KAAU,EAAE,QAAa,EAAE,MAAW,EAAE,WAAgB,EAAE,UAAe;gBACzF,IAAI,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC;gBAClG,MAAM,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;YAClE,CAAC,CAAA;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,GAAG,CAAC,IAAI,GAAG,UAAS,KAAU,EAAE,QAAa,EAAE,MAAW,EAAE,WAAgB,EAAE,UAAe;gBACzF,IAAI,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC;gBAClG,MAAM,CAAC,SAAS,CAAC,MAAM,CAAO,MAAM,EAAE,UAAU,EAAE;oBAC9C,MAAM,EAAE,KAAK;oBACb,QAAQ,EAAE,QAAQ;oBAClB,MAAM,EAAE,MAAM;oBACd,WAAW,EAAE,WAAW;oBACxB,YAAY,EAAE,WAAW;oBACzB,WAAW,EAAE,UAAU;iBAC1B,CAAC,CAAC;YACP,CAAC,CAAA;QACL,CAAC;IACL,CAAC;IACD,IAAI,CAAC,EAAE,CAAC,CAAC,gBAAW,CAAO,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnC,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC;QACtB,GAAG,CAAC,IAAI,GAAG,UAAC,KAAU,EAAE,QAAa,EAAE,MAAW,EAAE,WAAgB,EAAE,UAAe;YACjF,MAAM,CAAC,SAAS,CAAC,MAAM,CAAO,MAAM,EAAE,IAAI,EAAE;gBACxC,MAAM,EAAE,KAAK;gBACb,QAAQ,EAAE,QAAQ;gBAClB,MAAM,EAAE,MAAM;gBACd,WAAW,EAAE,WAAW;gBACxB,YAAY,EAAE,WAAW;gBACzB,WAAW,EAAE,UAAU;aAC1B,CAAC,CAAC;QACP,CAAC,CAAA;IACL,CAAC;IAED,MAAM,CAAC,GAAG,CAAC;AAEf,CAAC;AAnDe,iBAAS,YAmDxB,CAAA;AAKD,8BAAqC,cAAoC;IAErE,IAAI,GAAG,GAAG,eAAe,CAAC,cAAc,CAAC,CAAC;IAE1C,IAAI,OAAO,GAAG,eAAU,CAAC,CAAC,WAAW,CAAC,EAAE,0BAA0B,SAAmC;QACjG,MAAM,CAAO,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC;QACH,IAAI,EAAE,GAAG,CAAC,cAAc;QACxB,OAAO,EAAE,OAAO;KACnB,CAAC;AAEN,CAAC;AAbe,4BAAoB,uBAanC,CAAA;;;ACnUD,oBAA+C,YAAsB,EAAE,IAAO;IAK1E,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,KAAK,EAAE,CAAC;IACvC,MAAM,CAAC,IAAI,CAAC;AAEb,CAAC;AARe,kBAAU,aAQzB,CAAA;AASD,kBAA6C,IAAO,EAAE,OAAY;IAE9D,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAElC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QAClB,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IAC9B,CAAC;IAEE,MAAM,CAAC,KAAK,CAAC;AAEjB,CAAC;AAVe,gBAAQ,WAUvB,CAAA;AAUD,gBAAuB,UAAkB;IAExC,MAAM,CAAC,UAAC,MAAgB,EAAE,WAA0B,EAAE,cAAsB;QAO3E,MAAM,GAAG,CAAC,OAAO,WAAW,IAAI,WAAW,CAAC,GAAG,MAAM,GAAG,MAAM,GAAS,MAAO,CAAC,WAAW,CAAC,CAAC;QAK5F,IAAI,OAAO,GAAa,CAAC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;QAChE,OAAO,CAAC,cAAc,CAAC,GAAG,UAAU,CAAC;IAEtC,CAAC,CAAA;AAEF,CAAC;AAnBe,cAAM,SAmBrB,CAAA;AAOD,qBAA4B,IAAc;IAEzC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AAE/C,CAAC;AAJe,mBAAW,cAI1B,CAAA;;AC/ED,2BAA+C,cAC/C,CAAC,CAD4D;AAC7D,sBAAgE,SAChE,CAAC,CADwE;AACzE,mBAAyB,MAOzB,CAAC,CAP8B;AA4B/B;IAKI,0BAAY,OAAsB;QAHlC,SAAI,GAAW,KAAK,CAAC,CAAC;QACtB,aAAQ,GAAY,KAAK,CAAC,CAAC;QAGvB,sBAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC;IAEL,uBAAC;AAAD,CATA,AASC,IAAA;AATY,wBAAgB,mBAS5B,CAAA;AAoCU,cAAM,GAAwB,qBAAa,CAAC,gBAAgB,CAAC,CAAC;AAKzE,wBAA+B,WAA8B,EAAE,QAAoB;IAK/E,IAAI,GAAG,GAAG,2BAAc,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;IAExD,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QACd,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;IACnD,CAAC;IAED,IAAI,KAAK,GAAG,6BAAgB,gBAAmB,cAAM,CAAC,gBAAgB,CAAC,SAAK,GAAG,EAAC,CAAC;IAEjF,EAAE,CAAC,CAAC,CAAC,kBAAU,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC5C,MAAM,IAAI,KAAK,CAAC,cAAW,KAAK,CAAC,IAAI,0CAAsC,CAAC,CAAC;IACjF,CAAC;IAED,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,eAAU,CAAC,CAAC,WAAW,CAAC,EAAE,UAAS,SAAmC;QAC9F,IAAI,eAAe,GAAY,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAClE,IAAI,iBAAiB,GAAG,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAErE,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjB,iBAAiB,CAAC,SAAS,GAAG,IAAI,CAAC;QACvC,CAAC;QAED,MAAM,CAAC,iBAAiB,CAAC;IAC7B,CAAC,CAAC,CAAC,CAAC;AAER,CAAC;AA5Be,sBAAc,iBA4B7B,CAAA;;AC3GD,uBAAqB,UACrB,CAAC,CAD8B;AAC/B,2BAAuE,cACvE,CAAC,CADoF;AACrF,sBAAsE,SACtE,CAAC,CAD8E;AAC/E,mBAAuB,MACvB,CAAC,CAD4B;AAC7B,sBAAoD,SACpD,CAAC,CAD4D;AAC7D,sBAAyC,SACzC,CAAC,CADiD;AAClD,yBAA+C,YAC/C,CAAC,CAD0D;AAC3D,uBAA+C,UAC/C,CAAC,CADwD;AACzD,0BAAqD,aACrD,CAAC,CADiE;AAClE,wBAAgD,WAChD,CAAC,CAD0D;AAC3D,0BAAoD,aACpD,CAAC,CADgE;AACjE,0BAAoD,aACpD,CAAC,CADgE;AACjE,0BAAoD,aACpD,CAAC,CADgE;AACjE,uBAA4B,oBAC5B,CAAC,CAD+C;AAChD,uBAA6B,oBAI7B,CAAC,CAJgD;AAIjD,IAAM,wBAAwB,GAAG,yBAAyB,CAAC;AA4B3D;IAgBC,0BAAY,OAAuB;QAdnC,SAAI,GAAW,KAAK,CAAC,CAAC;QACtB,iBAAY,GAAsB,KAAK,CAAC,CAAC;QACzC,WAAM,GAAwB,KAAK,CAAC,CAAC;QACrC,QAAG,GAAwB,KAAK,CAAC,CAAC;QAY3B,sBAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IAEF,uBAAC;AAAD,CApBA,AAoBC,IAAA;AApBY,wBAAgB,mBAoB5B,CAAA;AAwBU,cAAM,GAAqB,qBAAa,CAAC,gBAAgB,CAAC,CAAC;AAEtE,IAAI,WAAW,GAAG,CAAC,CAAC;AAEpB;IAEI,MAAM,CAAC,0BAAwB,EAAE,WAAa,CAAC;AAEnD,CAAC;AAKD,uBAA8B,WAA8B,EAAE,IAAa,EACvE,YAAgC,EAAE,qBAA6B;IAK/D,IAAI,GAAG,GAAG,2BAAc,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;IAGxD,eAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,4BAA4B,CAAC,CAAC;IAGnD,IAAI,WAAmB,CAAC;IACxB,EAAE,CAAC,CAAC,WAAW,GAAG,oBAAO,CAAC,cAAc,CAAC,wBAAwB,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;QAC9E,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACvC,CAAC;IAED,IAAI,UAAU,GAAsB,6BAAgB,gBAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAK,GAAG,EAAC,CAAC;IAElF,IAAI,SAAS,GAAU,EAAE,CAAC;IAC1B,IAAI,MAAM,GAAU,EAAE,CAAC;IACvB,IAAI,QAAQ,GAAU,EAAE,CAAC;IACzB,IAAI,UAAU,GAAU,EAAE,CAAC;IAC3B,IAAI,OAAO,GAAU,EAAE,CAAC;IACxB,IAAI,UAAU,GAAU,EAAE,CAAC;IAC3B,IAAI,UAAU,GAAU,EAAE,CAAC;IAC3B,IAAI,UAAU,GAAU,EAAE,CAAC;IAC3B,IAAI,OAAO,GAAU,EAAE,CAAC;IAGxB,2BAA2B,GAA4B;QAGnD,EAAE,CAAC,CAAC,gBAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAChB,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACtB,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,eAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACpB,GAAG,CAAC,CAAa,UAAkB,EAAlB,KAAe,GAAG,EAA9B,cAAQ,EAAR,IAA8B,CAAC;gBAA/B,IAAI,IAAI,SAAA;gBACT,iBAAiB,CAAC,IAAI,CAAC,CAAC;aAC3B;QACL,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,0BAAa,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC;YAMxC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAqB,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;QAElE,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,YAAY,0BAAe,CAAC,CAAC,CAAC;YACtC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACxB,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,YAAY,oBAAY,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,0BAAa,CAAC,GAAG,EAAE,2BAAiB,CAAC,CAAC,CAAC,CAAC;YAC7C,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,0BAAa,CAAC,GAAG,EAAE,+BAAmB,CAAC,CAAC,CAAC,CAAC;YAC/C,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACzB,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,0BAAa,CAAC,GAAG,EAAE,yBAAgB,CAAC,CAAC,CAAC,CAAC;YAC5C,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACtB,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,0BAAa,CAAC,GAAG,EAAE,+BAAmB,CAAC,CAAC,CAAC,CAAC;YAC/C,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACzB,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,0BAAa,CAAC,GAAG,EAAE,+BAAmB,CAAC,CAAC,CAAC,CAAC;YAC/C,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACzB,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,0BAAa,CAAC,GAAG,EAAE,+BAAmB,CAAC,CAAC,CAAC,CAAC;YAC/C,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACzB,CAAC;QACD,IAAI,CAAC,CAAC;YAEF,MAAM,IAAI,KAAK,CAAC,wDAAsD,GAAK,CAAC,CAAC;QACjF,CAAC;IAEL,CAAC;IAED,IAAI,OAAO,GAAG,EAAE,CAAC,MAAM,CACnB,CAAC,UAAU,CAAC,YAAY,IAAI,EAAE,CAAC,EAC/B,CAAC,YAAY,IAAI,EAAE,CAAC,CACvB,CAAC;IAEF,OAAO,CAAC,OAAO,CAAC,UAAC,GAAG,IAAK,OAAA,iBAAiB,CAAC,GAAG,CAAC,EAAtB,CAAsB,CAAC,CAAC;IAEjD,IAAI,GAAG,IAAI,IAAI,UAAU,CAAC,IAAI,IAAI,gBAAgB,EAAE,CAAC;IAGrD,IAAI,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAI7C,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IAClD,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,qBAAqB,IAAI,EAAE,CAAC,CAAC,CAAA;IAGzE,IAAI,SAAS,GAAe,EAAE,CAAC;IAC/B,EAAE,CAAC,CAAC,kBAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAAC,SAAS,CAAC,IAAI,CAAC,aAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;IACnF,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;QACpB,EAAE,CAAC,CAAC,kBAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAAC,SAAS,CAAC,IAAI,CAAY,UAAU,CAAC,MAAM,CAAC,CAAC;QAChF,IAAI,CAAC,EAAE,CAAC,CAAC,eAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAAC,SAAS,GAAG,SAAS,CAAC,MAAM,CAAc,UAAU,CAAC,MAAM,CAAC,CAAA;IACrG,CAAC;IACD,GAAG,CAAC,CAAW,UAAS,EAAnB,qBAAM,EAAN,IAAmB,CAAC;QAApB,IAAI,EAAE,GAAI,SAAS,IAAb;QAAe,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;KAAA;IAG9C,IAAI,MAAM,GAAe,EAAE,CAAC;IAC5B,EAAE,CAAC,CAAC,kBAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAAC,MAAM,CAAC,IAAI,CAAC,aAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;IAC1E,EAAE,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;QACjB,EAAE,CAAC,CAAC,kBAAU,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAY,UAAU,CAAC,GAAG,CAAC,CAAC;QACvE,IAAI,CAAC,EAAE,CAAC,CAAC,eAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAc,UAAU,CAAC,GAAG,CAAC,CAAA;IACzF,CAAC;IACD,GAAG,CAAC,CAAW,UAAM,EAAhB,kBAAM,EAAN,IAAgB,CAAC;QAAjB,IAAI,EAAE,GAAI,MAAM,IAAV;QAAY,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;KAAA;IAExC,sBAAa,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IACrC,uBAAc,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAEtC,GAAG,CAAC,CAAa,UAAM,EAAlB,kBAAQ,EAAR,IAAkB,CAAC;QAAnB,IAAI,IAAI,GAAI,MAAM,IAAV;QAAY,oBAAY,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;KAAA;IACtD,GAAG,CAAC,CAAa,UAAS,EAArB,qBAAQ,EAAR,IAAqB,CAAC;QAAtB,IAAI,IAAI,GAAI,SAAS,IAAb;QAAe,0BAAe,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;KAAA;IAC5D,GAAG,CAAC,CAAa,UAAO,EAAnB,mBAAQ,EAAR,IAAmB,CAAC;QAApB,IAAI,IAAI,GAAI,OAAO,IAAX;QAAa,uBAAc,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;KAAA;IACzD,GAAG,CAAC,CAAa,UAAU,EAAtB,sBAAQ,EAAR,IAAsB,CAAC;QAAvB,IAAI,IAAI,GAAI,UAAU,IAAd;QAAgB,6BAAiB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;KAAA;IAC/D,GAAG,CAAC,CAAa,UAAQ,EAApB,oBAAQ,EAAR,IAAoB,CAAC;QAArB,IAAI,IAAI,GAAI,QAAQ,IAAZ;QAAc,wBAAc,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;KAAA;IAC1D,GAAG,CAAC,CAAa,UAAU,EAAtB,sBAAQ,EAAR,IAAsB,CAAC;QAAvB,IAAI,IAAI,GAAI,UAAU,IAAd;QAAgB,4BAAgB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;KAAA;IAC9D,GAAG,CAAC,CAAa,UAAU,EAAtB,sBAAQ,EAAR,IAAsB,CAAC;QAAvB,IAAI,IAAI,GAAI,UAAU,IAAd;QAAgB,4BAAgB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;KAAA;IAC9D,GAAG,CAAC,CAAa,UAAU,EAAtB,sBAAQ,EAAR,IAAsB,CAAC;QAAvB,IAAI,IAAI,GAAI,UAAU,IAAd;QAAgB,4BAAgB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;KAAA;IAE9D,oBAAO,CAAC,cAAc,CAAC,wBAAwB,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IAEpE,MAAM,CAAC,QAAQ,CAAC;AAEpB,CAAC;AApIe,qBAAa,gBAoI5B,CAAA;;AC3OD,uBAAqB,UAAU,CAAC,CAAA;AAEhC,2BAA+C,cAAc,CAAC,CAAA;AAC9D,sBAAwD,SAAS,CAAC,CAAA;AAyBlE;IAMI,2BAAY,OAAuB;QAJnC,SAAI,GAAW,KAAK,CAAC,CAAC;QACtB,aAAQ,GAAmD,KAAK,CAAC,CAAC;QAClE,YAAO,GAAa,KAAK,CAAC,CAAC;QAIvB,eAAM,CAAC,OAAO,CAAC,OAAO,EAAE,0BAA0B,CAAC,CAAC;QACpD,eAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,8BAA8B,CAAC,CAAC;QAE9D,sBAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC;IAEL,wBAAC;AAAD,CAdA,AAcC,IAAA;AAdY,yBAAiB,oBAc7B,CAAA;AAsBU,eAAO,GAAwB,qBAAa,CAAC,iBAAiB,CAAC,CAAC;AAK3E,wBAA+B,YAAgC,EAAE,QAAoB,EAAE,IAAa;IAKhG,IAAI,GAAG,GAAG,2BAAc,CAAC,YAAY,EAAE,iBAAiB,CAAC,CAAC;IAG1D,eAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,oCAAoC,CAAC,CAAC;IAE3D,IAAI,UAAU,GAAuB,EAAgB,CAAC;IACtD,6BAAgB,gBAAC,UAAU,SAAK,GAAG,EAAC,CAAC;IAErC,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;IAEjD,EAAE,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtB,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAQ,UAAU,CAAC,QAAQ,CAAC,CAAC;IACvD,CAAC;IACD,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;QAC1B,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC;IAC/C,CAAC;IACD,IAAI,CAAC,CAAC;QACF,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IACzC,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC;AAEpB,CAAC;AA3Be,sBAAc,iBA2B7B,CAAA;;;;;;;;;;;AChGD,uBAAqB,cAErB,CAAC,CAFkC;AAEnC,mBAAiC,UACjC,CAAC,CAD0C;AAC3C,sBAA4G,aAC5G,CAAC,CADwH;AACzH,2BAA8D,kBAC9D,CAAC,CAD+E;AAChF,2BAAsD,cAEtD,CAAC,CAFmE;AAQpE,2BAAyD,cAIzD,CAAC;AAJO,2CAAS;AAAE,mDAAoD;AAkBvE;IASI,yBAAY,OAAsB;QAPlC,UAAK,GAAoE,KAAK,CAAC,CAAC;QAChF,qBAAgB,GAAY,IAAI,CAAC;QAEjC,YAAO,GAAkB,KAAK,CAAC,CAAC;QAChC,aAAQ,GAAY,KAAK,CAAC,CAAC;QAC3B,eAAU,GAAY,KAAK,CAAC,CAAC;QAIzB,sBAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAElC,CAAC;IAEL,sBAAC;AAAD,CAfA,AAeC,IAAA;AAfY,uBAAe,kBAe3B,CAAA;AAOU,aAAK,GAAoB,qBAAa,CAAC,eAAe,CAAC,CAAC;AAKnE;IAII,sBACY,UAA2B,EAC3B,SAA8B,EAC9B,QAAwB;QAFxB,eAAU,GAAV,UAAU,CAAiB;QAC3B,cAAS,GAAT,SAAS,CAAqB;QAC9B,aAAQ,GAAR,QAAQ,CAAgB;QAL5B,aAAQ,GAA0B,IAAI,CAAC;IAM/C,CAAC;IAED,2BAAI,GAAJ,UACyB,SAAmC,EACtC,MAAqB,EAChB,WAA+B;QAEtD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;QAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;QAC5B,IAAI,gBAAgB,GAAmB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEnE,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;YACnB,WAAW,CAAC,UAAU,EAAE,CAAC;QAC7B,CAAC;QAED,EAAE,CAAC,CAAC,iBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACzB,gBAAgB,CAAC,KAAK,GAAG,kBAAU,CAAC,KAAK,CAAC,KAAK,CAAC;gBAC5C,SAAS,CAAC,MAAM,CAAO,KAAK,CAAC,KAAK,CAAC;gBAC/B,KAAK,CAAC,KAAK,CAAC;QACxB,CAAC;QAED,EAAE,CAAC,CAAC,iBAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC3B,gBAAgB,CAAC,QAAQ,GAAG,kBAAU,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACjD,SAAS,CAAC,MAAM,CAAO,IAAI,CAAC,QAAQ,CAAC;gBACxB,IAAI,CAAC,QAAQ,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,iBAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC9B,gBAAgB,CAAC,WAAW,GAAG,kBAAU,CAAC,IAAI,CAAC,WAAW,CAAC;gBACvD,SAAS,CAAC,MAAM,CAAO,IAAI,CAAC,WAAW,CAAC;gBACpC,IAAI,CAAC,WAAW,CAAC;QAC7B,CAAC;QAED,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC9C,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IAEzB,CAAC;IAED,8BAAO,GAAP,UAA+B,WAA+B;QAE1D,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;YAC7B,WAAW,CAAC,UAAU,EAAE,CAAC;QAC7B,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QAC5B,CAAC;IAEL,CAAC;IA7CD;QACI,WAAC,WAAM,CAAC,WAAW,CAAC,CAAA;QACpB,WAAC,WAAM,CAAC,QAAQ,CAAC,CAAA;QACjB,WAAC,WAAM,CAAC,aAAa,CAAC,CAAA;OAH1B,8BAAI,QAkCH;IAED;QAAQ,WAAC,WAAM,CAAC,aAAa,CAAC,CAAA;OAA9B,iCAAO,QASN;IAEL,mBAAC;AAAD,CAzDA,AAyDC,IAAA;AAzDY,oBAAY,eAyDxB,CAAA;AAKD,yBAAgC,UAAoB,EAAE,KAAiB;IAEnE,IAAI,UAAU,GAAG,2BAAc,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;IAC7D,IAAI,SAAS,GAAG,2BAAc,CAAC,UAAU,EAAE,gCAAmB,CAAC,CAAC;IAGhE,eAAM,CAAC,UAAU,EAAE,2BAA2B,CAAC,CAAC;IAChD,eAAM,CAAC,SAAS,EAAE,+BAA+B,CAAC,CAAC;IAEnD,IAAI,QAAQ,GAAmC;QAC3C,UAAU,EAAE,UAAU;KACzB,CAAC;IAEF,IAAI,KAAK,GAAqB,EAAiB,CAAC;IAChD,6BAAgB,gBAAC,KAAK,SAAK,UAAU,EAAC,CAAC;IAMvC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACR,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,EAAE,CAAC,CAAC,iBAAS,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACpC,QAAQ,CAAC,gBAAgB,GAAG,KAAK,CAAC,gBAAgB,CAAC;IACvD,CAAC;IAED,EAAE,CAAC,CAAC,iBAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC3B,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;IACrC,CAAC;IAED,EAAE,CAAC,CAAC,iBAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC5B,QAAQ,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;IACvC,CAAC;IAED,IAAI,IAAI,GAAyB,EAAiB,CAAC;IACnD,6BAAgB,gBAAC,IAAI,SAAK,SAAS,EAAC,CAAC;IAErC,EAAE,CAAC,CAAC,iBAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC5B,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IACxC,CAAC;IAED,EAAE,CAAC,CAAC,iBAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC3B,QAAQ,CAAC,QAAQ,GAAG,+BAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1D,CAAC;IAED,EAAE,CAAC,CAAC,iBAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAChC,QAAQ,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;IAChD,CAAC;IAED,EAAE,CAAC,CAAC,iBAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC3B,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IACtC,CAAC;IAED,EAAE,CAAC,CAAC,iBAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC9B,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;IAC5C,CAAC;IAED,EAAE,CAAC,CAAC,iBAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACpC,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;IACxD,CAAC;IAED,EAAE,CAAC,CAAC,iBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACvB,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC9B,CAAC;IAED,EAAE,CAAC,CAAC,iBAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAC/B,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;IAC9C,CAAC;IAcD,MAAM,CAAC,IAAI,YAAY,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AAEnD,CAAC;AArFe,uBAAe,kBAqF9B,CAAA;;;;;;;;AC9MD,uBAAqB,cACrB,CAAC,CADkC;AACnC,wCAAoC,2BAOpC,CAAC,CAP8D;AAO/D;IAAA;IAQA,CAAC;IARD;QAAC,eAAM,CAAC;YACJ,IAAI,EAAE,kBAAkB;YACxB,YAAY,EAAE;gBACV,+CAAqB;aACxB;SACJ,CAAC;6BAGD;IAAD,2BAAC;AAAD,CARA,AAQC,IAAA;AAFY,4BAAoB,uBAEhC,CAAA;;AChBD,mBAAyB,UACzB,CAAC,CADkC;AACnC,sBAAkD,aAClD,CAAC,CAD8D;AAC/D,2BAA+C,kBAO/C,CAAC,CAPgE;AAOjE;IAII,0BAAY,MAA4B;QACpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAEL,uBAAC;AAAD,CARA,AAQC,IAAA;AARY,wBAAgB,mBAQ5B,CAAA;AAOU,cAAM,GAAqB,qBAAa,CAAC,gBAAgB,CAAC,CAAC;AAKtE,wBAA+B,gBAA0B,EAAE,QAAoB;IAK3E,IAAI,KAAK,GAAwB,2BAAc,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,CAAC;IAEpF,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;QAAC,MAAM,CAAC;IAE1B,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI,IAAK,OAAA,6BAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,EAArC,CAAqC,CAAC,CAAC;IAE/D,QAAQ,CAAC,MAAM,CAAC,eAAU,CAAC,CAAC,oBAAoB,CAAC,EAAE,UAAC,kBAA4C;QAE5F,eAAO,CAAC,MAAM,EAAE,UAAC,OAAO,EAAE,KAAK;YAC3B,EAAE,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,CAAC,CAAC;gBAChB,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YAC1C,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAC5C,CAAC;QACL,CAAC,CAAC,CAAC;IAEP,CAAC,CAAC,CAAC,CAAC;AAER,CAAC;AAzBe,sBAAc,iBAyB7B,CAAA;;ACnDD,mBAAmC,UACnC,CAAC,CAD4C;AAC7C,sBAA4F,aAC5F,CAAC,CADwG;AACzG,2BAA+C,kBAC/C,CAAC,CADgE;AACjE,qBAA6B,YAC7B,CAAC,CADwC;AACzC,uBAAmC,UACnC,CAAC,CAD4C;AAC7C,sBAA8B,oBAE9B,CAAC,CAFiD;AAElD,qBAAmB,YACnB,CAAC;AADO,2BAAuB;AAC/B,uBAA8C,UAQ9C,CAAC;AARO,qDAAgB;AAAE,+CAA8B;AAqCxD;IAII,0BAAY,MAAgC;QAExC,eAAO,CAAC,MAAM,EAAE,UAAC,KAAK,EAAE,IAAI,IAAK,OAAA,KAAK,CAAC,IAAI,GAAG,IAAI,EAAjB,CAAiB,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IAEzB,CAAC;IAEL,uBAAC;AAAD,CAXA,AAWC,IAAA;AAXY,wBAAgB,mBAW5B,CAAA;AAUU,cAAM,GAA2B,qBAAa,CAAC,gBAAgB,CAAC,CAAC;AAC5E,cAAM,CAAC,EAAE,GAAG,WAAE,CAAC;AAKf,uBAA8B,gBAA0B,EAAE,QAAoB;IAK1E,IAAI,gBAAgB,GAAwB,2BAAc,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,CAAC;IAE/F,EAAE,CAAC,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC;QAC1B,IAAI,MAAM,GAAmB,EAAE,CAAC;QAGhC,eAAO,CAAC,gBAAgB,EAAE,UAAC,IAAI;mBAC3B,eAAO,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,KAAK;uBACvB,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;YAAtC,CAAsC,CAAC;QAD3C,CAC2C,CAAC,CAAC;QAEjD,QAAQ,CAAC,MAAM,CAAC,eAAU,CAAC,CAAC,gBAAgB,CAAC,EAAE,UAAC,cAAoC;YAEhF,GAAG,CAAC,CAAc,UAAM,EAAnB,kBAAS,EAAT,IAAmB,CAAC;gBAApB,IAAI,KAAK,GAAI,MAAM,IAAV;gBACV,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aAC/B;QAEL,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,yBAAgB,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAC;AAEjD,CAAC;AA1Be,qBAAa,gBA0B5B,CAAA;AAKD,4BAA4B,KAA0B;IAElD,IAAI,eAAe,GAAiB,EAAE,CAAC;IAEvC,EAAE,CAAC,CAAC,iBAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAAC,eAAe,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IAC7D,EAAE,CAAC,CAAC,iBAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAAC,eAAe,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;IAC1D,EAAE,CAAC,CAAC,iBAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAAC,eAAe,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;IACzE,EAAE,CAAC,CAAC,iBAAS,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAAC,eAAe,CAAC,cAAc,GAAG,KAAK,CAAC,cAAc,CAAC;IAC3F,EAAE,CAAC,CAAC,iBAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAAC,eAAe,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;IACtE,EAAE,CAAC,CAAC,iBAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAAC,eAAe,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IACnE,EAAE,CAAC,CAAC,iBAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAAC,eAAe,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;IAGtE,EAAE,CAAC,CAAC,iBAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAI,QAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC1B,EAAE,CAAC,CAAC,CAAC,gBAAQ,CAAC,QAAM,CAAC,CAAC,CAAC,CAAC;YACpB,QAAM,GAA0B,QAAO,CAAC,IAAI,CAAC;QACjD,CAAC;QAEM,eAAgB,CAAC,MAAM,GAAG,QAAM,CAAC;IAC5C,CAAC;IASD,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QAC5B,IAAI,KAAK,GAAwB,EAAE,CAAC;QAEpC,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YACb,KAAK,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC5C,CAAC;QACD,IAAI,CAAC,CAAC;YACF,eAAO,CAAC,KAAK,CAAC,KAAK,EAAE,UAAC,UAAU,EAAE,MAAM,IAAK,OAAA,KAAK,CAAC,MAAM,CAAC,GAAG,eAAe,CAAC,UAAU,CAAC,EAA3C,CAA2C,CAAC,CAAA;QAC7F,CAAC;QAED,eAAe,CAAC,KAAK,GAAG,KAAK,CAAC;IAClC,CAAC;IACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QACnB,IAAI,OAAO,GAAG,uBAAe,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE3C,EAAE,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1B,IAAI,OAAO,GAAc,eAAe,CAAC,OAAO,CAAC;YACjD,eAAe,CAAC,OAAO,GAAG,eAAU,CAAC,CAAC,WAAW,CAAC,EAAE,UAAS,SAAmC;gBAC5F,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBAC1B,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;QACP,CAAC;QACD,IAAI,CAAC,CAAC;YACF,eAAe,CAAC,OAAO,GAAG,aAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC9D,CAAC;QAED,EAAE,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;YACzB,IAAI,MAAM,GAAc,eAAe,CAAC,MAAM,CAAC;YAC/C,eAAe,CAAC,MAAM,GAAG,eAAU,CAAC,CAAC,WAAW,CAAC,EAAE,UAAS,SAAmC;gBAC3F,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;gBAC3C,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;QACP,CAAC;QACD,IAAI,CAAC,CAAC;YACF,eAAe,CAAC,MAAM,GAAG,aAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAChE,CAAC;IACL,CAAC;IAED,MAAM,CAAC,eAAe,CAAC;AAE3B,CAAC;AAKD,yBAAyB,SAAmB;IAKxC,IAAI,KAAK,GAAG,2BAAc,CAAC,SAAS,EAAE,qBAAc,CAAC,CAAC;IAEtD,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;QAChB,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;IAC5C,CAAC;IAED,IAAI,QAAQ,GAAoB,6BAAgB,gBAAC,EAAE,SAAK,KAAK,EAAC,CAAC;IAC/D,IAAI,IAAI,GAAO,EAAE,CAAC;IAElB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;IAC5B,EAAE,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC;QAAC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;IACrE,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC;QAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;IACzD,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC;QAAC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;IAGlE,MAAM,CAAC,IAAI,CAAC;AAEhB,CAAC;;ACzMD,uBAAqB,UAAU,CAAC,CAAA;AAKhC;IAEI,sBAAoB,KAAa,EAAU,MAAY;QAAnC,UAAK,GAAL,KAAK,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAM;IACvD,CAAC;IAED,sBAAI,8BAAI;aAAR;YACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;;;OAAA;IAED,sBAAI,+BAAK;aAAT;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;;;OAAA;IAEL,mBAAC;AAAD,CAbA,AAaC,IAAA;AAbY,oBAAY,eAaxB,CAAA;AAUD,eAA4B,IAAY,EAAE,KAAW;IAGjD,eAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,8BAA8B,CAAC,CAAC;IAEtD,MAAM,CAAC,IAAI,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAEzC,CAAC;AAPe,aAAK,QAOpB,CAAA;AAED,sBAAmC,KAAyB,EAAE,QAAoB,EAAE,IAAa;IAG7F,eAAM,CAAC,KAAK,YAAY,YAAY,EAAE,oCAAoC,CAAC,CAAC;IAE5E,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACxC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;IAElC,MAAM,CAAC,QAAQ,CAAC;AAEpB,CAAC;AAVe,oBAAY,eAU3B,CAAA;;AC/CD,uBAAqB,UACrB,CAAC,CAD8B;AAC/B,sBAAqE,SAQrE,CAAC,CAR6E;AAwC9E;IAQI,wBAAY,OAAoB;QANhC,aAAQ,GAAmC,KAAK,CAAC,CAAC;QAClD,gBAAW,GAAmC,KAAK,CAAC,CAAC;QACrD,WAAM,GAAoB,KAAK,CAAC,CAAC;QAEjC,iBAAY,GAAW,KAAK,CAAC,CAAC;QAI1B,eAAM,CAAC,OAAO,CAAC,OAAO,EAAE,0BAA0B,CAAC,CAAC;QACpD,eAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,EAAE,sCAAsC,CAAC,CAAC;QAE9E,sBAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC;IAEL,qBAAC;AAAD,CAhBA,AAgBC,IAAA;AAhBY,sBAAc,iBAgB1B,CAAA;AAUU,YAAI,GAAmB,qBAAa,CAAC,cAAc,CAAC,CAAC;;ACtEhE,mBAAiC,MACjC,CAAC;AADO,6BAAM;AAAE,qCAAuB;AACvC,sBAAoB,SAAS,CAAC;AAAtB,8BAAsB;AAC9B,yBAAuB,YAAY,CAAC;AAA5B,uCAA4B;AACpC,uBAAqB,UAAU,CAAC;AAAxB,iCAAwB;AAChC,0BAAwB,aAAa,CAAC;AAA9B,0CAA8B;AACtC,wBAAsB,WAAW,CAAC;AAA1B,oCAA0B;AAClC,0BAAwB,aAAa,CAAC;AAA9B,0CAA8B;AACtC,qBAAmB,QAAQ,CAAC;AAApB,2BAAoB;AAC5B,+BAAwD,kBAAkB,CAAC;AAAnE,uDAAa;AAAE,iFAAoD;AAC3E,0BAA4C,aAAa,CAAC;AAAlD,0CAAS;AAAE,gDAAY;AAAE,gCAAyB;AAC1D,0BAAwB,aAAa,CAAC;AAA9B,0CAA8B;AACtC,uBAAoC,UAAU,CAAC;AAAvC,iCAAM;AAAE,+CAA+B;AAC/C,4BAA0B,eAAe,CAAC;AAAlC,gDAAkC;AAC1C,0BAAwB,aAAa,CAAC;AAA9B,0CAA8B","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/// <reference path=\"./_references\" />\r\n\r\nimport {isString, isArray} from './utils';\r\n\r\nvar slice = Array.prototype.slice;\r\n\r\nexport interface AssertFunction extends Function {\r\n\t(test: any): void;\r\n\t(test: any, errorMessage: string): void;\r\n\t(test: any, error: Error): void;\r\n}\r\n\r\nexport interface NotNullFunction extends Function {\r\n\t(value: any): void;\r\n\t(value: any, errorMessage: string): void;\r\n\t(value: any, error: Error): void;\r\n}\r\n\r\nexport interface NotEmptyFunction extends Function {\r\n\t(value: string|Array<any>): void;\r\n\t(value: string|Array<any>, errorMessage: string): void;\r\n\t(value: string|Array<any>, error: Error): void;\r\n}\r\n\r\nexport interface assert extends AssertFunction {\t\r\n\tnotNull: NotNullFunction;\r\n\tnotEmpty: NotEmptyFunction;\r\n}\r\n\r\nexport function AssertionError(message?: string) {\r\n    // Error.apply(this, arguments);\r\n    this.name = 'AssertionError';\r\n    this.message = message != null ? message : '';\r\n}\r\n(function() {\r\n    function __() { this.constructor = AssertionError; }\r\n    __.prototype = Error.prototype;\r\n    AssertionError.prototype = new (<any>__)();\r\n})();\r\n\r\nfunction _assert(condition: boolean, errorOrMessage?: any): void {    \r\n    if (!condition) {\r\n        throw (errorOrMessage instanceof Error) ? errorOrMessage :\r\n            new (<any>AssertionError)(errorOrMessage || 'Assertion failed');\r\n    }    \r\n}\r\n\r\nfunction _notNull(value: any, errorOrMessage?: any) {\t\r\n\t_assert(value != null, errorOrMessage);\r\n}\r\n\r\nfunction _notEmpty(value: any, errorOrMessage?: any) {\r\n    _notNull(value, errorOrMessage);\r\n    \r\n    if (isString(value)) {\r\n        _assert(value.trim().length > 0, errorOrMessage);\r\n    }\r\n    else {\r\n        _assert(value.length > 0, errorOrMessage);\r\n    }\r\n}\r\n\r\n(<assert> _assert).notNull = _notNull;\r\n(<assert> _assert).notEmpty = _notEmpty;\r\n\r\nexport var assert = <assert> _assert;","/// <reference path=\"./_references\" />\r\n\r\nimport {forEach, isDefined} from './utils';\r\n\r\nexport const ANNOTATIONS_METADATA_KEY = 'tng';\r\n\r\nvar _Reflect = Reflect;\r\nexport {_Reflect as Reflect};\r\n\r\nconst functionPrototype = Object.getPrototypeOf(Function);\r\n\r\nfunction GetPrototypeOf(O: any): Object {\r\n\r\n    let proto = Object.getPrototypeOf(O);\r\n    if (typeof O !== \"function\" || O === functionPrototype) {\r\n        return proto;\r\n    }\r\n\r\n    // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\r\n    // Try to determine the superclass constructor. Compatible implementations\r\n    // must either set __proto__ on a subclass constructor to the superclass constructor,\r\n    // or ensure each class has a valid `constructor` property on its prototype that\r\n    // points back to the constructor.\r\n\r\n    // If this is not the same as Function.[[Prototype]], then this is definately inherited.\r\n    // This is the case when in ES6 or when using __proto__ in a compatible browser.\r\n    if (proto !== functionPrototype) {\r\n        return proto;\r\n    }\r\n\r\n    // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\r\n    let prototype = O.prototype;\r\n    let prototypeProto = Object.getPrototypeOf(prototype);\r\n    if (prototypeProto == null || prototypeProto === Object.prototype) {\r\n        return proto;\r\n    }\r\n\r\n    // if the constructor was not a function, then we cannot determine the heritage.\r\n    let constructor = prototypeProto.constructor;\r\n    if (typeof constructor !== \"function\") {\r\n        return proto;\r\n    }\r\n\r\n    // if we have some kind of self-reference, then we cannot determine the heritage.\r\n    if (constructor === O) {\r\n        return proto;\r\n    }\r\n\r\n    // we have a pretty good guess at the heritage.\r\n    return constructor;\r\n\r\n}\r\n\r\nfunction getKey(key?: string): string {\r\n\treturn !key ? ANNOTATIONS_METADATA_KEY : `${ANNOTATIONS_METADATA_KEY}:${key}`;\r\n}\r\n\r\nexport function getAnnotations(target: any, type?: Function, key?: string): any[] {\r\n\r\n    let metas: any[] = [];\r\n    let proto = target;\r\n\r\n    do {\r\n        metas.push(getOwnAnnotations(proto, type, key));\r\n        proto = GetPrototypeOf(proto);\r\n    } while (typeof proto === \"function\" && proto !== functionPrototype);\r\n\r\n    metas.reverse();\r\n    let annotations: any[] = [];\r\n\r\n    for (let i = 0; i < metas.length; i++) {\r\n        annotations = annotations.concat(metas[i]);\r\n    }\r\n\r\n    return annotations;\r\n\r\n}\r\n\r\n// export function getAnnotations(target: any, type?: Function, key?: string): any[] {\r\n\r\n// \tvar annotations = <any[]> Reflect.getMetadata(getKey(key), target) || [];\r\n\r\n// \tif (type) {\r\n// \t\treturn annotations.filter((value) => value instanceof type);\r\n// \t}\r\n\r\n// \treturn annotations.slice(0);\r\n\r\n// }\r\n\r\nexport function getOwnAnnotations(target: any, type?: Function, key?: string): any[] {\r\n\r\n\tvar annotations = <any[]> Reflect.getOwnMetadata(getKey(key), target) || [];\r\n\r\n\tif (type) {\r\n\t\treturn annotations.filter((value) => value instanceof type).reverse();\r\n\t}\r\n\r\n\treturn annotations.slice(0).reverse();\r\n\r\n}\r\n\r\nexport function setAnnotations(target: any, annotations: any[], key?: string):void {\r\n\r\n\tReflect.defineMetadata(getKey(key), annotations, target);\r\n\r\n}\r\n\r\nexport function addAnnotation(target: any, annotation: any, key?: string):void {\r\n\r\n\tvar annotations = getOwnAnnotations(target, null, key);\r\n\tannotations.push(annotation);\r\n\tsetAnnotations(target, annotations, key);\r\n\r\n}\r\n\r\nexport function hasAnnotation(target: any, type?: Function, key?: string): boolean {\r\n\r\n\tif (!type) {\r\n\t\treturn Reflect.hasMetadata(getKey(key), target);\r\n\t}\r\n\r\n\treturn getAnnotations(target, type, key).length > 0;\r\n\r\n}\r\n\r\nexport function hasOwnAnnotation(target: any, type?: Function, key?: string): boolean {\r\n\r\n\tif (!type) {\r\n\t\treturn Reflect.hasOwnMetadata(getKey(key), target);\r\n\t}\r\n\r\n\treturn getAnnotations(target, type, key).length > 0;\r\n\r\n}\r\n\r\n// export function mergeAnnotations(...annotations: any[]): any;\r\nexport function mergeAnnotations<Type>(...annotations: any[]): Type;\r\nexport function mergeAnnotations(...annotations: any[]): any {\r\n\r\n\tif (!annotations.length) {\r\n\t\treturn null;\r\n\t}\r\n\telse if (annotations.length == 1) {\r\n\t\treturn annotations[0];\r\n\t}\r\n\r\n\tvar dest = <{ [key: string]: any }><any> annotations.shift();\r\n\r\n\tfor (let source of annotations) {\r\n\t\tforEach(source, (value, key) => {\r\n\t\t\t// We only replace if defined (nulls are ok, they remove previously set values)\r\n\t\t\tif (isDefined(value)) {\r\n\t\t\t\tdest[key] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn <any> dest;\r\n\r\n}","/// <reference path=\"../../_references.ts\" />\r\n\r\nimport {Inject} from '../../di'\r\nimport {Decorator} from '../../decorator'\r\nimport {getModalHandler} from './modal'\r\n\r\nimport IModalService = ng.ui.bootstrap.IModalService\r\nimport IModalSettings = ng.ui.bootstrap.IModalSettings\r\nimport IModalServiceInstance = ng.ui.bootstrap.IModalServiceInstance\r\nimport IInjectorService = ng.auto.IInjectorService\r\n\r\n\r\n\r\n@Decorator({\r\n\tname: '$modal'\r\n})\r\nexport class ModalServiceDecorator implements Decorator {\r\n\r\n\tdecorate(\r\n\t\t@Inject('$delegate') $modal: IModalService,\r\n\t\t@Inject('$injector') $injector: ng.auto.IInjectorService): IModalService {\r\n\r\n\t\tvar originalOpen = $modal.open;\r\n\t\t$modal.open = function(optionsOrModal: any, scope?: ng.IScope): IModalServiceInstance {\r\n\r\n\t\t\t// Usign @Modal decorator?\r\n\t\t\tif (typeof optionsOrModal === 'function') {\r\n\t\t\t\tvar handler = getModalHandler(<Function> optionsOrModal, scope);\r\n\t\t\t\treturn $injector.invoke(handler.open, handler);\r\n\t\t\t}\r\n\t\t\t// Using the original IModalSettings object\r\n\t\t\telse {\r\n\t\t\t\treturn originalOpen.call($modal, optionsOrModal);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn $modal;\r\n\r\n\t}\r\n\r\n}","/// <reference path=\"../../_references.ts\" />\r\n\r\nimport {makeDecorator, setIfInterface} from '../../utils'\r\nimport {ViewOptions, ViewAnnotation} from '../../view'\r\n\r\n\r\n\r\nexport enum ModalBackdrop {\r\n\tShow,\r\n\tHide,\r\n\tStatic\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const MODAL_BACKDROP_MAP = [true, false, 'static'];\r\n\r\n/**\r\n * Options available when decorating a modal with view information\r\n * TODO document\r\n */\r\nexport interface ModalViewOptions extends ViewOptions {\r\n\r\n    animation?: boolean;\r\n\tbackdrop?: ModalBackdrop;\r\n\tbackdropClass?: string;\r\n\tkeyboard?: boolean;\r\n\twindowClass?: string;\r\n\twindowTemplateUrl?: string;\r\n\tsize?: string;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ModalViewAnnotation extends ViewAnnotation {\r\n\r\n    animation: boolean = void 0;\r\n\tbackdrop: ModalBackdrop = void 0;\r\n\tbackdropClass: string = void 0;\r\n\tkeyboard: boolean = void 0;\r\n\twindowClass: string = void 0;\r\n\twindowTemplateUrl: string = void 0;\r\n\tsize: string = void 0;\r\n\r\n    constructor(options: ModalViewOptions) {\r\n\t\tsuper(options);\r\n\t\tsetIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\ntype ModalViewDecorator = (options: ModalViewOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a modal with view information\r\n */\r\nexport var ModalView = <ModalViewDecorator> makeDecorator(ModalViewAnnotation);","/// <reference path=\"../../_references.ts\" />\r\n\r\nimport {makeDecorator, isNumber} from '../../utils'\r\nimport {getAnnotations} from '../../reflection'\r\nimport {injectable} from '../../di'\r\n\r\n\r\n\r\n/**\r\n * Enumeration of events related to the transition of states.\r\n */\r\nexport const enum StateChangeEvent {\r\n\r\n    /**\r\n     * Fired when the transition begins.\r\n     *\r\n     * Translates to the UI-Router $stateChangeStart event.\r\n     *\r\n     * The $rootScope broadcasts this event down to child scopes.\r\n     *\r\n     * The handler function receives the following parameters:\r\n     *\r\n     * - event: ng.IAngularEvent\r\n     * - toState:\r\n     * - toParams:\r\n     * - fromState:\r\n     * - fromParams:\r\n     *\r\n     * Note: Use event.preventDefault() to prevent the transition from happening.\r\n     */\r\n    STATE_CHANGE_START,\r\n\r\n    /**\r\n     * Fired once the state transition is complete.\r\n     *\r\n     * Translates to the UI-Router $stateChangeSuccess event.\r\n     *\r\n     * The $rootScope broadcasts this event down to child scopes.\r\n     *\r\n     * The handler function receives the following parameters:\r\n     *\r\n     * - event: ng.IAngularEvent\r\n     * - toState:\r\n     * - toParams:\r\n     * - fromState:\r\n     * - fromParams:\r\n     */\r\n    STATE_CHANGE_SUCCESS,\r\n\r\n    /**\r\n     * Fired when an error occurs during transition.\r\n     *\r\n     * Translates to the UI-Router $stateChangeError event.\r\n     *\r\n     * The $rootScope broadcasts this event down to child scopes.\r\n     *\r\n     * The handler function receives the following parameters:\r\n     *\r\n     * - event: ng.IAngularEvent\r\n     * - toState:\r\n     * - toParams:\r\n     * - fromState:\r\n     * - fromParams:\r\n     * - error: Error\r\n     *\r\n     * Note: It's important to note that if you have any errors in your\r\n     * resolve functions (JavaScript errors, non-existent services, etc)\r\n     * they will not throw traditionally. You must listen for this\r\n     * event to catch ALL errors. Use event.preventDefault() to prevent\r\n     * the $UrlRouter from reverting the URL to the previous valid location\r\n     * (in case of a URL navigation).\r\n     */\r\n    STATE_CHANGE_ERROR\r\n\r\n    /**\r\n     * TODO: From version 0.3.0 and up. Does it have a stable release?\r\n     *\r\n     * Fired when a state cannot be found by its name.\r\n     *\r\n     * Translates to the UI-Router $stateNotFound event.\r\n     *\r\n     * The $rootScope broadcasts this event down to child scopes.\r\n     */\r\n    // STATE_NOT_FOUND\r\n\r\n}\r\n\r\n/**\r\n * Enumeration of events related to the loading of view contents.\r\n */\r\nexport const enum ViewLoadEvent {\r\n\r\n    /**\r\n     * Fired once the view begins loading, before the DOM is rendered.\r\n     *\r\n     * Translates to the UI-Router $viewContentLoading event.\r\n     *\r\n     * The $rootScope broadcasts this event down to child scopes.\r\n     *\r\n     * The handler function receives the following parameters:\r\n     *\r\n     * - event: ng.IAngularEvent\r\n     * - viewConfig:\r\n     */\r\n    VIEW_CONTENT_LOADING = 4,\r\n\r\n    /**\r\n     * Fired once the view is loaded, after the DOM is rendered.\r\n     *\r\n     * Translates to the UI-Router $viewContentLoaded event.\r\n     *\r\n     * The '$scope' of the view emits the event up to the $rootScope.\r\n     *\r\n     * The handler function receives the following parameter:\r\n     *\r\n     * - event: ng.IAngularEvent\r\n     */\r\n    VIEW_CONTENT_LOADED = 5\r\n\r\n}\r\n\r\n/**\r\n * Maps the event enums to the actual event names used by the UI-Router.\r\n * @internal\r\n */\r\nconst EVENTS_MAP = [\r\n    '$stateChangeStart',\r\n    '$stateChangeSuccess',\r\n    '$stateChangeError',\r\n    '$stateNotFound',\r\n\r\n    '$viewContentLoading',\r\n    '$viewContentLoaded'\r\n];\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class UiRouterEventListenerAnnotation {\r\n\r\n    constructor(public event: StateChangeEvent|ViewLoadEvent|string, public handler: Function) {\r\n        // TODO validate arguments\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\ntype OnDecorator = (event: StateChangeEvent|ViewLoadEvent|string, handler: Function) => ClassDecorator;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport var On = <OnDecorator> makeDecorator(UiRouterEventListenerAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function publishListeners(moduleController: Function, ngModule: ng.IModule) {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations to ge them on the original order\r\n    // var listenerNotes = <UiRouterEventListenerAnnotation[]> getAnnotations(moduleController, UiRouterEventListenerAnnotation).reverse();\r\n    var listenerNotes = <UiRouterEventListenerAnnotation[]> getAnnotations(moduleController, UiRouterEventListenerAnnotation);\r\n\r\n    if (listenerNotes.length) {\r\n        ngModule.run(injectable(['$rootScope'], ($rootScope: ng.IRootScopeService) => {\r\n\r\n            for (let listenerAnnotation of listenerNotes) {\r\n                let event = <string> listenerAnnotation.event;\r\n\r\n                if (isNumber(event)) {\r\n                    event = EVENTS_MAP[<number> listenerAnnotation.event];\r\n                }\r\n\r\n                $rootScope.$on(event, <any> listenerAnnotation.handler);\r\n            }\r\n\r\n        }));\r\n    }\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\nimport {Reflect, getAnnotations, addAnnotation} from './reflection'\r\n\r\n\r\n\r\ntype extendSignature = <Type>(dest: Type, ...rest: any[]) => Type;\r\n\r\nexport var isDefined = angular.isDefined;\r\nexport var isString = angular.isString;\r\nexport var isNumber = angular.isNumber;\r\nexport var isObject = angular.isObject;\r\nexport var isElement = angular.isElement;\r\nexport var isDate = angular.isDate;\r\nexport var isArray = angular.isArray;\r\nexport var isFunction = angular.isFunction;\r\nexport var forEach = angular.forEach;\r\nexport var extend = <extendSignature> angular.extend;\r\nexport var copy = <extendSignature> angular.copy;\r\nexport var merge = <extendSignature> (<any> angular).merge;\r\nexport var mergeIfValue = <extendSignature> _mergeIfValue;\r\n\r\nexport type FunctionReturningNothing = (...args: any[]) => void;\r\nexport type FunctionReturningSomething = (...args: any[]) => any;\r\nexport type FunctionReturningString = (...args: any[]) => string;\r\nexport type FunctionReturningNumber = (...args: any[]) => number;\r\n\r\nexport interface Map<TValue> {\r\n    [key: string]: TValue;\r\n}\r\n\r\nexport function create<Type>(constructor: { prototype: Type }): Type {\r\n\r\n    return Object.create(constructor.prototype);\r\n\r\n}\r\n\r\nexport function setIf(target:any, source:any) {\r\n\r\n    if (target == null || source == null) {\r\n        return;\r\n    }\r\n\r\n\tfor (let key in source) {\r\n        if (source.hasOwnProperty(key) && isDefined(source[key])) {\r\n            target[key] = source[key];\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function setIfInterface(target:any, source:any) {\r\n\r\n    if (target == null || source == null) {\r\n        return;\r\n    }\r\n\r\n\tfor (let key in source) {\r\n        if (source.hasOwnProperty(key) && isDefined(source[key])) {\r\n            if (target.hasOwnProperty(key)) {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function makeDecorator<T extends Function>(annotationClass: T) {\r\n\r\n    return function() {\r\n\r\n        var annotationInstance = Object.create(annotationClass.prototype);\r\n        annotationClass.apply(annotationInstance, arguments);\r\n\r\n        return function(target: T) {\r\n            addAnnotation(target, annotationInstance);\r\n            return target;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function makeParamDecorator<T extends Function>(annotationClass: T) {\r\n\r\n    return function() {\r\n\r\n        var annotationInstance = Object.create(annotationClass.prototype);\r\n        annotationClass.apply(annotationInstance, arguments);\r\n\r\n        return function(target: T, unusedKey: string, index: number) {\r\n\r\n            var parameters = Reflect.getMetadata('parameters', target);\r\n            parameters = parameters || [];\r\n\r\n            // there might be gaps if some in between parameters do not have annotations.\r\n            // we pad with nulls.\r\n            while (parameters.length <= index) {\r\n                parameters.push(null);\r\n            }\r\n\r\n            parameters[index] = annotationInstance;\r\n            Reflect.defineMetadata('parameters', parameters, target);\r\n            return target;\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const enum SelectorType {\r\n    Attribute,\r\n    Class,\r\n    //Comment,\r\n    Tag\r\n};\r\n\r\ntype Selector = {\r\n    semanticeName: string,\r\n    imperativeName: string,\r\n    type: SelectorType\r\n};\r\n\r\nconst RE_SELECTOR_ATTRIBUTE = /^\\[([a-z_][a-z\\-_0-9]+)\\]$/i;\r\nconst RE_SELECTOR_CLASS = /^\\.([a-z_][a-z\\-_0-9]+)$/i;\r\n//const RE_SELECTOR_COMMENT = /^\\/\\/([a-z_][a-z\\-_0-9]+)$/i;\r\nconst RE_SELECTOR_TAG = /^([a-z_][a-z\\-_0-9]+)$/i;\r\n\r\nexport function parseSelector(selector: string): Selector {\r\n\r\n    var semanticeName: string;\r\n    var type: SelectorType;\r\n    var m: RegExpMatchArray;\r\n\r\n    if (m = RE_SELECTOR_TAG.exec(selector)) {\r\n        type = SelectorType.Tag;\r\n    }\r\n    else if (m = RE_SELECTOR_ATTRIBUTE.exec(selector)) {\r\n        type = SelectorType.Attribute;\r\n    }\r\n    else if (m = RE_SELECTOR_CLASS.exec(selector)) {\r\n        type = SelectorType.Class;\r\n    }\r\n    //else if (m = RE_SELECTOR_COMMENT.exec(selector)) {\r\n    //    type = SelectorType.Comment;\r\n    //}\r\n    else {\r\n        throw new Error(`Invalid selector: ${selector}`);\r\n    }\r\n\r\n    return {\r\n        semanticeName: m[1],\r\n        imperativeName: toCamelCase(m[1]),\r\n        type: type\r\n    };\r\n}\r\n\r\n// from mout @ https://github.com/mout/mout/blob/v0.11.0/src/string/camelCase.js\r\nfunction toCamelCase(str: string) {\r\n    str = str.replace(/[\\-_]/g, ' ') //convert all hyphens and underscores to spaces\r\n        .replace(/\\s[a-z]/g, upperCase) //convert first char of each word to UPPERCASE\r\n        .replace(/\\s+/g, '') //remove spaces\r\n        .replace(/^[A-Z]/g, lowerCase); //convert first char to lowercase\r\n    return str;\r\n}\r\nfunction upperCase(str: string){\r\n    return str.toUpperCase();\r\n}\r\nfunction lowerCase(str: string) {\r\n    return str.toLowerCase();\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function bindFunctions<T>(host: T): T {\r\n\r\n    var aux = <any> host;\r\n\r\n    if (aux) {\r\n        for (let key in aux) {\r\n            if (isFunction(aux[key])) {\r\n                aux[key] = safeBind(aux[key], aux);\r\n            }\r\n        }\r\n    }\r\n\r\n    return host;\r\n\r\n}\r\n\r\nexport function safeBind<T extends Function>(func: T, context: any): T {\r\n\r\n    var bound = func.bind(context);\r\n\r\n    forEach(func, (value, name) => bound[name] = value);\r\n\r\n    return bound;\r\n\r\n}\r\n\r\n\r\n\r\n// --\r\n\r\n/**\r\n * Set or clear the hashkey for an object.\r\n * @param obj object\r\n * @param h the hashkey (!truthy to delete the hashkey)\r\n */\r\nfunction setHashKey(obj:any, h:any) {\r\n  if (h) {\r\n    obj.$$hashKey = h;\r\n  } else {\r\n    delete obj.$$hashKey;\r\n  }\r\n}\r\n\r\n\r\nfunction baseExtend(dst:any, objs:any[], deep:boolean, ifValue:boolean=false):any {\r\n  var h = dst.$$hashKey;\r\n\r\n  for (var i = 0, ii = objs.length; i < ii; ++i) {\r\n    var obj = objs[i];\r\n    if (!isObject(obj) && !isFunction(obj)) continue;\r\n    var keys = Object.keys(obj);\r\n    for (var j = 0, jj = keys.length; j < jj; j++) {\r\n      var key = keys[j];\r\n      var src = obj[key];\r\n\r\n      if (deep && isObject(src)) {\r\n        if (!isObject(dst[key])) dst[key] = isArray(src) ? [] : {};\r\n        baseExtend(dst[key], [src], true);\r\n      } else if (!ifValue || src != null) {\r\n        dst[key] = src;\r\n      }\r\n    }\r\n  }\r\n\r\n  setHashKey(dst, h);\r\n  return dst;\r\n}\r\n\r\nfunction _mergeIfValue(dst:any):any {\r\n    return baseExtend(dst, [].slice.call(arguments, 1), true, true);\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\nimport {getAnnotations, mergeAnnotations} from './reflection'\r\nimport {injectable} from './di'\r\nimport {makeDecorator, FunctionReturningSomething, setIfInterface} from './utils'\r\nimport {create, isFunction, bindFunctions} from './utils'\r\n\r\n\r\n\r\n/**\r\n * Options available when decorating a class as an animation controller\r\n * TODO document\r\n */\r\nexport interface AnimationOptions {\r\n\r\n    /**\r\n     * TODO rules?\r\n     */\r\n    name: string;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class AnimationAnnotation {\r\n\r\n    name: string = null;\r\n\r\n    constructor(options: AnimationOptions) {\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\ntype endFunction = (isCancelled: boolean) => void;\r\n\r\n/**\r\n * Interface animation controllers MAY implement\r\n * TODO document\r\n */\r\nexport interface Animation {\r\n    enter?: (element: ng.IAugmentedJQuery, done: Function) => endFunction;\r\n    leave?: (element: ng.IAugmentedJQuery, done: Function) => endFunction;\r\n    move?: (element: ng.IAugmentedJQuery, done: Function) => endFunction;\r\n    addClass?: (element: ng.IAugmentedJQuery, className: string, done: Function) => endFunction;\r\n    removeClass?: (element: ng.IAugmentedJQuery, className: string, done: Function) => endFunction;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface AnimationConstructor extends Function {\r\n    new (...args: any[]): Animation;\r\n    prototype: Animation;\r\n}\r\n\r\ntype DecoratorSignature = (options: AnimationOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being an animation controller\r\n */\r\nexport var Animation = <DecoratorSignature> makeDecorator(AnimationAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function registerAnimation(animationClass: AnimationConstructor, ngModule: ng.IModule) {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(animationClass, AnimationAnnotation).reverse();\r\n    var aux = getAnnotations(animationClass, AnimationAnnotation);\r\n\r\n    if (!aux.length) {\r\n        throw new Error(\"Filter annotation not found\");\r\n    }\r\n\r\n    var {name} = mergeAnnotations<AnimationAnnotation>(create(AnimationAnnotation), ...aux);\r\n\r\n    // TODO validate implementation?\r\n\r\n    ngModule.animation(name, injectable(['$injector'], function($injector: ng.auto.IInjectorService) {\r\n        var singleton = <Animation> $injector.instantiate(animationClass);\r\n        bindFunctions(singleton);\r\n        return singleton;\r\n    }));\r\n\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert'\r\nimport {makeDecorator, setIfInterface, isElement} from './utils'\r\nimport {ModuleOptions, ModuleAnnotation, Module, ModuleConstructor} from './module'\r\n\r\n\r\n\r\n/**\r\n * Options available when decorating a class as an application\r\n * TODO document\r\n */\r\nexport interface ApplicationOptions extends ModuleOptions {\r\n\t// selector?: string;\r\n\telement: Element\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ApplicationAnnotation extends ModuleAnnotation {\r\n\r\n\t// selector: string = void 0;\r\n\telement: Element|Document = void 0;\r\n\r\n\tconstructor(element: Element|Document);\r\n\tconstructor(options: ApplicationOptions);\r\n\tconstructor(elementOroptions: any) {\r\n\t\tsuper(options);\r\n\r\n\t\tvar options = isElement(elementOroptions) ? { element: elementOroptions } : elementOroptions;\r\n\r\n\t\t// TODO debug only?\r\n        assert(options && options.element, 'element must be provided');\r\n        // assert(options.element || options.selector, 'Either element or selector must be provided');\r\n\t\t// assert(!(options.element && options.selector), 'Provide either selector or element, but not both');\r\n\r\n\t\tsetIfInterface(this, options);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Interface applications MAY implement\r\n */\r\nexport interface Application extends Module {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ApplicationConstructor extends ModuleConstructor {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\ntype ApplicationSignature = (options: ApplicationOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being an application\r\n */\r\nexport var Application = <ApplicationSignature> makeDecorator(ApplicationAnnotation);","/// <reference path=\"./_references\" />\r\n\r\n/*\r\nApplications must have:\r\n    - Module annotation\r\n\r\nSteps to bootstrap:\r\n\r\n    - Process submodules (recursively)\r\n    - Process the application module\r\n    - Bootstrap\r\n\r\nTo process a module is to:\r\n    - Iterate through it's submodules and process them (recurse)\r\n        - Register the module on Angular\r\n        - Register services on Angular\r\n        - Register directives on Angular\r\n        - Register components on Angular\r\n            - Gather route annotations\r\n        - Register config and run functions\r\n*/\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert';\r\n\r\nimport {getAnnotations, mergeAnnotations} from './reflection';\r\nimport {create} from './utils';\r\nimport {ApplicationConstructor, ApplicationAnnotation} from './application';\r\nimport {ModuleConstructor, ModuleAnnotation, publishModule, DependenciesArray} from './module';\r\n\r\n/**\r\n *\r\n */\r\nexport function bootstrap(applicationClass: ApplicationConstructor, element?: Element|Document,\r\n    dependencies?: DependenciesArray, constructorParameters?: any[]): ng.auto.IInjectorService;\r\nexport function bootstrap(moduleClass: ModuleConstructor, element: Element|Document,\r\n    dependencies?: DependenciesArray, constructorParameters?: any[]): ng.auto.IInjectorService;\r\nexport function bootstrap(moduleClass: ModuleConstructor, element?: Element|Document,\r\n    dependencies?: DependenciesArray, constructorParameters?: any[]): ng.auto.IInjectorService {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(moduleClass, ModuleAnnotation).reverse();\r\n    var aux = getAnnotations(moduleClass, ModuleAnnotation);\r\n\r\n    // TODO debug only?\r\n    assert.notEmpty(aux, 'Missing @Application or @Module decoration');\r\n\r\n    var annotation = <ApplicationAnnotation> mergeAnnotations({}, ...aux);\r\n\r\n    element = element || annotation.element;\r\n\r\n    // TODO debug only?\r\n    assert(element, 'element must be provided');\r\n\r\n    var ngModule = publishModule(moduleClass, null, dependencies, constructorParameters);\r\n\r\n    return angular.bootstrap(<any> element, [ngModule.name]);\r\n\r\n}\r\n\r\n//export function bootstrapWhenReady(moduleClass: ModuleConstructor): Promise<ng.auto.IInjectorService>;\r\n//export function bootstrapWhenReady(moduleClass: ModuleConstructor, element: Element): Promise<ng.auto.IInjectorService>;\r\n//export function bootstrapWhenReady(moduleClass: ModuleConstructor, selector: string): Promise<ng.auto.IInjectorService>;\r\n//export function bootstrapWhenReady(moduleClass: ModuleConstructor, selectorOrElement?: any): Promise<ng.auto.IInjectorService> {\r\n//\r\n//    var promise = new Promise<ng.auto.IInjectorService>((resolve, reject) => {\r\n//        // TODO\r\n//    });\r\n//\r\n//    return promise;\r\n//\r\n//}","/// <reference path=\"./_references.ts\" />\r\n\r\nimport {makeDecorator, setIfInterface} from './utils'\r\nimport {ViewOptions, ViewAnnotation} from './view'\r\n\r\n\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport const enum ComponentTemplateNamespace {\r\n    HTML,\r\n    SVG,\r\n    MathML\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const NAMESPACE_MAP = ['html', 'svg', 'math'];\r\n\r\n/**\r\n * Options available when decorating a component with view information\r\n * TODO document\r\n */\r\nexport interface ComponentViewOptions extends ViewOptions {\r\n\r\n    /**\r\n     *\r\n     */\r\n    namespace?: ComponentTemplateNamespace;\r\n\r\n    /**\r\n     * @deprecated\r\n     */\r\n    replace?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ComponentViewAnnotation extends ViewAnnotation {\r\n\r\n    namespace: ComponentTemplateNamespace = void 0;\r\n    replace: boolean = void 0;\r\n\r\n    constructor(options: ComponentViewOptions) {\r\n        super(options);\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\ntype ComponentViewDecorator = (options: ComponentViewOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a component with view information\r\n */\r\nexport var ComponentView = <ComponentViewDecorator> makeDecorator(ComponentViewAnnotation);","/// <reference path=\"./_references.ts\" />\r\n\r\nimport {assert} from './assert'\r\nimport {Inject, injectable, isAnnotated} from './di'\r\nimport {isDefined, isFunction, makeDecorator, Map, setIfInterface} from \"./utils\";\r\nimport {FunctionReturningString, FunctionReturningNothing, parseSelector, SelectorType} from './utils'\r\nimport {hasAnnotation, hasOwnAnnotation, getAnnotations, mergeAnnotations, addAnnotation} from './reflection'\r\nimport {ViewAnnotation} from './view'\r\nimport {ComponentViewAnnotation, NAMESPACE_MAP} from './component-view'\r\nimport {CommonDirectiveOptions, CommonDirectiveAnnotation} from './directive'\r\nimport {Directive, DirectiveAnnotation, DirectiveConstructor, Transclusion} from './directive'\r\nimport {makeCommonDO, DirectiveDefinitionObject, inFactory as inFactoryDirective} from './directive'\r\n\r\nexport {Bind} from './directive';\r\n\r\n\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport interface ComponentOptions extends CommonDirectiveOptions {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ComponentAnnotation extends CommonDirectiveAnnotation {\r\n\r\n    constructor(options: ComponentOptions) {\r\n        super(options); // TODO WTF needs casting?\r\n        //setIfInterface(this, options); nothing to do so far\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Interface components MAY implement\r\n */\r\nexport interface Component extends Directive {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ComponentConstructor extends DirectiveConstructor {\r\n    new (): Component;\r\n}\r\n\r\n\r\n/*function componentDecoratorExtensor(baseClass: Function) {\r\n\r\n    // debugger;\r\n\r\n    var annotations = <ComponentAnnotation[]> getAnnotations(baseClass, ComponentAnnotation);\r\n\r\n    return function(target: any) {\r\n        // debugger;\r\n        // TODO clone?\r\n        for (let annotation of annotations) {\r\n            addAnnotation(target, annotation)\r\n        }\r\n        return target;\r\n    }\r\n\r\n};*/\r\n\r\ninterface ComponentDecoratorType {\r\n    (options: ComponentOptions): ClassDecorator;\r\n    // extends: typeof componentDecoratorExtensor;\r\n}\r\n\r\ntype ComponentDecorator = (options: ComponentOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a component controller\r\n */\r\nexport var Component = <ComponentDecoratorType><any> makeDecorator(ComponentAnnotation);\r\n\r\n// Component.extends = componentDecoratorExtensor;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ComponentDefinitionObject extends DirectiveDefinitionObject {\r\n    controllerAs?: string;\r\n    template?: string|FunctionReturningString;\r\n    templateUrl?: string|FunctionReturningString;\r\n    styles?: string|string[];\r\n    // stylesUrls?: string[];\r\n    templateNamespace?: string;\r\n}\r\n\r\nexport function publishComponent(componentClass: ComponentConstructor, ngModule: ng.IModule, selector?: string): ng.IModule {\r\n\r\n    // TODO debug only?\r\n    assert(hasOwnAnnotation(componentClass, ComponentAnnotation), 'Missing @Component decoration');\r\n    assert(hasAnnotation(componentClass, ViewAnnotation), 'Missing @View decoration');\r\n\r\n    var {name, factory} = makeComponentFactory(componentClass);\r\n\r\n    // TODO Allow for selector override through parameter\r\n\r\n    ngModule.directive(name, factory);\r\n\r\n    return ngModule;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function makeComponentDO(componentClass: ComponentConstructor): ComponentDefinitionObject {\r\n\r\n    var cdo = <ComponentDefinitionObject> makeCommonDO(<DirectiveConstructor> componentClass);\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(componentClass, ViewAnnotation).reverse();\r\n    var aux = getAnnotations(componentClass, ViewAnnotation);\r\n    var view = <ComponentViewAnnotation> {/*no defaults*/};\r\n    mergeAnnotations(view, ...aux);\r\n\r\n    if (!isDefined(cdo.scope)) cdo.scope = {}; // Default scope is isolate\r\n    if (!isDefined(cdo.bindToController)) cdo.bindToController = true; // Default bindToController value\r\n    if (isDefined(view.controllerAs)) cdo.controllerAs = view.controllerAs;\r\n    if (isDefined(view.namespace)) cdo.templateNamespace = NAMESPACE_MAP[view.namespace];\r\n\r\n    if (isDefined(view.styles)) {\r\n        cdo.styles = typeof view.styles === \"string\" ? [<string> view.styles] : view.styles;\r\n    }\r\n    // else if (isDefined(view.stylesUrls)) cdo.stylesUrls = view.stylesUrls;\r\n\r\n    if (isDefined(view.template)) cdo.template = view.template;\r\n    else if (isDefined(view.templateUrl)) cdo.templateUrl = view.templateUrl;\r\n    else throw new Error('Component has no template. Use either template or templateUrl');\r\n\r\n    return cdo;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function inFactory(cdo: ComponentDefinitionObject, $injector: ng.auto.IInjectorService): ComponentDefinitionObject {\r\n\r\n    if (isFunction(cdo.template)) {\r\n        cdo.template = !isAnnotated(<any> cdo.template) ? cdo.template : (tElement: any, tAttrs: any) => {\r\n            return $injector.invoke(<any> cdo.template, null, {\r\n                element: tElement,\r\n                attributes: tAttrs\r\n            });\r\n        };\r\n    }\r\n\r\n    if (isFunction(cdo.templateUrl)) {\r\n        cdo.templateUrl = !isAnnotated(<any> cdo.templateUrl) ? cdo.templateUrl : (tElement: any, tAttrs: any) => {\r\n            return $injector.invoke(<any> cdo.templateUrl, null, {\r\n                element: tElement,\r\n                attributes: tAttrs\r\n            });\r\n        };\r\n    }\r\n\r\n    // TODO styleUrl\r\n\r\n    return cdo;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function makeComponentFactory(componentClass: ComponentConstructor) {\r\n\r\n    var cdo = makeComponentDO(componentClass);\r\n\r\n    var factory = injectable(['$injector'], function directiveFactory($injector: ng.auto.IInjectorService): ng.IDirective {\r\n\r\n        if (cdo.styles) {\r\n            for (let i = 0; i < cdo.styles.length; i++) {\r\n                insertStyle(cdo.styles[i], `tng-component_${cdo.imperativeName}_${i}`);\r\n            }\r\n        }\r\n        // else if (cdo.stylesUrls) {\r\n            // TODO\r\n        // }\r\n\r\n        return <any> inFactory(inFactoryDirective(cdo, $injector), $injector);\r\n    });\r\n\r\n    return {\r\n        name: cdo.imperativeName,\r\n        factory: factory\r\n    };\r\n\r\n}\r\n\r\nfunction insertStyle(style: string, id: string) {\r\n\r\n    id = `#${id}`;\r\n    let head = document.head;\r\n\r\n    if (head.querySelector(id)) {\r\n        return;\r\n    }\r\n\r\n    let el = document.createElement(\"style\");\r\n    el.id = id;\r\n    el.type = \"text/css\"\r\n    el.textContent = style;\r\n    head.insertBefore(el, head.querySelector(\"style\"));\r\n\r\n}","/// <reference path=\"./_references\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert';\r\n\r\n/**\r\n * A framework envelope for constants\r\n */\r\nexport class ConstantWrapper<Type> {\r\n\r\n    constructor(private _name: string, private _value: Type) {\r\n    }\r\n    \r\n    get name() {\r\n        return this._name;\r\n    }\r\n    \r\n    get value() {\r\n        return this._value;\r\n    }\r\n    \r\n}\r\n\r\n/**\r\n * Wraps a constant to be made available for dependency injection\r\n * \r\n * @param name The name of the constant through which it will made available\r\n * @param value The constant value to be injected, as is\r\n * \r\n * @return A wrapper, to be used as a module dependency\r\n */\r\nexport function Constant<Type>(name: string, value: Type): ConstantWrapper<Type> {\r\n\r\n    // TODO debug only?\r\n    assert.notEmpty(name, 'name cannot be null or empty');\r\n\r\n    return new ConstantWrapper(name, value);\r\n\r\n}\r\n\r\nexport function publishConstant<Type>(constant: ConstantWrapper<Type>, ngModule: ng.IModule, name?: string): ng.IModule {\r\n\r\n    // TODO debug only?\r\n    assert(constant instanceof ConstantWrapper, 'constant must be a ConstantWrapper');\r\n    \r\n    name = name != null ? name : constant.name;\r\n    ngModule.constant(name, constant.value);\r\n    \r\n    return ngModule;\r\n\r\n}","/// <reference path=\"./_references\" />\r\n\r\nimport {injectable} from './di'\r\nimport {getAnnotations, mergeAnnotations} from './reflection'\r\nimport {makeDecorator, setIfInterface, create, isFunction} from './utils'\r\n\r\n\r\n\r\n/**\r\n * Options available when decorating a class as a service decorator\r\n */\r\nexport interface DecoratorOptions {\r\n\r\n    /**\r\n     * The name of service to decorate\r\n     */\r\n    name: string;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class DecoratorAnnotation {\r\n\r\n    name: string = null;\r\n\r\n    constructor(options: DecoratorOptions) {\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Interface service decorators MUST implement\r\n *\r\n * * It's a singleton, instantiated the first the decorated service is needed\r\n * * The constructor can receive dependency injections\r\n * * The original service instance is available for injection locally as $delegate\r\n * * When asked for, what is provided is actually the method decorate() bound the decorator instance\r\n */\r\nexport interface Decorator {\r\n\r\n    /**\r\n     * The method that does the actual decoration\r\n     *\r\n     * This method must return the decorated service, as it will be used when\r\n     * the service is asked for.\r\n     *\r\n     * * Can receive dependency injections\r\n     * * The original service instance is available for injection locally as $delegate\r\n     */\r\n    decorate(...args: any[]): any;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface DecoratorConstructor extends Function {\r\n    new (...args: any[]): Decorator;\r\n    prototype: Decorator;\r\n}\r\n\r\ntype DecoratorSignature = (options: DecoratorOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a service decorator\r\n */\r\nexport var Decorator = <DecoratorSignature> makeDecorator(DecoratorAnnotation);\r\n\r\nexport function publishDecorator(decoratorClass: DecoratorConstructor, ngModule: ng.IModule, name?: string): ng.IModule {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(decoratorClass, DecoratorAnnotation).reverse();\r\n    var aux = getAnnotations(decoratorClass, DecoratorAnnotation);\r\n\r\n    if (!aux.length) {\r\n        throw new Error(\"Decorator annotation not found\");\r\n    }\r\n\r\n    var annotation = <DecoratorAnnotation> mergeAnnotations(create(DecoratorAnnotation), ...aux);\r\n    name = name != null ? name : annotation.name;\r\n\r\n    if (!isFunction(decoratorClass.prototype.decorate)) {\r\n        throw new Error(`Decorator \"${name}\" does not implement a decorate method`);\r\n    }\r\n\r\n    ngModule.config(injectable(['$provide'], function($provide: ng.auto.IProvideService) {\r\n        $provide.decorator(name, injectable(['$delegate', '$injector'], function($delegate: any, $injector: ng.auto.IInjectorService) {\r\n\r\n            var instance = <Decorator> $injector.instantiate(decoratorClass, {\r\n                $delegate: $delegate\r\n            });\r\n\r\n            return $injector.invoke(instance.decorate, instance, {\r\n                $delegate: $delegate\r\n            });\r\n\r\n        }));\r\n    }));\r\n\r\n    return ngModule;\r\n\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert';\r\n\r\nimport {Inject, injectable, isAnnotated} from './di'\r\nimport {makeDecorator, Map, setIfInterface, create, isFunction, isDefined} from './utils'\r\nimport {FunctionReturningString, FunctionReturningNothing, parseSelector, SelectorType} from './utils'\r\nimport {hasOwnAnnotation, getAnnotations, mergeAnnotations, addAnnotation} from './reflection'\r\n\r\n\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport const enum Transclusion {\r\n    Content,\r\n    Element\r\n}\r\nconst TRANSCLUSION_MAP = [true, 'element'];\r\n\r\ntype PrePost = {\r\n    pre: FunctionReturningNothing,\r\n    post: FunctionReturningNothing\r\n};\r\ntype CompileFunction = (...args: any[]) => FunctionReturningNothing;\r\ntype FunctionReturningPrePost = (...args: any[]) => PrePost;\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport interface CommonDirectiveOptions {\r\n\r\n    // name = element\r\n    // .name = class\r\n    // [name] = attribute\r\n    // //name = comment (unavailable)\r\n    selector: string;\r\n\r\n    // infered from the selector\r\n    //restrict?: Restriction|Restriction[]; // [Restriction.Element, Restriction.Element]\r\n\r\n    scope?: boolean|Map<string>;\r\n    bindToController?: boolean;\r\n\r\n    require?: string[];\r\n\r\n    // needs mapping\r\n    transclude?: Transclusion; // Transclusion.Content\r\n\r\n    compile?: CompileFunction|FunctionReturningPrePost;\r\n    link?: FunctionReturningNothing|PrePost|string;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class CommonDirectiveAnnotation {\r\n\r\n    selector: string = void 0;\r\n    scope: boolean|Map<string> = void 0;\r\n    bindToController: boolean = void 0;\r\n    require: string[] = void 0;\r\n    transclude: Transclusion = void 0;\r\n    compile: CompileFunction|FunctionReturningPrePost = void 0;\r\n    link: FunctionReturningNothing|PrePost|string = void 0;\r\n\r\n    constructor(options: CommonDirectiveOptions) {\r\n        // TODO debug only?\r\n        assert.notNull(options, 'options must not be null');\r\n        assert.notEmpty(options.selector, 'selector must not be null or empty');\r\n\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport interface DirectiveOptions extends CommonDirectiveOptions {\r\n\r\n    priority?: number;\r\n    terminal?: boolean;\r\n    multiElement?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class DirectiveAnnotation extends CommonDirectiveAnnotation {\r\n\r\n    multiElement: boolean = void 0;\r\n    priority: number = void 0;\r\n    terminal: boolean = void 0;\r\n\r\n    constructor(options: DirectiveOptions) {\r\n        super(<any> options); // TODO WTF needs casting?\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport interface Directive {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface DirectiveConstructor extends Function {\r\n    new (): Directive;\r\n}\r\n\r\ntype DirectiveDecorator = (options: DirectiveOptions) => ClassDecorator;\r\n\r\n/**\r\n *\r\n */\r\nexport var Directive = <DirectiveDecorator> makeDecorator(DirectiveAnnotation);\r\n\r\n\r\n// ---\r\n\r\n// @Bind\r\n\r\nexport class BindAnnotation {\r\n    constructor(\r\n        public propertyKey: string,\r\n        public binding: string) {\r\n    }\r\n}\r\n\r\nfunction bindDecorator(binding: string): PropertyDecorator {\r\n\r\n    return function(target: any, propertyKey: string) {\r\n\r\n        var newBind = new BindAnnotation(propertyKey, binding);\r\n        addAnnotation(target.constructor, newBind);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport var Bind = bindDecorator;\r\n\r\n// ---\r\n\r\n\r\n\r\nexport function publishDirective(directiveClass: DirectiveConstructor, ngModule: ng.IModule, selector?: string): ng.IModule {\r\n\r\n    // TODO debug only?\r\n    assert(hasOwnAnnotation(directiveClass, DirectiveAnnotation), 'Did you decorate it with @Directive?');\r\n\r\n    var {name, factory} = makeDirectiveFactory(directiveClass);\r\n\r\n    // TODO consider provided selector, if any\r\n\r\n    ngModule.directive(name, factory);\r\n\r\n    return ngModule;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\n//export interface DirectiveDefinitionObject extends ng.IDirective { // bindToController incompatible with current angular.d.ts\r\nexport interface DirectiveDefinitionObject {\r\n    multiElement?: boolean;\r\n    compile?: CompileFunction|FunctionReturningPrePost;\r\n    controller?: any;\r\n    bindToController?: boolean|Map<string>;\r\n    link?: FunctionReturningNothing|PrePost|string;\r\n    name?: string;\r\n    priority?: number;\r\n    require?: string[];\r\n    restrict?: string;\r\n    scope?: boolean|Map<string>;\r\n    terminal?: boolean;\r\n    transclude?: boolean|string;\r\n\r\n    semanticName: string;\r\n    imperativeName: string;\r\n}\r\n\r\nconst RESTRICTION_MAP: Map<string> = {\r\n    [SelectorType.Attribute]: 'A',\r\n    [SelectorType.Tag]: 'E',\r\n    [SelectorType.Class]: 'C'\r\n    //[SelectorType.Comment]: 'M'\r\n};\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function makeCommonDO(directiveClass: DirectiveConstructor): DirectiveDefinitionObject {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(directiveClass, CommonDirectiveAnnotation).reverse();\r\n    var aux = getAnnotations(directiveClass, CommonDirectiveAnnotation);\r\n    var annotation = <CommonDirectiveAnnotation> {/*no defaults*/};\r\n    mergeAnnotations(annotation, ...aux);\r\n\r\n    var selectorData = parseSelector(annotation.selector);\r\n\r\n    var ddo: DirectiveDefinitionObject = {\r\n        semanticName: selectorData.semanticeName,\r\n        imperativeName: selectorData.imperativeName,\r\n        restrict: RESTRICTION_MAP[selectorData.type],\r\n        controller: directiveClass\r\n    };\r\n\r\n    if (isDefined(annotation.transclude)) ddo.transclude = TRANSCLUSION_MAP[annotation.transclude];\r\n    if (isDefined(annotation.compile)) ddo.compile = annotation.compile;\r\n    if (isDefined(annotation.link)) ddo.link = annotation.link;\r\n\r\n    // scope\r\n    if (isDefined(annotation.scope)) ddo.scope = annotation.scope;\r\n\r\n    // bindToController\r\n    // let bindAnnotations = <BindAnnotation[]> getAnnotations(directiveClass, BindAnnotation).reverse();\r\n    let bindAnnotations = <BindAnnotation[]> getAnnotations(directiveClass, BindAnnotation);\r\n    if (bindAnnotations.length) {\r\n        let map: Map<string> = {};\r\n        for (let bind of bindAnnotations) {\r\n            map[bind.propertyKey] = bind.binding;\r\n        }\r\n        ddo.bindToController = map;\r\n    }\r\n    else if (isDefined(annotation.bindToController)) ddo.bindToController = annotation.bindToController;\r\n\r\n    return ddo;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function makeDirectiveDO(directiveClass: DirectiveConstructor): DirectiveDefinitionObject {\r\n\r\n    var ddo = makeCommonDO(<DirectiveConstructor> directiveClass);\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(directiveClass, DirectiveAnnotation).reverse();\r\n    var aux = getAnnotations(directiveClass, DirectiveAnnotation);\r\n    var annotation = <DirectiveAnnotation> {/*no defaults*/};\r\n    mergeAnnotations(annotation, ...aux);\r\n\r\n    if (isDefined(annotation.multiElement)) ddo.multiElement = annotation.multiElement;\r\n    if (isDefined(annotation.priority)) ddo.priority = annotation.priority;\r\n    if (isDefined(annotation.terminal)) ddo.terminal = annotation.terminal;\r\n\r\n    return ddo;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function inFactory(ddo: DirectiveDefinitionObject, $injector: ng.auto.IInjectorService): DirectiveDefinitionObject {\r\n\r\n    if (isFunction(ddo.compile)) {\r\n        ddo.compile = !isAnnotated(ddo.compile) ? ddo.compile :\r\n            (tElement: any, tAttrs: any, transclude: any) => {\r\n                return $injector.invoke(ddo.compile, null, {\r\n                    $element: tElement,\r\n                    $attrs: tAttrs,\r\n                    $transclude: transclude\r\n                });\r\n            }\r\n    }\r\n\r\n    if (typeof ddo.link === \"string\") {\r\n        let linkFn = ddo.controller.prototype[<string> ddo.link];\r\n        if (!isAnnotated(linkFn)) {\r\n            ddo.link = function(scope: any, iElement: any, iAttrs: any, controllers: any, transclude: any) {\r\n                let controller = angular.isArray(controllers) ? controllers[controllers.lenght - 1] : controllers;\r\n                linkFn.apply(controller || null, [].slice.call(arguments, 0));\r\n            }\r\n        }\r\n        else {\r\n            ddo.link = function(scope: any, iElement: any, iAttrs: any, controllers: any, transclude: any) {\r\n                let controller = angular.isArray(controllers) ? controllers[controllers.lenght - 1] : controllers;\r\n                return $injector.invoke(<any> linkFn, controller, {\r\n                    $scope: scope,\r\n                    $element: iElement,\r\n                    $attrs: iAttrs,\r\n                    $controller: controllers,   // TODO deprecated\r\n                    $controllers: controllers,\r\n                    $transclude: transclude\r\n                });\r\n            }\r\n        }\r\n    }\r\n    else if (isAnnotated(<any> ddo.link)) {\r\n        let linkFn = ddo.link;\r\n        ddo.link = (scope: any, iElement: any, iAttrs: any, controllers: any, transclude: any) => {\r\n            return $injector.invoke(<any> linkFn, null, {\r\n                $scope: scope,\r\n                $element: iElement,\r\n                $attrs: iAttrs,\r\n                $controller: controllers,   // TODO deprecated\r\n                $controllers: controllers,\r\n                $transclude: transclude\r\n            });\r\n        }\r\n    }\r\n\r\n    return ddo;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function makeDirectiveFactory(directiveClass: DirectiveConstructor) {\r\n\r\n    var ddo = makeDirectiveDO(directiveClass);\r\n\r\n    var factory = injectable(['$injector'], function directiveFactory($injector: ng.auto.IInjectorService): ng.IDirective {\r\n        return <any> inFactory(ddo, $injector);\r\n    });\r\n\r\n    return {\r\n        name: ddo.imperativeName,\r\n        factory: factory\r\n    };\r\n\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\n\r\n\r\n/**\r\n * Annotates a function with information of dependencies to be injected as parameters\r\n *\r\n * * Overrides previous annotation (logs warning)\r\n * * All parameters should be annotated (logs warning)\r\n * * Dependencies will be injected in the order they are specified in the dependencies parameter\r\n *\r\n * @param dependencies Names of the dependencies to be injected, in order\r\n * @returns The provided function\r\n */\r\nexport function injectable<T extends Function>(dependencies: string[], func: T): T {\r\n\r\n\t// TODO warn about overriding annotation\r\n\t// TODO warn about mismatching number of parameters and dependencies\r\n\r\n    func.$inject = dependencies.slice();\r\n\treturn func;\r\n\r\n}\r\n\r\n/**\r\n * Binds a function to a context and preservers it's annotated dependencies\r\n *\r\n * @param func The function to be bound\r\n * @param context The object to which bind the funcion\r\n * @returns A bound function\r\n */\r\nexport function safeBind<T extends Function>(func: T, context: any): T {\r\n\r\n    var bound = func.bind(context);\r\n\r\n\tif (func.$inject) {\r\n\t\tbound.$inject = func.$inject;\r\n\t}\r\n\r\n    return bound;\r\n\r\n}\r\n\r\n/**\r\n * A decorator to annotate method parameterss with dependencies to be injected\r\n *\r\n * * Overrides previous annotation (logs warning)\r\n * * All parameters should be annotated (logs warning)\r\n *\r\n * @param dependency The name of the dependency to be injected\r\n */\r\nexport function Inject(dependency: string): ParameterDecorator {\r\n\r\n\treturn (target: Function, propertyKey: string|symbol, parameterIndex: number) => {\r\n\r\n\t\t// TODO warn about overriding annotation\r\n\t\t// TODO warn about mismatching number of parameters and dependencies\r\n\r\n        // If propertyKey is defined, we're decorating a parameter of a method\r\n        // If not, we're decorating a parameter of class constructor\r\n\t\ttarget = (typeof propertyKey == 'undefined') ? target : target = (<any>target)[propertyKey];\r\n\r\n\t\t// TODO what about missing elements in the $inject array?\r\n\t\t// ie. annotated the 2nd but not the 1st parameter\r\n\r\n\t\tvar $inject: string[] = (target.$inject = target.$inject || []);\r\n\t\t$inject[parameterIndex] = dependency;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Inspects a function for dependency injection annotation\r\n *\r\n * @param func The object to be inspected\r\n */\r\nexport function isAnnotated(func: Function): boolean {\r\n\r\n\treturn func && func.hasOwnProperty('$inject');\r\n\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\nimport {getAnnotations, mergeAnnotations} from './reflection'\r\nimport {makeDecorator, setIfInterface, create, isFunction} from './utils'\r\nimport {injectable} from './di'\r\n\r\n\r\n\r\n/**\r\n * Options available when decorating a class as a filter\r\n */\r\nexport interface FilterOptions {\r\n\r\n    /**\r\n     * The name with which the filter will be invoked in templates\r\n     *\r\n     * Must be valid angular Expressions identifiers, such as \"uppercase\",\r\n     * \"upperCase\" or \"upper_case\". Special charaters such as hyphens and dots\r\n     * are not allowed.\r\n     *\r\n     * To get a hold of the filter delegate through dependency injection,\r\n     * ask the injector for this name plus the suffix \"Filter\".\r\n     */\r\n    name: string;\r\n\r\n    stateful?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class FilterAnnotation {\r\n\r\n    name: string = void 0;\r\n    stateful: boolean = void 0;\r\n\r\n    constructor(options: FilterOptions) {\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Interface filter classes MUST implement\r\n *\r\n * * It's a singleton, instantiated the first time it is needed\r\n * * The constructor can receive dependency injections\r\n * * When asked for, what is provided is actually the method filter() bound the it's instance\r\n */\r\nexport interface Filter {\r\n\r\n    /**\r\n     * The method that does the actual filtering\r\n     *\r\n     * When asked for, what is provided is actually this method\r\n     * bound the it's instance\r\n     *\r\n     * * Cannot receive dependency injections (use the constructor)\r\n     */\r\n    filter(input: any, ...rest: any[]): any;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface FilterConstructor extends Function {\r\n    new (...args: any[]): Filter;\r\n    prototype: Filter;\r\n}\r\n\r\ntype DecoratorSignature = (options: FilterOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a filter\r\n */\r\nexport var Filter = <DecoratorSignature> makeDecorator(FilterAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function registerFilter(filterClass: FilterConstructor, ngModule: ng.IModule) {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(filterClass, FilterAnnotation).reverse();\r\n    var aux = getAnnotations(filterClass, FilterAnnotation);\r\n\r\n    if (!aux.length) {\r\n        throw new Error(\"Filter annotation not found\");\r\n    }\r\n\r\n    var notes = mergeAnnotations<FilterAnnotation>(create(FilterAnnotation), ...aux);\r\n\r\n    if (!isFunction(filterClass.prototype.filter)) {\r\n        throw new Error(`Filter \"${notes.name}\" does not implement a filter method`);\r\n    }\r\n\r\n    ngModule.filter(notes.name, injectable(['$injector'], function($injector: ng.auto.IInjectorService) {\r\n        var filterSingleton = <Filter> $injector.instantiate(filterClass);\r\n        var boundFilterMethod = filterSingleton.filter.bind(filterSingleton);\r\n\r\n        if (notes.stateful) {\r\n            boundFilterMethod.$stateful = true;\r\n        }\r\n\r\n        return boundFilterMethod;\r\n    }));\r\n\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert'\r\nimport {getAnnotations, hasAnnotation, mergeAnnotations, Reflect} from './reflection'\r\nimport {makeDecorator, setIfInterface, FunctionReturningNothing} from './utils'\r\nimport {safeBind} from './di'\r\nimport {create, isString, isFunction, isArray} from './utils'\r\nimport {ValueWrapper, publishValue} from './value'\r\nimport {ConstantWrapper, publishConstant} from './constant'\r\nimport {FilterAnnotation, registerFilter} from './filter'\r\nimport {AnimationAnnotation, registerAnimation} from './animation'\r\nimport {ServiceAnnotation, publishService} from './service'\r\nimport {DecoratorAnnotation, publishDecorator} from './decorator'\r\nimport {DirectiveAnnotation, publishDirective} from './directive'\r\nimport {ComponentAnnotation, publishComponent} from './component'\r\nimport {publishStates} from './ui/router/states'\r\nimport {registerRoutes} from './ui/router/routes'\r\n\r\n\r\n\r\nconst PUBLISHED_ANNOTATION_KEY = 'tng:module-published-as';\r\n\r\nexport type Dependency = string|Function|ConstantWrapper<any>|ValueWrapper<any>;\r\nexport type DependenciesArray = (Dependency|Dependency[])[];\r\n\r\n/**\r\n * Options available when decorating a class as a module\r\n * TODO document\r\n */\r\nexport interface ModuleOptions {\r\n\tname?: string;\r\n\tdependencies?: DependenciesArray;\r\n\tconfig?: Function|Function[];\r\n\trun?: Function|Function[];\r\n\r\n    // modules?: (string|Function)[];\r\n\t// components?: Function[];\r\n\t// services?: Function[];\r\n\t// filters?: Function[];\r\n\t// decorators?: Function[];\r\n\t// animations?: Function[];\r\n\t// values?: Function[];\r\n\t// constants?: Function[];\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ModuleAnnotation {\r\n\r\n\tname: string = void 0;\r\n\tdependencies: DependenciesArray = void 0;\r\n\tconfig: Function|Function[] = void 0;\r\n\trun: Function|Function[] = void 0;\r\n\r\n\t// modules: (string|Function)[] = void 0;\r\n\t// components: Function[] = void 0;\r\n\t// services: Function[] = void 0;\r\n\t// filters: Function[] = void 0;\r\n\t// decorators: Function[] = void 0;\r\n\t// animations: Function[] = void 0;\r\n\t// values: Function[] = void 0;\r\n\t// constants: Function[] = void 0;\r\n\r\n\tconstructor(options?: ModuleOptions) {\r\n        setIfInterface(this, options);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Interface modules MAY implement\r\n * TODO document\r\n */\r\nexport interface Module {\r\n\tonConfig?: FunctionReturningNothing;\r\n\tonRun?: FunctionReturningNothing;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ModuleConstructor extends Function {\r\n\tnew (): Module;\r\n\tnew (ngModule: ng.IModule): Module;\r\n}\r\n\r\ntype ModuleSignature = (options?: ModuleOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a module\r\n */\r\nexport var Module = <ModuleSignature> makeDecorator(ModuleAnnotation);\r\n\r\nvar moduleCount = 0;\r\n\r\nfunction getNewModuleName() {\r\n\r\n    return `tng_generated_module#${++moduleCount}`;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function publishModule(moduleClass: ModuleConstructor, name?: string,\r\n    dependencies?: DependenciesArray, constructorParameters?: any[]): ng.IModule {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(moduleClass, ModuleAnnotation).reverse();\r\n    var aux = getAnnotations(moduleClass, ModuleAnnotation);\r\n\r\n    // TODO debug only?\r\n    assert.notEmpty(aux, 'Missing @Module decoration');\r\n\r\n    // Has this module already been published?\r\n    var publishedAs: string;\r\n    if (publishedAs = Reflect.getOwnMetadata(PUBLISHED_ANNOTATION_KEY, moduleClass)) {\r\n        return angular.module(publishedAs);\r\n    }\r\n\r\n    var annotation = <ModuleAnnotation> mergeAnnotations(Object.create(null), ...aux);\r\n\r\n    var constants: any[] = [];\r\n    var values: any[] = [];\r\n    var services: any[] = [];\r\n    var decorators: any[] = [];\r\n    var filters: any[] = [];\r\n    var animations: any[] = [];\r\n    var components: any[] = [];\r\n    var directives: any[] = [];\r\n    var modules: any[] = [];\r\n\r\n    // TODO optimize this.. too much reflection queries\r\n    function processDependency(dep: Dependency|Dependency[]): void {\r\n\r\n        // Regular angular module\r\n        if (isString(dep)) {\r\n            modules.push(dep);\r\n        }\r\n        else if (isArray(dep)) {\r\n            for (let _dep of <Dependency[]> dep) {\r\n                processDependency(_dep);\r\n            }\r\n        }\r\n        else if (hasAnnotation(dep, ModuleAnnotation)) {\r\n            // If the module has alrady been published, we just push it's name\r\n            // if (publishedAs = Reflect.getOwnMetadata(PUBLISHED_ANNOTATION_KEY, dep)) {\r\n                // modules.push(publishedAs);\r\n            // }\r\n            // else {\r\n                modules.push(publishModule(<ModuleConstructor> dep).name);\r\n            // }\r\n        }\r\n        else if (dep instanceof ConstantWrapper) {\r\n            constants.push(dep);\r\n        }\r\n        else if (dep instanceof ValueWrapper) {\r\n            values.push(dep);\r\n        }\r\n        else if (hasAnnotation(dep, ServiceAnnotation)) {\r\n            services.push(dep);\r\n        }\r\n        else if (hasAnnotation(dep, DecoratorAnnotation)) {\r\n            decorators.push(dep);\r\n        }\r\n        else if (hasAnnotation(dep, FilterAnnotation)) {\r\n            filters.push(dep);\r\n        }\r\n        else if (hasAnnotation(dep, AnimationAnnotation)) {\r\n            animations.push(dep);\r\n        }\r\n        else if (hasAnnotation(dep, ComponentAnnotation)) {\r\n            components.push(dep);\r\n        }\r\n        else if (hasAnnotation(dep, DirectiveAnnotation)) {\r\n            directives.push(dep);\r\n        }\r\n        else {\r\n            // TODO WTF?\r\n            throw new Error(`I don't recognize what kind of dependency this is: ${dep}`);\r\n        }\r\n\r\n    }\r\n\r\n    let allDeps = [].concat(\r\n        (annotation.dependencies || []),\r\n        (dependencies || [])\r\n    );\r\n\r\n    allDeps.forEach((dep) => processDependency(dep));\r\n\r\n    name = name || annotation.name || getNewModuleName();\r\n\r\n    // Register the module on Angular\r\n    var ngModule = angular.module(name, modules);\r\n\r\n    // Instantiate the module\r\n    // var module = new moduleClass(ngModule);\r\n    let module = Object.create(moduleClass.prototype);\r\n    moduleClass.apply(module, [ngModule].concat(constructorParameters || []))\r\n\r\n    // Register config functions\r\n    var configFns: Function[] = [];\r\n    if (isFunction(module.onConfig)) configFns.push(safeBind(module.onConfig, module));\r\n    if (annotation.config) {\r\n        if (isFunction(annotation.config)) configFns.push(<Function> annotation.config);\r\n        else if (isArray(annotation.config)) configFns = configFns.concat(<Function[]> annotation.config)\r\n    }\r\n    for (let fn of configFns) ngModule.config(fn);\r\n\r\n    // Register initialization functions\r\n    var runFns: Function[] = [];\r\n    if (isFunction(module.onRun)) runFns.push(safeBind(module.onRun, module));\r\n    if (annotation.run) {\r\n        if (isFunction(annotation.run)) runFns.push(<Function> annotation.run);\r\n        else if (isArray(annotation.run)) runFns = runFns.concat(<Function[]> annotation.run)\r\n    }\r\n    for (let fn of runFns) ngModule.run(fn);\r\n\r\n    publishStates(moduleClass, ngModule);\r\n    registerRoutes(moduleClass, ngModule);\r\n\r\n    for (let item of values) publishValue(item, ngModule);\r\n    for (let item of constants) publishConstant(item, ngModule);\r\n    for (let item of filters) registerFilter(item, ngModule);\r\n    for (let item of animations) registerAnimation(item, ngModule);\r\n    for (let item of services) publishService(item, ngModule);\r\n    for (let item of decorators) publishDecorator(item, ngModule);\r\n    for (let item of components) publishComponent(item, ngModule);\r\n    for (let item of directives) publishDirective(item, ngModule);\r\n\r\n    Reflect.defineMetadata(PUBLISHED_ANNOTATION_KEY, name, moduleClass);\r\n\r\n    return ngModule;\r\n\r\n}","/// <reference path=\"./_references\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert';\r\n\r\nimport {getAnnotations, mergeAnnotations} from './reflection';\r\nimport {makeDecorator, setIfInterface, isFunction} from './utils';\r\n\r\n/**\r\n * Options available when decorating a class as a service\r\n */\r\nexport interface ServiceOptions {\r\n    /**\r\n     * The name the service will be made available for injection\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * An optional provider object or provider factory\r\n     */\r\n    provider?: ng.IServiceProvider|ng.IServiceProviderFactory;\r\n\r\n    /**\r\n     * An optional service factory\r\n     */\r\n    factory?: Function;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ServiceAnnotation {\r\n\r\n    name: string = void 0;\r\n    provider: ng.IServiceProvider|ng.IServiceProviderFactory = void 0;\r\n    factory: Function = void 0;\r\n\r\n    constructor(options: ServiceOptions) {\r\n        // TODO debug only?\r\n        assert.notNull(options, 'options must not be null');\r\n        assert.notEmpty(options.name, 'name cannot be null or empty');\r\n\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Interface services may implement\r\n */\r\nexport interface Service {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ServiceConstructor extends Function {\r\n    new (...args: any[]): Service;\r\n    prototype: Service;\r\n}\r\n\r\ntype DecoratorSignature = (options: ServiceOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a service\r\n */\r\nexport var Service = <DecoratorSignature> makeDecorator(ServiceAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function publishService(serviceClass: ServiceConstructor, ngModule: ng.IModule, name?: string): ng.IModule {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(serviceClass, ServiceAnnotation).reverse();\r\n    var aux = getAnnotations(serviceClass, ServiceAnnotation);\r\n\r\n    // TODO debug only?\r\n    assert.notEmpty(aux, 'Did you decorate it with @Service?');\r\n\r\n    var annotation = <ServiceAnnotation> {/*no defalts*/};\r\n    mergeAnnotations(annotation, ...aux);\r\n\r\n    var name = name != null ? name : annotation.name;\r\n\r\n    if (annotation.provider) {\r\n        ngModule.provider(name, <any> annotation.provider);\r\n    }\r\n    else if (annotation.factory) {\r\n        ngModule.factory(name, annotation.factory);\r\n    }\r\n    else {\r\n        ngModule.service(name, serviceClass);\r\n    }\r\n\r\n    return ngModule;\r\n\r\n}","/// <reference path=\"../../_references.ts\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from '../../assert'\r\n\r\nimport {Inject, injectable} from '../../di'\r\nimport {makeDecorator, create, isDefined, isString, isFunction, Map, isArray, forEach, setIfInterface} from '../../utils'\r\nimport {hasAnnotation, getAnnotations, mergeAnnotations} from '../../reflection'\r\nimport {ModalViewAnnotation, MODAL_BACKDROP_MAP} from './modal-view'\r\n\r\nimport IModalServiceInstance = ng.ui.bootstrap.IModalServiceInstance\r\nimport IModalService = ng.ui.bootstrap.IModalService\r\nimport IModalSettings = ng.ui.bootstrap.IModalSettings\r\nimport IModalStackService = ng.ui.bootstrap.IModalStackService\r\nimport IModalScope = ng.ui.bootstrap.IModalScope\r\n\r\nexport {ModalView, ModalBackdrop, ModalViewOptions} from './modal-view'\r\n\r\n\r\n\r\nexport interface ModalOptions {\r\n\r\n    scope?: ng.IScope|IModalScope|{(...args: any[]): ng.IScope|IModalScope};\r\n    bindToController?: boolean;\r\n    // resolve?: Map<string|Function>;\r\n    resolve?: Map<Function>;\r\n    keyboard?: boolean;\r\n    dismissAll?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ModalAnnotation {\r\n\r\n    scope: ng.IScope|IModalScope|{(...args: any[]): ng.IScope|IModalScope} = void 0;\r\n    bindToController: boolean = true; // defautls to true; differs from the original\r\n    // resolve: Map<string|Function> = void 0; // It doesn't really support strings, as stated in the docs\r\n    resolve: Map<Function> = void 0;\r\n    keyboard: boolean = void 0;\r\n    dismissAll: boolean = void 0;\r\n\r\n    constructor(options?: ModalOptions) {\r\n\r\n        setIfInterface(this, options);\r\n\r\n    }\r\n\r\n}\r\n\r\ntype ModalDecorator = (options?: ModalOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a modal controller\r\n */\r\nexport var Modal = <ModalDecorator> makeDecorator(ModalAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ModalHandler {\r\n\r\n    private instance: IModalServiceInstance = null;\r\n\r\n    constructor(\r\n        private modalNotes: ModalAnnotation,\r\n        private viewNotes: ModalViewAnnotation,\r\n        private settings: IModalSettings) {\r\n    }\r\n\r\n    open(\r\n        @Inject('$injector') $injector: ng.auto.IInjectorService,\r\n        @Inject('$modal') $modal: IModalService,\r\n        @Inject('$modalStack') $modalStack: IModalStackService): IModalServiceInstance {\r\n\r\n        var view = this.viewNotes;\r\n        var modal = this.modalNotes;\r\n        var calltimeSettings: IModalSettings = angular.copy(this.settings);\r\n\r\n        if (modal.dismissAll) {\r\n            $modalStack.dismissAll();\r\n        }\r\n\r\n        if (isDefined(modal.scope)) {\r\n            calltimeSettings.scope = isFunction(modal.scope) ?\r\n                $injector.invoke(<any> modal.scope) :\r\n                    modal.scope;\r\n        }\r\n\r\n        if (isDefined(view.template)) {\r\n            calltimeSettings.template = isFunction(view.template) ?\r\n                $injector.invoke(<any> view.template) :\r\n                    <string> view.template;\r\n        }\r\n\r\n        if (isDefined(view.templateUrl)) {\r\n            calltimeSettings.templateUrl = isFunction(view.templateUrl) ?\r\n                $injector.invoke(<any> view.templateUrl) :\r\n                    view.templateUrl;\r\n        }\r\n\r\n        this.instance = $modal.open(calltimeSettings);\r\n        return this.instance;\r\n\r\n    }\r\n\r\n    dismiss(@Inject('$modalStack') $modalStack: IModalStackService) {\r\n\r\n        if (this.modalNotes.dismissAll) {\r\n            $modalStack.dismissAll();\r\n        }\r\n        else {\r\n            this.instance.dismiss();\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function getModalHandler(modalClass: Function, scope?: ng.IScope): ModalHandler {\r\n\r\n    var modalNotes = getAnnotations(modalClass, ModalAnnotation);\r\n    var viewNotes = getAnnotations(modalClass, ModalViewAnnotation);\r\n\r\n    // TODO debug only?\r\n    assert(modalNotes, 'Missing @Modal decoration');\r\n    assert(viewNotes, 'Missing @ModalView decoration');\r\n\r\n    var settings: ng.ui.bootstrap.IModalSettings = {\r\n        controller: modalClass\r\n    };\r\n\r\n    var modal = <ModalAnnotation> {/*no defaults*/};\r\n    mergeAnnotations(modal, ...modalNotes);\r\n\r\n    // Deferred to be handled by ModalHandler to allow DI\r\n    // if (isDefined(modal.scope)) {\r\n    //     settings.scope = modal.scope;\r\n    // }\r\n    if (scope) {\r\n        modal.scope = scope;\r\n    }\r\n\r\n    if (isDefined(modal.bindToController)) {\r\n        settings.bindToController = modal.bindToController;\r\n    }\r\n\r\n    if (isDefined(modal.resolve)) {\r\n        settings.resolve = modal.resolve;\r\n    }\r\n\r\n    if (isDefined(modal.keyboard)) {\r\n        settings.keyboard = modal.keyboard;\r\n    }\r\n\r\n    var view = <ModalViewAnnotation> {/*no defaults*/};\r\n    mergeAnnotations(view, ...viewNotes);\r\n\r\n    if (isDefined(view.animation)) {\r\n        settings.animation = view.animation;\r\n    }\r\n\r\n    if (isDefined(view.backdrop)) {\r\n        settings.backdrop = MODAL_BACKDROP_MAP[view.backdrop];\r\n    }\r\n\r\n    if (isDefined(view.backdropClass)) {\r\n        settings.backdropClass = view.backdropClass;\r\n    }\r\n\r\n    if (isDefined(view.keyboard)) {\r\n        settings.keyboard = view.keyboard;\r\n    }\r\n\r\n    if (isDefined(view.windowClass)) {\r\n        settings.windowClass = view.windowClass;\r\n    }\r\n\r\n    if (isDefined(view.windowTemplateUrl)) {\r\n        settings.windowTemplateUrl = view.windowTemplateUrl;\r\n    }\r\n\r\n    if (isDefined(view.size)) {\r\n        settings.size = view.size;\r\n    }\r\n\r\n    if (isDefined(view.controllerAs)) {\r\n        settings.controllerAs = view.controllerAs;\r\n    }\r\n\r\n    // Deferred to be handled by ModalHandler to allow DI\r\n    // if (isDefined(view.templateUrl)) {\r\n    //     settings.templateUrl = view.templateUrl;\r\n    // }\r\n\r\n    // Deferred to be handled by ModalHandler to allow DI\r\n    // if (isDefined(view.template)) {\r\n    //     settings.template = <string> view.template;\r\n    // }\r\n\r\n    // TODO styleUrl\r\n\r\n    return new ModalHandler(modal, view, settings);\r\n\r\n}","/// <reference path=\"../../_references.ts\" />\r\n\r\nimport {Module} from '../../module'\r\nimport {ModalServiceDecorator} from './modal-service-decorator'\r\n\r\n// export {Modal, ModalOptions} from './modal'\r\n// export {ModalView, ModalBackdrop, ModalViewOptions} from './modal-view'\r\n\r\n\r\n\r\n@Module({\r\n    name: 'tng.ui.bootstrap',\r\n    dependencies: [\r\n        ModalServiceDecorator\r\n    ]\r\n})\r\nexport class TngUiBootstrapModule {\r\n\r\n}","/// <reference path=\"../../_references.ts\" />\r\n\r\nimport {injectable} from '../../di'\r\nimport {makeDecorator, create, Map, forEach} from '../../utils'\r\nimport {getAnnotations, mergeAnnotations} from '../../reflection'\r\n\r\n\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class RoutesAnnotation {\r\n\r\n    routes: Map<string|Function>;\r\n\r\n    constructor(routes: Map<string|Function>) {\r\n        this.routes = routes;\r\n    }\r\n\r\n}\r\n\r\ntype RoutesDecorator = (routes: Map<string|Function>) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class with states\r\n */\r\nexport var Routes = <RoutesDecorator> makeDecorator(RoutesAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function registerRoutes(moduleController: Function, ngModule: ng.IModule) {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var notes = <RoutesAnnotation[]> getAnnotations(moduleController, RoutesAnnotation).reverse();\r\n    var notes = <RoutesAnnotation[]> getAnnotations(moduleController, RoutesAnnotation);\r\n\r\n    if (!notes.length) return;\r\n\r\n    var routes = {};\r\n    notes.forEach((note) => mergeAnnotations(routes, note.routes));\r\n\r\n    ngModule.config(injectable(['$urlRouterProvider'], ($urlRouterProvider: ng.ui.IUrlRouterProvider) => {\r\n\r\n        forEach(routes, (handler, route) => {\r\n            if (route === '?') {\r\n                $urlRouterProvider.otherwise(handler);\r\n            }\r\n            else {\r\n                $urlRouterProvider.when(route, handler);\r\n            }\r\n        });\r\n\r\n    }));\r\n\r\n}","/// <reference path=\"../../_references.ts\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from '../../assert'\r\n\r\nimport {injectable, safeBind} from '../../di'\r\nimport {makeDecorator, create, isDefined, isString, isFunction, Map, isArray, forEach} from '../../utils'\r\nimport {getAnnotations, mergeAnnotations} from '../../reflection'\r\nimport {ViewAnnotation} from '../../view'\r\nimport {On, publishListeners} from './events'\r\nimport {getModalHandler} from '../bootstrap/modal'\r\n\r\nexport {View} from '../../view'\r\nexport {StateChangeEvent, ViewLoadEvent} from './events'\r\n\r\n\r\n\r\n/**\r\n * Options available when decorating an application controller with states\r\n * TODO document\r\n */\r\nexport interface StateConfig {\r\n\r\n    url: string;\r\n    abstract?: boolean;\r\n    view?: Function;\r\n    views?: {[outlet:string]: Function};\r\n    modal?: Function,\r\n    parent?: StateConfig|string;\r\n    reloadOnSearch?: boolean;\r\n    onEnter?: Function;\r\n\tonExit?: Function;\r\n    resolve?: Map<string|Function>;\r\n\r\n    // TODO\r\n    // params\r\n    // data\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface InternalStateConfig extends StateConfig {\r\n    name: string;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class StatesAnnotation {\r\n\r\n    states: Map<InternalStateConfig>;\r\n\r\n    constructor(states: Map<InternalStateConfig>) {\r\n\r\n        forEach(states, (state, name) => state.name = name);\r\n        this.states = states;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport interface StatesDecorator {\r\n    (states: Map<StateConfig>): ClassDecorator;\r\n    on: typeof On;\r\n}\r\n\r\n/**\r\n * A decorator to annotate a class with states\r\n */\r\nexport var States = <StatesDecorator> <any> makeDecorator(StatesAnnotation);\r\nStates.on = On;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function publishStates(moduleController: Function, ngModule: ng.IModule) {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations to ge them on the original order\r\n    // var statesAnnotation = <StatesAnnotation[]> getAnnotations(moduleController, StatesAnnotation).reverse();\r\n    var statesAnnotation = <StatesAnnotation[]> getAnnotations(moduleController, StatesAnnotation);\r\n\r\n    if (statesAnnotation.length) {\r\n        let states: ng.ui.IState[] = [];\r\n\r\n        // Translate each state from each annotation and stack them in an array\r\n        forEach(statesAnnotation, (note) =>\r\n            forEach(note.states, (state) =>\r\n                states.push(translateToUiState(state))));\r\n\r\n        ngModule.config(injectable(['$stateProvider'], ($stateProvider: ng.ui.IStateProvider) => {\r\n\r\n            for (let state of states) {\r\n                $stateProvider.state(state);\r\n            }\r\n\r\n        }));\r\n    }\r\n\r\n    publishListeners(moduleController, ngModule);\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nfunction translateToUiState(state: InternalStateConfig): ng.ui.IState {\r\n\r\n    var translatedState: ng.ui.IState = {};\r\n\r\n    if (isDefined(state.name)) translatedState.name = state.name;\r\n    if (isDefined(state.url)) translatedState.url = state.url;\r\n    if (isDefined(state.abstract)) translatedState.abstract = state.abstract;\r\n    if (isDefined(state.reloadOnSearch)) translatedState.reloadOnSearch = state.reloadOnSearch;\r\n    if (isDefined(state.onEnter)) translatedState.onEnter = state.onEnter;\r\n    if (isDefined(state.onExit)) translatedState.onExit = state.onExit;\r\n    if (isDefined(state.resolve)) translatedState.resolve = state.resolve;\r\n\r\n    // If the state has a parent, we force the string way\r\n    if (isDefined(state.parent)) {\r\n        let parent = state.parent;\r\n        if (!isString(parent)) {\r\n            parent = (<InternalStateConfig> parent).name;\r\n        }\r\n        // ng.ui.IState is missing parent\r\n        (<any> translatedState).parent = parent;\r\n    }\r\n\r\n    // if (state.view && state.views) {\r\n    //     throw Error('Cannot provide both view and views');\r\n    // }\r\n    // else if (!state.view && !state.views) {\r\n    //     throw Error('Must provide either view or views');\r\n    // }\r\n    // else {\r\n    if (state.view || state.views) {\r\n        let views = <{[key:string]:any}> {};\r\n\r\n        if (state.view) {\r\n            views[''] = extractViewData(state.view);\r\n        }\r\n        else {\r\n            forEach(state.views, (controller, outlet) => views[outlet] = extractViewData(controller))\r\n        }\r\n\r\n        translatedState.views = views;\r\n    }\r\n    else if (state.modal) {\r\n        let handler = getModalHandler(state.modal);\r\n\r\n        if (translatedState.onEnter) {\r\n            let onEnter = <Function> translatedState.onEnter;\r\n            translatedState.onEnter = injectable(['$injector'], function($injector: ng.auto.IInjectorService) {\r\n                $injector.invoke(onEnter);\r\n                $injector.invoke(handler.open, handler);\r\n            });\r\n        }\r\n        else {\r\n            translatedState.onEnter = safeBind(handler.open, handler);\r\n        }\r\n\r\n        if (translatedState.onExit) {\r\n            let onExit = <Function> translatedState.onExit;\r\n            translatedState.onExit = injectable(['$injector'], function($injector: ng.auto.IInjectorService) {\r\n                $injector.invoke(handler.dismiss, handler);\r\n                $injector.invoke(onExit);\r\n            });\r\n        }\r\n        else {\r\n            translatedState.onExit = safeBind(handler.dismiss, handler);\r\n        }\r\n    }\r\n\r\n    return translatedState;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nfunction extractViewData(viewModel: Function) {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // let notes = getAnnotations(viewModel, ViewAnnotation).reverse();\r\n    let notes = getAnnotations(viewModel, ViewAnnotation);\r\n\r\n    if (!notes.length) {\r\n        throw new Error('Template not defined');\r\n    }\r\n\r\n    let template = <ViewAnnotation> mergeAnnotations({}, ...notes);\r\n    let data:any = {};\r\n\r\n    data.controller = viewModel;\r\n    if (template.controllerAs) data.controllerAs = template.controllerAs;\r\n    if (template.template) data.template = template.template;\r\n    if (template.templateUrl) data.templateUrl = template.templateUrl;\r\n    // TODO style?\r\n\r\n    return data;\r\n\r\n}","/// <reference path=\"./_references\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert';\r\n\r\n/**\r\n * A framework envelope for values\r\n */\r\nexport class ValueWrapper<Type> {\r\n\r\n    constructor(private _name: string, private _value: Type) {\r\n    }\r\n    \r\n    get name() {\r\n        return this._name;\r\n    }\r\n    \r\n    get value() {\r\n        return this._value;\r\n    }\r\n    \r\n}\r\n\r\n/**\r\n * Wraps a value to be made available for dependency injection\r\n * \r\n * @param name The name of the value through which it will made available\r\n * @param value The value to be injected, as is\r\n * \r\n * @return A wrapper instance, to be used as a module dependency\r\n */\r\nexport function Value<Type>(name: string, value: Type): ValueWrapper<Type> {\r\n    \r\n    // TODO debug only?\r\n    assert.notEmpty(name, 'name cannot be null or empty');\r\n\r\n    return new ValueWrapper(name, value);\r\n\r\n}\r\n\r\nexport function publishValue<Type>(value: ValueWrapper<Type>, ngModule: ng.IModule, name?: string): ng.IModule {\r\n\r\n    // TODO debug only?\r\n    assert(value instanceof ValueWrapper, 'constant must be a ConstantWrapper');\r\n    \r\n    name = name != null ? name : value.name;\r\n    ngModule.value(name, value.value);\r\n    \r\n    return ngModule;\r\n\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert'\r\nimport {makeDecorator, FunctionReturningString, setIfInterface} from './utils'\r\n\r\n\r\n\r\n/**\r\n * Options available when decorating a class with view information\r\n * TODO document\r\n */\r\nexport interface ViewOptions {\r\n\r\n    /**\r\n     * TODO should it be required?\r\n     */\r\n    controllerAs: string;\r\n\r\n    /**\r\n     *\r\n     */\r\n    template?: string|FunctionReturningString;\r\n\r\n    /**\r\n     *\r\n     */\r\n    templateUrl?: string|FunctionReturningString;\r\n\r\n    /**\r\n     * TODO\r\n     */\r\n    styles?: string|string[];\r\n\r\n    /**\r\n     * TODO\r\n     */\r\n    // stylesUrls?: string[];\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ViewAnnotation {\r\n\r\n    template: string|FunctionReturningString = void 0;\r\n    templateUrl: string|FunctionReturningString = void 0;\r\n    styles: string|string[] = void 0;\r\n    // stylesUrls: string[] = void 0;\r\n    controllerAs: string = void 0;\r\n\r\n    constructor(options: ViewOptions) {\r\n        // TODO debug only?\r\n        assert.notNull(options, 'options must not be null');\r\n        assert.notEmpty(options.controllerAs, 'controllerAs cannot be null or empty');\r\n\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\ntype ViewDecorator = (options: ViewOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a controller with view information\r\n */\r\nexport var View = <ViewDecorator> makeDecorator(ViewAnnotation);","export {Inject, injectable} from './di'\r\nexport {Value} from './value';\r\nexport {Constant} from './constant';\r\nexport {Filter} from './filter';\r\nexport {Animation} from './animation';\r\nexport {Service} from './service';\r\nexport {Decorator} from './decorator';\r\nexport {View} from './view';\r\nexport {ComponentView, ComponentTemplateNamespace} from './component-view';\r\nexport {Directive, Transclusion, Bind} from './directive';\r\nexport {Component} from './component';\r\nexport {Module, publishModule} from './module';\r\nexport {Application} from './application';\r\nexport {bootstrap} from './bootstrap';","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/// <reference path=\"./_references\" />\r\n\r\nimport {isString, isArray} from './utils';\r\n\r\nvar slice = Array.prototype.slice;\r\n\r\nexport interface AssertFunction extends Function {\r\n\t(test: any): void;\r\n\t(test: any, errorMessage: string): void;\r\n\t(test: any, error: Error): void;\r\n}\r\n\r\nexport interface NotNullFunction extends Function {\r\n\t(value: any): void;\r\n\t(value: any, errorMessage: string): void;\r\n\t(value: any, error: Error): void;\r\n}\r\n\r\nexport interface NotEmptyFunction extends Function {\r\n\t(value: string|Array<any>): void;\r\n\t(value: string|Array<any>, errorMessage: string): void;\r\n\t(value: string|Array<any>, error: Error): void;\r\n}\r\n\r\nexport interface assert extends AssertFunction {\t\r\n\tnotNull: NotNullFunction;\r\n\tnotEmpty: NotEmptyFunction;\r\n}\r\n\r\nexport function AssertionError(message?: string) {\r\n    // Error.apply(this, arguments);\r\n    this.name = 'AssertionError';\r\n    this.message = message != null ? message : '';\r\n}\r\n(function() {\r\n    function __() { this.constructor = AssertionError; }\r\n    __.prototype = Error.prototype;\r\n    AssertionError.prototype = new (<any>__)();\r\n})();\r\n\r\nfunction _assert(condition: boolean, errorOrMessage?: any): void {    \r\n    if (!condition) {\r\n        throw (errorOrMessage instanceof Error) ? errorOrMessage :\r\n            new (<any>AssertionError)(errorOrMessage || 'Assertion failed');\r\n    }    \r\n}\r\n\r\nfunction _notNull(value: any, errorOrMessage?: any) {\t\r\n\t_assert(value != null, errorOrMessage);\r\n}\r\n\r\nfunction _notEmpty(value: any, errorOrMessage?: any) {\r\n    _notNull(value, errorOrMessage);\r\n    \r\n    if (isString(value)) {\r\n        _assert(value.trim().length > 0, errorOrMessage);\r\n    }\r\n    else {\r\n        _assert(value.length > 0, errorOrMessage);\r\n    }\r\n}\r\n\r\n(<assert> _assert).notNull = _notNull;\r\n(<assert> _assert).notEmpty = _notEmpty;\r\n\r\nexport var assert = <assert> _assert;","/// <reference path=\"./_references\" />\r\n\r\nimport {forEach, isDefined} from './utils';\r\n\r\nexport const ANNOTATIONS_METADATA_KEY = 'tng';\r\n\r\nvar _Reflect = Reflect;\r\nexport {_Reflect as Reflect};\r\n\r\nconst functionPrototype = Object.getPrototypeOf(Function);\r\n\r\nfunction GetPrototypeOf(O: any): Object {\r\n\r\n    let proto = Object.getPrototypeOf(O);\r\n    if (typeof O !== \"function\" || O === functionPrototype) {\r\n        return proto;\r\n    }\r\n\r\n    // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\r\n    // Try to determine the superclass constructor. Compatible implementations\r\n    // must either set __proto__ on a subclass constructor to the superclass constructor,\r\n    // or ensure each class has a valid `constructor` property on its prototype that\r\n    // points back to the constructor.\r\n\r\n    // If this is not the same as Function.[[Prototype]], then this is definately inherited.\r\n    // This is the case when in ES6 or when using __proto__ in a compatible browser.\r\n    if (proto !== functionPrototype) {\r\n        return proto;\r\n    }\r\n\r\n    // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\r\n    let prototype = O.prototype;\r\n    let prototypeProto = Object.getPrototypeOf(prototype);\r\n    if (prototypeProto == null || prototypeProto === Object.prototype) {\r\n        return proto;\r\n    }\r\n\r\n    // if the constructor was not a function, then we cannot determine the heritage.\r\n    let constructor = prototypeProto.constructor;\r\n    if (typeof constructor !== \"function\") {\r\n        return proto;\r\n    }\r\n\r\n    // if we have some kind of self-reference, then we cannot determine the heritage.\r\n    if (constructor === O) {\r\n        return proto;\r\n    }\r\n\r\n    // we have a pretty good guess at the heritage.\r\n    return constructor;\r\n\r\n}\r\n\r\nfunction getKey(key?: string): string {\r\n\treturn !key ? ANNOTATIONS_METADATA_KEY : `${ANNOTATIONS_METADATA_KEY}:${key}`;\r\n}\r\n\r\nexport function getAnnotations(target: any, type?: Function, key?: string): any[] {\r\n\r\n    let metas: any[] = [];\r\n    let proto = target;\r\n\r\n    do {\r\n        metas.push(getOwnAnnotations(proto, type, key));\r\n        proto = GetPrototypeOf(proto);\r\n    } while (typeof proto === \"function\" && proto !== functionPrototype);\r\n\r\n    metas.reverse();\r\n    let annotations: any[] = [];\r\n\r\n    for (let i = 0; i < metas.length; i++) {\r\n        annotations = annotations.concat(metas[i]);\r\n    }\r\n\r\n    return annotations;\r\n\r\n}\r\n\r\n// export function getAnnotations(target: any, type?: Function, key?: string): any[] {\r\n\r\n// \tvar annotations = <any[]> Reflect.getMetadata(getKey(key), target) || [];\r\n\r\n// \tif (type) {\r\n// \t\treturn annotations.filter((value) => value instanceof type);\r\n// \t}\r\n\r\n// \treturn annotations.slice(0);\r\n\r\n// }\r\n\r\nexport function getOwnAnnotations(target: any, type?: Function, key?: string): any[] {\r\n\r\n\tvar annotations = <any[]> Reflect.getOwnMetadata(getKey(key), target) || [];\r\n\r\n\tif (type) {\r\n\t\treturn annotations.filter((value) => value instanceof type).reverse();\r\n\t}\r\n\r\n\treturn annotations.slice(0).reverse();\r\n\r\n}\r\n\r\nexport function setAnnotations(target: any, annotations: any[], key?: string):void {\r\n\r\n\tReflect.defineMetadata(getKey(key), annotations, target);\r\n\r\n}\r\n\r\nexport function addAnnotation(target: any, annotation: any, key?: string):void {\r\n\r\n\tvar annotations = getOwnAnnotations(target, null, key);\r\n\tannotations.push(annotation);\r\n\tsetAnnotations(target, annotations, key);\r\n\r\n}\r\n\r\nexport function hasAnnotation(target: any, type?: Function, key?: string): boolean {\r\n\r\n\tif (!type) {\r\n\t\treturn Reflect.hasMetadata(getKey(key), target);\r\n\t}\r\n\r\n\treturn getAnnotations(target, type, key).length > 0;\r\n\r\n}\r\n\r\nexport function hasOwnAnnotation(target: any, type?: Function, key?: string): boolean {\r\n\r\n\tif (!type) {\r\n\t\treturn Reflect.hasOwnMetadata(getKey(key), target);\r\n\t}\r\n\r\n\treturn getAnnotations(target, type, key).length > 0;\r\n\r\n}\r\n\r\n// export function mergeAnnotations(...annotations: any[]): any;\r\nexport function mergeAnnotations<Type>(...annotations: any[]): Type;\r\nexport function mergeAnnotations(...annotations: any[]): any {\r\n\r\n\tif (!annotations.length) {\r\n\t\treturn null;\r\n\t}\r\n\telse if (annotations.length == 1) {\r\n\t\treturn annotations[0];\r\n\t}\r\n\r\n\tvar dest = <{ [key: string]: any }><any> annotations.shift();\r\n\r\n\tfor (let source of annotations) {\r\n\t\tforEach(source, (value, key) => {\r\n\t\t\t// We only replace if defined (nulls are ok, they remove previously set values)\r\n\t\t\tif (isDefined(value)) {\r\n\t\t\t\tdest[key] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn <any> dest;\r\n\r\n}","/// <reference path=\"../../_references.ts\" />\r\n\r\nimport {Inject} from '../../di'\r\nimport {Decorator} from '../../decorator'\r\nimport {getModalHandler} from './modal'\r\n\r\nimport IModalService = ng.ui.bootstrap.IModalService\r\nimport IModalSettings = ng.ui.bootstrap.IModalSettings\r\nimport IModalServiceInstance = ng.ui.bootstrap.IModalServiceInstance\r\nimport IInjectorService = ng.auto.IInjectorService\r\n\r\n\r\n\r\n@Decorator({\r\n\tname: '$modal'\r\n})\r\nexport class ModalServiceDecorator implements Decorator {\r\n\r\n\tdecorate(\r\n\t\t@Inject('$delegate') $modal: IModalService,\r\n\t\t@Inject('$injector') $injector: ng.auto.IInjectorService): IModalService {\r\n\r\n\t\tvar originalOpen = $modal.open;\r\n\t\t$modal.open = function(optionsOrModal: any, scope?: ng.IScope): IModalServiceInstance {\r\n\r\n\t\t\t// Usign @Modal decorator?\r\n\t\t\tif (typeof optionsOrModal === 'function') {\r\n\t\t\t\tvar handler = getModalHandler(<Function> optionsOrModal, scope);\r\n\t\t\t\treturn $injector.invoke(handler.open, handler);\r\n\t\t\t}\r\n\t\t\t// Using the original IModalSettings object\r\n\t\t\telse {\r\n\t\t\t\treturn originalOpen.call($modal, optionsOrModal);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn $modal;\r\n\r\n\t}\r\n\r\n}","/// <reference path=\"../../_references.ts\" />\r\n\r\nimport {makeDecorator, setIfInterface} from '../../utils'\r\nimport {ViewOptions, ViewAnnotation} from '../../view'\r\n\r\n\r\n\r\nexport enum ModalBackdrop {\r\n\tShow,\r\n\tHide,\r\n\tStatic\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const MODAL_BACKDROP_MAP = [true, false, 'static'];\r\n\r\n/**\r\n * Options available when decorating a modal with view information\r\n * TODO document\r\n */\r\nexport interface ModalViewOptions extends ViewOptions {\r\n\r\n    animation?: boolean;\r\n\tbackdrop?: ModalBackdrop;\r\n\tbackdropClass?: string;\r\n\tkeyboard?: boolean;\r\n\twindowClass?: string;\r\n\twindowTemplateUrl?: string;\r\n\tsize?: string;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ModalViewAnnotation extends ViewAnnotation {\r\n\r\n    animation: boolean = void 0;\r\n\tbackdrop: ModalBackdrop = void 0;\r\n\tbackdropClass: string = void 0;\r\n\tkeyboard: boolean = void 0;\r\n\twindowClass: string = void 0;\r\n\twindowTemplateUrl: string = void 0;\r\n\tsize: string = void 0;\r\n\r\n    constructor(options: ModalViewOptions) {\r\n\t\tsuper(options);\r\n\t\tsetIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\ntype ModalViewDecorator = (options: ModalViewOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a modal with view information\r\n */\r\nexport var ModalView = <ModalViewDecorator> makeDecorator(ModalViewAnnotation);","/// <reference path=\"../../_references.ts\" />\r\n\r\nimport {makeDecorator, isNumber} from '../../utils'\r\nimport {getAnnotations} from '../../reflection'\r\nimport {injectable} from '../../di'\r\n\r\n\r\n\r\n/**\r\n * Enumeration of events related to the transition of states.\r\n */\r\nexport const enum StateChangeEvent {\r\n\r\n    /**\r\n     * Fired when the transition begins.\r\n     *\r\n     * Translates to the UI-Router $stateChangeStart event.\r\n     *\r\n     * The $rootScope broadcasts this event down to child scopes.\r\n     *\r\n     * The handler function receives the following parameters:\r\n     *\r\n     * - event: ng.IAngularEvent\r\n     * - toState:\r\n     * - toParams:\r\n     * - fromState:\r\n     * - fromParams:\r\n     *\r\n     * Note: Use event.preventDefault() to prevent the transition from happening.\r\n     */\r\n    STATE_CHANGE_START,\r\n\r\n    /**\r\n     * Fired once the state transition is complete.\r\n     *\r\n     * Translates to the UI-Router $stateChangeSuccess event.\r\n     *\r\n     * The $rootScope broadcasts this event down to child scopes.\r\n     *\r\n     * The handler function receives the following parameters:\r\n     *\r\n     * - event: ng.IAngularEvent\r\n     * - toState:\r\n     * - toParams:\r\n     * - fromState:\r\n     * - fromParams:\r\n     */\r\n    STATE_CHANGE_SUCCESS,\r\n\r\n    /**\r\n     * Fired when an error occurs during transition.\r\n     *\r\n     * Translates to the UI-Router $stateChangeError event.\r\n     *\r\n     * The $rootScope broadcasts this event down to child scopes.\r\n     *\r\n     * The handler function receives the following parameters:\r\n     *\r\n     * - event: ng.IAngularEvent\r\n     * - toState:\r\n     * - toParams:\r\n     * - fromState:\r\n     * - fromParams:\r\n     * - error: Error\r\n     *\r\n     * Note: It's important to note that if you have any errors in your\r\n     * resolve functions (JavaScript errors, non-existent services, etc)\r\n     * they will not throw traditionally. You must listen for this\r\n     * event to catch ALL errors. Use event.preventDefault() to prevent\r\n     * the $UrlRouter from reverting the URL to the previous valid location\r\n     * (in case of a URL navigation).\r\n     */\r\n    STATE_CHANGE_ERROR\r\n\r\n    /**\r\n     * TODO: From version 0.3.0 and up. Does it have a stable release?\r\n     *\r\n     * Fired when a state cannot be found by its name.\r\n     *\r\n     * Translates to the UI-Router $stateNotFound event.\r\n     *\r\n     * The $rootScope broadcasts this event down to child scopes.\r\n     */\r\n    // STATE_NOT_FOUND\r\n\r\n}\r\n\r\n/**\r\n * Enumeration of events related to the loading of view contents.\r\n */\r\nexport const enum ViewLoadEvent {\r\n\r\n    /**\r\n     * Fired once the view begins loading, before the DOM is rendered.\r\n     *\r\n     * Translates to the UI-Router $viewContentLoading event.\r\n     *\r\n     * The $rootScope broadcasts this event down to child scopes.\r\n     *\r\n     * The handler function receives the following parameters:\r\n     *\r\n     * - event: ng.IAngularEvent\r\n     * - viewConfig:\r\n     */\r\n    VIEW_CONTENT_LOADING = 4,\r\n\r\n    /**\r\n     * Fired once the view is loaded, after the DOM is rendered.\r\n     *\r\n     * Translates to the UI-Router $viewContentLoaded event.\r\n     *\r\n     * The '$scope' of the view emits the event up to the $rootScope.\r\n     *\r\n     * The handler function receives the following parameter:\r\n     *\r\n     * - event: ng.IAngularEvent\r\n     */\r\n    VIEW_CONTENT_LOADED = 5\r\n\r\n}\r\n\r\n/**\r\n * Maps the event enums to the actual event names used by the UI-Router.\r\n * @internal\r\n */\r\nconst EVENTS_MAP = [\r\n    '$stateChangeStart',\r\n    '$stateChangeSuccess',\r\n    '$stateChangeError',\r\n    '$stateNotFound',\r\n\r\n    '$viewContentLoading',\r\n    '$viewContentLoaded'\r\n];\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class UiRouterEventListenerAnnotation {\r\n\r\n    constructor(public event: StateChangeEvent|ViewLoadEvent|string, public handler: Function) {\r\n        // TODO validate arguments\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\ntype OnDecorator = (event: StateChangeEvent|ViewLoadEvent|string, handler: Function) => ClassDecorator;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport var On = <OnDecorator> makeDecorator(UiRouterEventListenerAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function publishListeners(moduleController: Function, ngModule: ng.IModule) {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations to ge them on the original order\r\n    // var listenerNotes = <UiRouterEventListenerAnnotation[]> getAnnotations(moduleController, UiRouterEventListenerAnnotation).reverse();\r\n    var listenerNotes = <UiRouterEventListenerAnnotation[]> getAnnotations(moduleController, UiRouterEventListenerAnnotation);\r\n\r\n    if (listenerNotes.length) {\r\n        ngModule.run(injectable(['$rootScope'], ($rootScope: ng.IRootScopeService) => {\r\n\r\n            for (let listenerAnnotation of listenerNotes) {\r\n                let event = <string> listenerAnnotation.event;\r\n\r\n                if (isNumber(event)) {\r\n                    event = EVENTS_MAP[<number> listenerAnnotation.event];\r\n                }\r\n\r\n                $rootScope.$on(event, <any> listenerAnnotation.handler);\r\n            }\r\n\r\n        }));\r\n    }\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\nimport {Reflect, getAnnotations, addAnnotation} from './reflection'\r\n\r\n\r\n\r\ntype extendSignature = <Type>(dest: Type, ...rest: any[]) => Type;\r\n\r\nexport var isDefined = angular.isDefined;\r\nexport var isString = angular.isString;\r\nexport var isNumber = angular.isNumber;\r\nexport var isObject = angular.isObject;\r\nexport var isElement = angular.isElement;\r\nexport var isDate = angular.isDate;\r\nexport var isArray = angular.isArray;\r\nexport var isFunction = angular.isFunction;\r\nexport var forEach = angular.forEach;\r\nexport var extend = <extendSignature> angular.extend;\r\nexport var copy = <extendSignature> angular.copy;\r\nexport var merge = <extendSignature> (<any> angular).merge;\r\nexport var mergeIfValue = <extendSignature> _mergeIfValue;\r\n\r\nexport type FunctionReturningNothing = (...args: any[]) => void;\r\nexport type FunctionReturningSomething = (...args: any[]) => any;\r\nexport type FunctionReturningString = (...args: any[]) => string;\r\nexport type FunctionReturningNumber = (...args: any[]) => number;\r\n\r\nexport interface Map<TValue> {\r\n    [key: string]: TValue;\r\n}\r\n\r\nexport function create<Type>(constructor: { prototype: Type }): Type {\r\n\r\n    return Object.create(constructor.prototype);\r\n\r\n}\r\n\r\nexport function setIf(target:any, source:any) {\r\n\r\n    if (target == null || source == null) {\r\n        return;\r\n    }\r\n\r\n\tfor (let key in source) {\r\n        if (source.hasOwnProperty(key) && isDefined(source[key])) {\r\n            target[key] = source[key];\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function setIfInterface(target:any, source:any) {\r\n\r\n    if (target == null || source == null) {\r\n        return;\r\n    }\r\n\r\n\tfor (let key in source) {\r\n        if (source.hasOwnProperty(key) && isDefined(source[key])) {\r\n            if (target.hasOwnProperty(key)) {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function makeDecorator<T extends Function>(annotationClass: T) {\r\n\r\n    return function() {\r\n\r\n        var annotationInstance = Object.create(annotationClass.prototype);\r\n        annotationClass.apply(annotationInstance, arguments);\r\n\r\n        return function(target: T) {\r\n            addAnnotation(target, annotationInstance);\r\n            return target;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function makeParamDecorator<T extends Function>(annotationClass: T) {\r\n\r\n    return function() {\r\n\r\n        var annotationInstance = Object.create(annotationClass.prototype);\r\n        annotationClass.apply(annotationInstance, arguments);\r\n\r\n        return function(target: T, unusedKey: string, index: number) {\r\n\r\n            var parameters = Reflect.getMetadata('parameters', target);\r\n            parameters = parameters || [];\r\n\r\n            // there might be gaps if some in between parameters do not have annotations.\r\n            // we pad with nulls.\r\n            while (parameters.length <= index) {\r\n                parameters.push(null);\r\n            }\r\n\r\n            parameters[index] = annotationInstance;\r\n            Reflect.defineMetadata('parameters', parameters, target);\r\n            return target;\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const enum SelectorType {\r\n    Attribute,\r\n    Class,\r\n    //Comment,\r\n    Tag\r\n};\r\n\r\ntype Selector = {\r\n    semanticeName: string,\r\n    imperativeName: string,\r\n    type: SelectorType\r\n};\r\n\r\nconst RE_SELECTOR_ATTRIBUTE = /^\\[([a-z_][a-z\\-_0-9]+)\\]$/i;\r\nconst RE_SELECTOR_CLASS = /^\\.([a-z_][a-z\\-_0-9]+)$/i;\r\n//const RE_SELECTOR_COMMENT = /^\\/\\/([a-z_][a-z\\-_0-9]+)$/i;\r\nconst RE_SELECTOR_TAG = /^([a-z_][a-z\\-_0-9]+)$/i;\r\n\r\nexport function parseSelector(selector: string): Selector {\r\n\r\n    var semanticeName: string;\r\n    var type: SelectorType;\r\n    var m: RegExpMatchArray;\r\n\r\n    if (m = RE_SELECTOR_TAG.exec(selector)) {\r\n        type = SelectorType.Tag;\r\n    }\r\n    else if (m = RE_SELECTOR_ATTRIBUTE.exec(selector)) {\r\n        type = SelectorType.Attribute;\r\n    }\r\n    else if (m = RE_SELECTOR_CLASS.exec(selector)) {\r\n        type = SelectorType.Class;\r\n    }\r\n    //else if (m = RE_SELECTOR_COMMENT.exec(selector)) {\r\n    //    type = SelectorType.Comment;\r\n    //}\r\n    else {\r\n        throw new Error(`Invalid selector: ${selector}`);\r\n    }\r\n\r\n    return {\r\n        semanticeName: m[1],\r\n        imperativeName: toCamelCase(m[1]),\r\n        type: type\r\n    };\r\n}\r\n\r\n// from mout @ https://github.com/mout/mout/blob/v0.11.0/src/string/camelCase.js\r\nfunction toCamelCase(str: string) {\r\n    str = str.replace(/[\\-_]/g, ' ') //convert all hyphens and underscores to spaces\r\n        .replace(/\\s[a-z]/g, upperCase) //convert first char of each word to UPPERCASE\r\n        .replace(/\\s+/g, '') //remove spaces\r\n        .replace(/^[A-Z]/g, lowerCase); //convert first char to lowercase\r\n    return str;\r\n}\r\nfunction upperCase(str: string){\r\n    return str.toUpperCase();\r\n}\r\nfunction lowerCase(str: string) {\r\n    return str.toLowerCase();\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function bindFunctions<T>(host: T): T {\r\n\r\n    var aux = <any> host;\r\n\r\n    if (aux) {\r\n        for (let key in aux) {\r\n            if (isFunction(aux[key])) {\r\n                aux[key] = safeBind(aux[key], aux);\r\n            }\r\n        }\r\n    }\r\n\r\n    return host;\r\n\r\n}\r\n\r\nexport function safeBind<T extends Function>(func: T, context: any): T {\r\n\r\n    var bound = func.bind(context);\r\n\r\n    forEach(func, (value, name) => bound[name] = value);\r\n\r\n    return bound;\r\n\r\n}\r\n\r\n\r\n\r\n// --\r\n\r\n/**\r\n * Set or clear the hashkey for an object.\r\n * @param obj object\r\n * @param h the hashkey (!truthy to delete the hashkey)\r\n */\r\nfunction setHashKey(obj:any, h:any) {\r\n  if (h) {\r\n    obj.$$hashKey = h;\r\n  } else {\r\n    delete obj.$$hashKey;\r\n  }\r\n}\r\n\r\n\r\nfunction baseExtend(dst:any, objs:any[], deep:boolean, ifValue:boolean=false):any {\r\n  var h = dst.$$hashKey;\r\n\r\n  for (var i = 0, ii = objs.length; i < ii; ++i) {\r\n    var obj = objs[i];\r\n    if (!isObject(obj) && !isFunction(obj)) continue;\r\n    var keys = Object.keys(obj);\r\n    for (var j = 0, jj = keys.length; j < jj; j++) {\r\n      var key = keys[j];\r\n      var src = obj[key];\r\n\r\n      if (deep && isObject(src)) {\r\n        if (!isObject(dst[key])) dst[key] = isArray(src) ? [] : {};\r\n        baseExtend(dst[key], [src], true);\r\n      } else if (!ifValue || src != null) {\r\n        dst[key] = src;\r\n      }\r\n    }\r\n  }\r\n\r\n  setHashKey(dst, h);\r\n  return dst;\r\n}\r\n\r\nfunction _mergeIfValue(dst:any):any {\r\n    return baseExtend(dst, [].slice.call(arguments, 1), true, true);\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\nimport {getAnnotations, mergeAnnotations} from './reflection'\r\nimport {injectable} from './di'\r\nimport {makeDecorator, FunctionReturningSomething, setIfInterface} from './utils'\r\nimport {create, isFunction, bindFunctions} from './utils'\r\n\r\n\r\n\r\n/**\r\n * Options available when decorating a class as an animation controller\r\n * TODO document\r\n */\r\nexport interface AnimationOptions {\r\n\r\n    /**\r\n     * TODO rules?\r\n     */\r\n    name: string;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class AnimationAnnotation {\r\n\r\n    name: string = null;\r\n\r\n    constructor(options: AnimationOptions) {\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\ntype endFunction = (isCancelled: boolean) => void;\r\n\r\n/**\r\n * Interface animation controllers MAY implement\r\n * TODO document\r\n */\r\nexport interface Animation {\r\n    enter?: (element: ng.IAugmentedJQuery, done: Function) => endFunction;\r\n    leave?: (element: ng.IAugmentedJQuery, done: Function) => endFunction;\r\n    move?: (element: ng.IAugmentedJQuery, done: Function) => endFunction;\r\n    addClass?: (element: ng.IAugmentedJQuery, className: string, done: Function) => endFunction;\r\n    removeClass?: (element: ng.IAugmentedJQuery, className: string, done: Function) => endFunction;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface AnimationConstructor extends Function {\r\n    new (...args: any[]): Animation;\r\n    prototype: Animation;\r\n}\r\n\r\ntype DecoratorSignature = (options: AnimationOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being an animation controller\r\n */\r\nexport var Animation = <DecoratorSignature> makeDecorator(AnimationAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function registerAnimation(animationClass: AnimationConstructor, ngModule: ng.IModule) {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(animationClass, AnimationAnnotation).reverse();\r\n    var aux = getAnnotations(animationClass, AnimationAnnotation);\r\n\r\n    if (!aux.length) {\r\n        throw new Error(\"Filter annotation not found\");\r\n    }\r\n\r\n    var {name} = mergeAnnotations<AnimationAnnotation>(create(AnimationAnnotation), ...aux);\r\n\r\n    // TODO validate implementation?\r\n\r\n    ngModule.animation(name, injectable(['$injector'], function($injector: ng.auto.IInjectorService) {\r\n        var singleton = <Animation> $injector.instantiate(animationClass);\r\n        bindFunctions(singleton);\r\n        return singleton;\r\n    }));\r\n\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert'\r\nimport {makeDecorator, setIfInterface, isElement} from './utils'\r\nimport {ModuleOptions, ModuleAnnotation, Module, ModuleConstructor} from './module'\r\n\r\n\r\n\r\n/**\r\n * Options available when decorating a class as an application\r\n * TODO document\r\n */\r\nexport interface ApplicationOptions extends ModuleOptions {\r\n\t// selector?: string;\r\n\telement: Element\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ApplicationAnnotation extends ModuleAnnotation {\r\n\r\n\t// selector: string = void 0;\r\n\telement: Element|Document = void 0;\r\n\r\n\tconstructor(element: Element|Document);\r\n\tconstructor(options: ApplicationOptions);\r\n\tconstructor(elementOroptions: any) {\r\n\t\tsuper(options);\r\n\r\n\t\tvar options = isElement(elementOroptions) ? { element: elementOroptions } : elementOroptions;\r\n\r\n\t\t// TODO debug only?\r\n        assert(options && options.element, 'element must be provided');\r\n        // assert(options.element || options.selector, 'Either element or selector must be provided');\r\n\t\t// assert(!(options.element && options.selector), 'Provide either selector or element, but not both');\r\n\r\n\t\tsetIfInterface(this, options);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Interface applications MAY implement\r\n */\r\nexport interface Application extends Module {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ApplicationConstructor extends ModuleConstructor {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\ntype ApplicationSignature = (options: ApplicationOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being an application\r\n */\r\nexport var Application = <ApplicationSignature> makeDecorator(ApplicationAnnotation);","/// <reference path=\"./_references\" />\r\n\r\n/*\r\nApplications must have:\r\n    - Module annotation\r\n\r\nSteps to bootstrap:\r\n\r\n    - Process submodules (recursively)\r\n    - Process the application module\r\n    - Bootstrap\r\n\r\nTo process a module is to:\r\n    - Iterate through it's submodules and process them (recurse)\r\n        - Register the module on Angular\r\n        - Register services on Angular\r\n        - Register directives on Angular\r\n        - Register components on Angular\r\n            - Gather route annotations\r\n        - Register config and run functions\r\n*/\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert';\r\n\r\nimport {getAnnotations, mergeAnnotations} from './reflection';\r\nimport {create} from './utils';\r\nimport {ApplicationConstructor, ApplicationAnnotation} from './application';\r\nimport {ModuleConstructor, ModuleAnnotation, publishModule, DependenciesArray} from './module';\r\n\r\n/**\r\n *\r\n */\r\nexport function bootstrap(applicationClass: ApplicationConstructor, element?: Element|Document,\r\n    dependencies?: DependenciesArray, constructorParameters?: any[]): ng.auto.IInjectorService;\r\nexport function bootstrap(moduleClass: ModuleConstructor, element: Element|Document,\r\n    dependencies?: DependenciesArray, constructorParameters?: any[]): ng.auto.IInjectorService;\r\nexport function bootstrap(moduleClass: ModuleConstructor, element?: Element|Document,\r\n    dependencies?: DependenciesArray, constructorParameters?: any[]): ng.auto.IInjectorService {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(moduleClass, ModuleAnnotation).reverse();\r\n    var aux = getAnnotations(moduleClass, ModuleAnnotation);\r\n\r\n    // TODO debug only?\r\n    assert.notEmpty(aux, 'Missing @Application or @Module decoration');\r\n\r\n    var annotation = <ApplicationAnnotation> mergeAnnotations({}, ...aux);\r\n\r\n    element = element || annotation.element;\r\n\r\n    // TODO debug only?\r\n    assert(element, 'element must be provided');\r\n\r\n    var ngModule = publishModule(moduleClass, null, dependencies, constructorParameters);\r\n\r\n    return angular.bootstrap(<any> element, [ngModule.name]);\r\n\r\n}\r\n\r\n//export function bootstrapWhenReady(moduleClass: ModuleConstructor): Promise<ng.auto.IInjectorService>;\r\n//export function bootstrapWhenReady(moduleClass: ModuleConstructor, element: Element): Promise<ng.auto.IInjectorService>;\r\n//export function bootstrapWhenReady(moduleClass: ModuleConstructor, selector: string): Promise<ng.auto.IInjectorService>;\r\n//export function bootstrapWhenReady(moduleClass: ModuleConstructor, selectorOrElement?: any): Promise<ng.auto.IInjectorService> {\r\n//\r\n//    var promise = new Promise<ng.auto.IInjectorService>((resolve, reject) => {\r\n//        // TODO\r\n//    });\r\n//\r\n//    return promise;\r\n//\r\n//}","/// <reference path=\"./_references.ts\" />\r\n\r\nimport {makeDecorator, setIfInterface} from './utils'\r\nimport {ViewOptions, ViewAnnotation} from './view'\r\n\r\n\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport const enum ComponentTemplateNamespace {\r\n    HTML,\r\n    SVG,\r\n    MathML\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const NAMESPACE_MAP = ['html', 'svg', 'math'];\r\n\r\n/**\r\n * Options available when decorating a component with view information\r\n * TODO document\r\n */\r\nexport interface ComponentViewOptions extends ViewOptions {\r\n\r\n    /**\r\n     *\r\n     */\r\n    namespace?: ComponentTemplateNamespace;\r\n\r\n    /**\r\n     * @deprecated\r\n     */\r\n    replace?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ComponentViewAnnotation extends ViewAnnotation {\r\n\r\n    namespace: ComponentTemplateNamespace = void 0;\r\n    replace: boolean = void 0;\r\n\r\n    constructor(options: ComponentViewOptions) {\r\n        super(options);\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\ntype ComponentViewDecorator = (options: ComponentViewOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a component with view information\r\n */\r\nexport var ComponentView = <ComponentViewDecorator> makeDecorator(ComponentViewAnnotation);","/// <reference path=\"./_references.ts\" />\r\n\r\nimport {assert} from './assert'\r\nimport {Inject, injectable, isAnnotated} from './di'\r\nimport {isDefined, isFunction, makeDecorator, Map, setIfInterface} from \"./utils\";\r\nimport {FunctionReturningString, FunctionReturningNothing, parseSelector, SelectorType} from './utils'\r\nimport {hasAnnotation, hasOwnAnnotation, getAnnotations, mergeAnnotations, addAnnotation} from './reflection'\r\nimport {ViewAnnotation} from './view'\r\nimport {ComponentViewAnnotation, NAMESPACE_MAP} from './component-view'\r\nimport {CommonDirectiveOptions, CommonDirectiveAnnotation} from './directive'\r\nimport {Directive, DirectiveAnnotation, DirectiveConstructor, Transclusion} from './directive'\r\nimport {makeCommonDO, DirectiveDefinitionObject, inFactory as inFactoryDirective} from './directive'\r\n\r\nexport {Bind} from './directive';\r\n\r\n\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport interface ComponentOptions extends CommonDirectiveOptions {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ComponentAnnotation extends CommonDirectiveAnnotation {\r\n\r\n    constructor(options: ComponentOptions) {\r\n        super(options); // TODO WTF needs casting?\r\n        //setIfInterface(this, options); nothing to do so far\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Interface components MAY implement\r\n */\r\nexport interface Component extends Directive {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ComponentConstructor extends DirectiveConstructor {\r\n    new (): Component;\r\n}\r\n\r\n\r\n/*function componentDecoratorExtensor(baseClass: Function) {\r\n\r\n    // debugger;\r\n\r\n    var annotations = <ComponentAnnotation[]> getAnnotations(baseClass, ComponentAnnotation);\r\n\r\n    return function(target: any) {\r\n        // debugger;\r\n        // TODO clone?\r\n        for (let annotation of annotations) {\r\n            addAnnotation(target, annotation)\r\n        }\r\n        return target;\r\n    }\r\n\r\n};*/\r\n\r\ninterface ComponentDecoratorType {\r\n    (options: ComponentOptions): ClassDecorator;\r\n    // extends: typeof componentDecoratorExtensor;\r\n}\r\n\r\ntype ComponentDecorator = (options: ComponentOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a component controller\r\n */\r\nexport var Component = <ComponentDecoratorType><any> makeDecorator(ComponentAnnotation);\r\n\r\n// Component.extends = componentDecoratorExtensor;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ComponentDefinitionObject extends DirectiveDefinitionObject {\r\n    controllerAs?: string;\r\n    template?: string|FunctionReturningString;\r\n    templateUrl?: string|FunctionReturningString;\r\n    styles?: string|string[];\r\n    // stylesUrls?: string[];\r\n    templateNamespace?: string;\r\n}\r\n\r\nexport function publishComponent(componentClass: ComponentConstructor, ngModule: ng.IModule, selector?: string): ng.IModule {\r\n\r\n    // TODO debug only?\r\n    assert(hasOwnAnnotation(componentClass, ComponentAnnotation), 'Missing @Component decoration');\r\n    assert(hasAnnotation(componentClass, ViewAnnotation), 'Missing @View decoration');\r\n\r\n    var {name, factory} = makeComponentFactory(componentClass);\r\n\r\n    // TODO Allow for selector override through parameter\r\n\r\n    ngModule.directive(name, factory);\r\n\r\n    return ngModule;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function makeComponentDO(componentClass: ComponentConstructor): ComponentDefinitionObject {\r\n\r\n    var cdo = <ComponentDefinitionObject> makeCommonDO(<DirectiveConstructor> componentClass);\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(componentClass, ViewAnnotation).reverse();\r\n    var aux = getAnnotations(componentClass, ViewAnnotation);\r\n    var view = <ComponentViewAnnotation> {/*no defaults*/};\r\n    mergeAnnotations(view, ...aux);\r\n\r\n    if (!isDefined(cdo.scope)) cdo.scope = {}; // Default scope is isolate\r\n    if (!isDefined(cdo.bindToController)) cdo.bindToController = true; // Default bindToController value\r\n    if (isDefined(view.controllerAs)) cdo.controllerAs = view.controllerAs;\r\n    if (isDefined(view.namespace)) cdo.templateNamespace = NAMESPACE_MAP[view.namespace];\r\n\r\n    if (isDefined(view.styles)) {\r\n        cdo.styles = typeof view.styles === \"string\" ? [<string> view.styles] : view.styles;\r\n    }\r\n    // else if (isDefined(view.stylesUrls)) cdo.stylesUrls = view.stylesUrls;\r\n\r\n    if (isDefined(view.template)) cdo.template = view.template;\r\n    else if (isDefined(view.templateUrl)) cdo.templateUrl = view.templateUrl;\r\n    else throw new Error('Component has no template. Use either template or templateUrl');\r\n\r\n    return cdo;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function inFactory(cdo: ComponentDefinitionObject, $injector: ng.auto.IInjectorService): ComponentDefinitionObject {\r\n\r\n    if (isFunction(cdo.template)) {\r\n        cdo.template = !isAnnotated(<any> cdo.template) ? cdo.template : (tElement: any, tAttrs: any) => {\r\n            return $injector.invoke(<any> cdo.template, null, {\r\n                element: tElement,\r\n                attributes: tAttrs\r\n            });\r\n        };\r\n    }\r\n\r\n    if (isFunction(cdo.templateUrl)) {\r\n        cdo.templateUrl = !isAnnotated(<any> cdo.templateUrl) ? cdo.templateUrl : (tElement: any, tAttrs: any) => {\r\n            return $injector.invoke(<any> cdo.templateUrl, null, {\r\n                element: tElement,\r\n                attributes: tAttrs\r\n            });\r\n        };\r\n    }\r\n\r\n    // TODO styleUrl\r\n\r\n    return cdo;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function makeComponentFactory(componentClass: ComponentConstructor) {\r\n\r\n    var cdo = makeComponentDO(componentClass);\r\n\r\n    var factory = injectable(['$injector'], function directiveFactory($injector: ng.auto.IInjectorService): ng.IDirective {\r\n\r\n        if (cdo.styles) {\r\n            for (let i = 0; i < cdo.styles.length; i++) {\r\n                insertStyle(cdo.styles[i], `tng-component_${cdo.imperativeName}_${i}`);\r\n            }\r\n        }\r\n        // else if (cdo.stylesUrls) {\r\n            // TODO\r\n        // }\r\n\r\n        return <any> inFactory(inFactoryDirective(cdo, $injector), $injector);\r\n    });\r\n\r\n    return {\r\n        name: cdo.imperativeName,\r\n        factory: factory\r\n    };\r\n\r\n}\r\n\r\nfunction insertStyle(style: string, id: string) {\r\n\r\n    id = `#${id}`;\r\n    let head = document.head;\r\n\r\n    if (head.querySelector(id)) {\r\n        return;\r\n    }\r\n\r\n    let el = document.createElement(\"style\");\r\n    el.id = id;\r\n    el.type = \"text/css\"\r\n    el.textContent = style;\r\n    head.insertBefore(el, head.querySelector(\"style\"));\r\n\r\n}","/// <reference path=\"./_references\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert';\r\n\r\n/**\r\n * A framework envelope for constants\r\n */\r\nexport class ConstantWrapper<Type> {\r\n\r\n    constructor(private _name: string, private _value: Type) {\r\n    }\r\n    \r\n    get name() {\r\n        return this._name;\r\n    }\r\n    \r\n    get value() {\r\n        return this._value;\r\n    }\r\n    \r\n}\r\n\r\n/**\r\n * Wraps a constant to be made available for dependency injection\r\n * \r\n * @param name The name of the constant through which it will made available\r\n * @param value The constant value to be injected, as is\r\n * \r\n * @return A wrapper, to be used as a module dependency\r\n */\r\nexport function Constant<Type>(name: string, value: Type): ConstantWrapper<Type> {\r\n\r\n    // TODO debug only?\r\n    assert.notEmpty(name, 'name cannot be null or empty');\r\n\r\n    return new ConstantWrapper(name, value);\r\n\r\n}\r\n\r\nexport function publishConstant<Type>(constant: ConstantWrapper<Type>, ngModule: ng.IModule, name?: string): ng.IModule {\r\n\r\n    // TODO debug only?\r\n    assert(constant instanceof ConstantWrapper, 'constant must be a ConstantWrapper');\r\n    \r\n    name = name != null ? name : constant.name;\r\n    ngModule.constant(name, constant.value);\r\n    \r\n    return ngModule;\r\n\r\n}","/// <reference path=\"./_references\" />\r\n\r\nimport {injectable} from './di'\r\nimport {getAnnotations, mergeAnnotations} from './reflection'\r\nimport {makeDecorator, setIfInterface, create, isFunction} from './utils'\r\n\r\n\r\n\r\n/**\r\n * Options available when decorating a class as a service decorator\r\n */\r\nexport interface DecoratorOptions {\r\n\r\n    /**\r\n     * The name of service to decorate\r\n     */\r\n    name: string;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class DecoratorAnnotation {\r\n\r\n    name: string = null;\r\n\r\n    constructor(options: DecoratorOptions) {\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Interface service decorators MUST implement\r\n *\r\n * * It's a singleton, instantiated the first the decorated service is needed\r\n * * The constructor can receive dependency injections\r\n * * The original service instance is available for injection locally as $delegate\r\n * * When asked for, what is provided is actually the method decorate() bound the decorator instance\r\n */\r\nexport interface Decorator {\r\n\r\n    /**\r\n     * The method that does the actual decoration\r\n     *\r\n     * This method must return the decorated service, as it will be used when\r\n     * the service is asked for.\r\n     *\r\n     * * Can receive dependency injections\r\n     * * The original service instance is available for injection locally as $delegate\r\n     */\r\n    decorate(...args: any[]): any;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface DecoratorConstructor extends Function {\r\n    new (...args: any[]): Decorator;\r\n    prototype: Decorator;\r\n}\r\n\r\ntype DecoratorSignature = (options: DecoratorOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a service decorator\r\n */\r\nexport var Decorator = <DecoratorSignature> makeDecorator(DecoratorAnnotation);\r\n\r\nexport function publishDecorator(decoratorClass: DecoratorConstructor, ngModule: ng.IModule, name?: string): ng.IModule {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(decoratorClass, DecoratorAnnotation).reverse();\r\n    var aux = getAnnotations(decoratorClass, DecoratorAnnotation);\r\n\r\n    if (!aux.length) {\r\n        throw new Error(\"Decorator annotation not found\");\r\n    }\r\n\r\n    var annotation = <DecoratorAnnotation> mergeAnnotations(create(DecoratorAnnotation), ...aux);\r\n    name = name != null ? name : annotation.name;\r\n\r\n    if (!isFunction(decoratorClass.prototype.decorate)) {\r\n        throw new Error(`Decorator \"${name}\" does not implement a decorate method`);\r\n    }\r\n\r\n    ngModule.config(injectable(['$provide'], function($provide: ng.auto.IProvideService) {\r\n        $provide.decorator(name, injectable(['$delegate', '$injector'], function($delegate: any, $injector: ng.auto.IInjectorService) {\r\n\r\n            var instance = <Decorator> $injector.instantiate(decoratorClass, {\r\n                $delegate: $delegate\r\n            });\r\n\r\n            return $injector.invoke(instance.decorate, instance, {\r\n                $delegate: $delegate\r\n            });\r\n\r\n        }));\r\n    }));\r\n\r\n    return ngModule;\r\n\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert';\r\n\r\nimport {Inject, injectable, isAnnotated} from './di'\r\nimport {makeDecorator, Map, setIfInterface, create, isFunction, isDefined} from './utils'\r\nimport {FunctionReturningString, FunctionReturningNothing, parseSelector, SelectorType} from './utils'\r\nimport {hasOwnAnnotation, getAnnotations, mergeAnnotations, addAnnotation} from './reflection'\r\n\r\n\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport const enum Transclusion {\r\n    Content,\r\n    Element\r\n}\r\nconst TRANSCLUSION_MAP = [true, 'element'];\r\n\r\ntype PrePost = {\r\n    pre: FunctionReturningNothing,\r\n    post: FunctionReturningNothing\r\n};\r\ntype CompileFunction = (...args: any[]) => FunctionReturningNothing;\r\ntype FunctionReturningPrePost = (...args: any[]) => PrePost;\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport interface CommonDirectiveOptions {\r\n\r\n    // name = element\r\n    // .name = class\r\n    // [name] = attribute\r\n    // //name = comment (unavailable)\r\n    selector: string;\r\n\r\n    // infered from the selector\r\n    //restrict?: Restriction|Restriction[]; // [Restriction.Element, Restriction.Element]\r\n\r\n    scope?: boolean|Map<string>;\r\n    bindToController?: boolean;\r\n\r\n    require?: string[];\r\n\r\n    // needs mapping\r\n    transclude?: Transclusion; // Transclusion.Content\r\n\r\n    compile?: CompileFunction|FunctionReturningPrePost;\r\n    link?: FunctionReturningNothing|PrePost|string;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class CommonDirectiveAnnotation {\r\n\r\n    selector: string = void 0;\r\n    scope: boolean|Map<string> = void 0;\r\n    bindToController: boolean = void 0;\r\n    require: string[] = void 0;\r\n    transclude: Transclusion = void 0;\r\n    compile: CompileFunction|FunctionReturningPrePost = void 0;\r\n    link: FunctionReturningNothing|PrePost|string = void 0;\r\n\r\n    constructor(options: CommonDirectiveOptions) {\r\n        // TODO debug only?\r\n        assert.notNull(options, 'options must not be null');\r\n        assert.notEmpty(options.selector, 'selector must not be null or empty');\r\n\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport interface DirectiveOptions extends CommonDirectiveOptions {\r\n\r\n    priority?: number;\r\n    terminal?: boolean;\r\n    multiElement?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class DirectiveAnnotation extends CommonDirectiveAnnotation {\r\n\r\n    multiElement: boolean = void 0;\r\n    priority: number = void 0;\r\n    terminal: boolean = void 0;\r\n\r\n    constructor(options: DirectiveOptions) {\r\n        super(<any> options); // TODO WTF needs casting?\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport interface Directive {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface DirectiveConstructor extends Function {\r\n    new (): Directive;\r\n}\r\n\r\ntype DirectiveDecorator = (options: DirectiveOptions) => ClassDecorator;\r\n\r\n/**\r\n *\r\n */\r\nexport var Directive = <DirectiveDecorator> makeDecorator(DirectiveAnnotation);\r\n\r\n\r\n// ---\r\n\r\n// @Bind\r\n\r\nexport class BindAnnotation {\r\n    constructor(\r\n        public propertyKey: string,\r\n        public binding: string) {\r\n    }\r\n}\r\n\r\nfunction bindDecorator(binding: string): PropertyDecorator {\r\n\r\n    return function(target: any, propertyKey: string) {\r\n\r\n        var newBind = new BindAnnotation(propertyKey, binding);\r\n        addAnnotation(target.constructor, newBind);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport var Bind = bindDecorator;\r\n\r\n// ---\r\n\r\n\r\n\r\nexport function publishDirective(directiveClass: DirectiveConstructor, ngModule: ng.IModule, selector?: string): ng.IModule {\r\n\r\n    // TODO debug only?\r\n    assert(hasOwnAnnotation(directiveClass, DirectiveAnnotation), 'Did you decorate it with @Directive?');\r\n\r\n    var {name, factory} = makeDirectiveFactory(directiveClass);\r\n\r\n    // TODO consider provided selector, if any\r\n\r\n    ngModule.directive(name, factory);\r\n\r\n    return ngModule;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\n//export interface DirectiveDefinitionObject extends ng.IDirective { // bindToController incompatible with current angular.d.ts\r\nexport interface DirectiveDefinitionObject {\r\n    multiElement?: boolean;\r\n    compile?: CompileFunction|FunctionReturningPrePost;\r\n    controller?: any;\r\n    bindToController?: boolean|Map<string>;\r\n    link?: FunctionReturningNothing|PrePost|string;\r\n    name?: string;\r\n    priority?: number;\r\n    require?: string[];\r\n    restrict?: string;\r\n    scope?: boolean|Map<string>;\r\n    terminal?: boolean;\r\n    transclude?: boolean|string;\r\n\r\n    semanticName: string;\r\n    imperativeName: string;\r\n}\r\n\r\nconst RESTRICTION_MAP: Map<string> = {\r\n    [SelectorType.Attribute]: 'A',\r\n    [SelectorType.Tag]: 'E',\r\n    [SelectorType.Class]: 'C'\r\n    //[SelectorType.Comment]: 'M'\r\n};\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function makeCommonDO(directiveClass: DirectiveConstructor): DirectiveDefinitionObject {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(directiveClass, CommonDirectiveAnnotation).reverse();\r\n    var aux = getAnnotations(directiveClass, CommonDirectiveAnnotation);\r\n    var annotation = <CommonDirectiveAnnotation> {/*no defaults*/};\r\n    mergeAnnotations(annotation, ...aux);\r\n\r\n    var selectorData = parseSelector(annotation.selector);\r\n\r\n    var ddo: DirectiveDefinitionObject = {\r\n        semanticName: selectorData.semanticeName,\r\n        imperativeName: selectorData.imperativeName,\r\n        restrict: RESTRICTION_MAP[selectorData.type],\r\n        controller: directiveClass\r\n    };\r\n\r\n    if (isDefined(annotation.transclude)) ddo.transclude = TRANSCLUSION_MAP[annotation.transclude];\r\n    if (isDefined(annotation.compile)) ddo.compile = annotation.compile;\r\n    if (isDefined(annotation.link)) ddo.link = annotation.link;\r\n\r\n    // scope\r\n    if (isDefined(annotation.scope)) ddo.scope = annotation.scope;\r\n\r\n    // bindToController\r\n    // let bindAnnotations = <BindAnnotation[]> getAnnotations(directiveClass, BindAnnotation).reverse();\r\n    let bindAnnotations = <BindAnnotation[]> getAnnotations(directiveClass, BindAnnotation);\r\n    if (bindAnnotations.length) {\r\n        let map: Map<string> = {};\r\n        for (let bind of bindAnnotations) {\r\n            map[bind.propertyKey] = bind.binding;\r\n        }\r\n        ddo.bindToController = map;\r\n    }\r\n    else if (isDefined(annotation.bindToController)) ddo.bindToController = annotation.bindToController;\r\n\r\n    return ddo;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function makeDirectiveDO(directiveClass: DirectiveConstructor): DirectiveDefinitionObject {\r\n\r\n    var ddo = makeCommonDO(<DirectiveConstructor> directiveClass);\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(directiveClass, DirectiveAnnotation).reverse();\r\n    var aux = getAnnotations(directiveClass, DirectiveAnnotation);\r\n    var annotation = <DirectiveAnnotation> {/*no defaults*/};\r\n    mergeAnnotations(annotation, ...aux);\r\n\r\n    if (isDefined(annotation.multiElement)) ddo.multiElement = annotation.multiElement;\r\n    if (isDefined(annotation.priority)) ddo.priority = annotation.priority;\r\n    if (isDefined(annotation.terminal)) ddo.terminal = annotation.terminal;\r\n\r\n    return ddo;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function inFactory(ddo: DirectiveDefinitionObject, $injector: ng.auto.IInjectorService): DirectiveDefinitionObject {\r\n\r\n    if (isFunction(ddo.compile)) {\r\n        ddo.compile = !isAnnotated(ddo.compile) ? ddo.compile :\r\n            (tElement: any, tAttrs: any, transclude: any) => {\r\n                return $injector.invoke(ddo.compile, null, {\r\n                    $element: tElement,\r\n                    $attrs: tAttrs,\r\n                    $transclude: transclude\r\n                });\r\n            }\r\n    }\r\n\r\n    if (typeof ddo.link === \"string\") {\r\n        let linkFn = ddo.controller.prototype[<string> ddo.link];\r\n        if (!isAnnotated(linkFn)) {\r\n            ddo.link = function(scope: any, iElement: any, iAttrs: any, controllers: any, transclude: any) {\r\n                let controller = angular.isArray(controllers) ? controllers[controllers.lenght - 1] : controllers;\r\n                linkFn.apply(controller || null, [].slice.call(arguments, 0));\r\n            }\r\n        }\r\n        else {\r\n            ddo.link = function(scope: any, iElement: any, iAttrs: any, controllers: any, transclude: any) {\r\n                let controller = angular.isArray(controllers) ? controllers[controllers.lenght - 1] : controllers;\r\n                return $injector.invoke(<any> linkFn, controller, {\r\n                    $scope: scope,\r\n                    $element: iElement,\r\n                    $attrs: iAttrs,\r\n                    $controller: controllers,   // TODO deprecated\r\n                    $controllers: controllers,\r\n                    $transclude: transclude\r\n                });\r\n            }\r\n        }\r\n    }\r\n    else if (isAnnotated(<any> ddo.link)) {\r\n        let linkFn = ddo.link;\r\n        ddo.link = (scope: any, iElement: any, iAttrs: any, controllers: any, transclude: any) => {\r\n            return $injector.invoke(<any> linkFn, null, {\r\n                $scope: scope,\r\n                $element: iElement,\r\n                $attrs: iAttrs,\r\n                $controller: controllers,   // TODO deprecated\r\n                $controllers: controllers,\r\n                $transclude: transclude\r\n            });\r\n        }\r\n    }\r\n\r\n    return ddo;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function makeDirectiveFactory(directiveClass: DirectiveConstructor) {\r\n\r\n    var ddo = makeDirectiveDO(directiveClass);\r\n\r\n    var factory = injectable(['$injector'], function directiveFactory($injector: ng.auto.IInjectorService): ng.IDirective {\r\n        return <any> inFactory(ddo, $injector);\r\n    });\r\n\r\n    return {\r\n        name: ddo.imperativeName,\r\n        factory: factory\r\n    };\r\n\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\n\r\n\r\n/**\r\n * Annotates a function with information of dependencies to be injected as parameters\r\n *\r\n * * Overrides previous annotation (logs warning)\r\n * * All parameters should be annotated (logs warning)\r\n * * Dependencies will be injected in the order they are specified in the dependencies parameter\r\n *\r\n * @param dependencies Names of the dependencies to be injected, in order\r\n * @returns The provided function\r\n */\r\nexport function injectable<T extends Function>(dependencies: string[], func: T): T {\r\n\r\n\t// TODO warn about overriding annotation\r\n\t// TODO warn about mismatching number of parameters and dependencies\r\n\r\n    func.$inject = dependencies.slice();\r\n\treturn func;\r\n\r\n}\r\n\r\n/**\r\n * Binds a function to a context and preservers it's annotated dependencies\r\n *\r\n * @param func The function to be bound\r\n * @param context The object to which bind the funcion\r\n * @returns A bound function\r\n */\r\nexport function safeBind<T extends Function>(func: T, context: any): T {\r\n\r\n    var bound = func.bind(context);\r\n\r\n\tif (func.$inject) {\r\n\t\tbound.$inject = func.$inject;\r\n\t}\r\n\r\n    return bound;\r\n\r\n}\r\n\r\n/**\r\n * A decorator to annotate method parameterss with dependencies to be injected\r\n *\r\n * * Overrides previous annotation (logs warning)\r\n * * All parameters should be annotated (logs warning)\r\n *\r\n * @param dependency The name of the dependency to be injected\r\n */\r\nexport function Inject(dependency: string): ParameterDecorator {\r\n\r\n\treturn (target: Function, propertyKey: string|symbol, parameterIndex: number) => {\r\n\r\n\t\t// TODO warn about overriding annotation\r\n\t\t// TODO warn about mismatching number of parameters and dependencies\r\n\r\n        // If propertyKey is defined, we're decorating a parameter of a method\r\n        // If not, we're decorating a parameter of class constructor\r\n\t\ttarget = (typeof propertyKey == 'undefined') ? target : target = (<any>target)[propertyKey];\r\n\r\n\t\t// TODO what about missing elements in the $inject array?\r\n\t\t// ie. annotated the 2nd but not the 1st parameter\r\n\r\n\t\tvar $inject: string[] = (target.$inject = target.$inject || []);\r\n\t\t$inject[parameterIndex] = dependency;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Inspects a function for dependency injection annotation\r\n *\r\n * @param func The object to be inspected\r\n */\r\nexport function isAnnotated(func: Function): boolean {\r\n\r\n\treturn func && func.hasOwnProperty('$inject');\r\n\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\nimport {getAnnotations, mergeAnnotations} from './reflection'\r\nimport {makeDecorator, setIfInterface, create, isFunction} from './utils'\r\nimport {injectable} from './di'\r\n\r\n\r\n\r\n/**\r\n * Options available when decorating a class as a filter\r\n */\r\nexport interface FilterOptions {\r\n\r\n    /**\r\n     * The name with which the filter will be invoked in templates\r\n     *\r\n     * Must be valid angular Expressions identifiers, such as \"uppercase\",\r\n     * \"upperCase\" or \"upper_case\". Special charaters such as hyphens and dots\r\n     * are not allowed.\r\n     *\r\n     * To get a hold of the filter delegate through dependency injection,\r\n     * ask the injector for this name plus the suffix \"Filter\".\r\n     */\r\n    name: string;\r\n\r\n    stateful?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class FilterAnnotation {\r\n\r\n    name: string = void 0;\r\n    stateful: boolean = void 0;\r\n\r\n    constructor(options: FilterOptions) {\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Interface filter classes MUST implement\r\n *\r\n * * It's a singleton, instantiated the first time it is needed\r\n * * The constructor can receive dependency injections\r\n * * When asked for, what is provided is actually the method filter() bound the it's instance\r\n */\r\nexport interface Filter {\r\n\r\n    /**\r\n     * The method that does the actual filtering\r\n     *\r\n     * When asked for, what is provided is actually this method\r\n     * bound the it's instance\r\n     *\r\n     * * Cannot receive dependency injections (use the constructor)\r\n     */\r\n    filter(input: any, ...rest: any[]): any;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface FilterConstructor extends Function {\r\n    new (...args: any[]): Filter;\r\n    prototype: Filter;\r\n}\r\n\r\ntype DecoratorSignature = (options: FilterOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a filter\r\n */\r\nexport var Filter = <DecoratorSignature> makeDecorator(FilterAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function registerFilter(filterClass: FilterConstructor, ngModule: ng.IModule) {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(filterClass, FilterAnnotation).reverse();\r\n    var aux = getAnnotations(filterClass, FilterAnnotation);\r\n\r\n    if (!aux.length) {\r\n        throw new Error(\"Filter annotation not found\");\r\n    }\r\n\r\n    var notes = mergeAnnotations<FilterAnnotation>(create(FilterAnnotation), ...aux);\r\n\r\n    if (!isFunction(filterClass.prototype.filter)) {\r\n        throw new Error(`Filter \"${notes.name}\" does not implement a filter method`);\r\n    }\r\n\r\n    ngModule.filter(notes.name, injectable(['$injector'], function($injector: ng.auto.IInjectorService) {\r\n        var filterSingleton = <Filter> $injector.instantiate(filterClass);\r\n        var boundFilterMethod = filterSingleton.filter.bind(filterSingleton);\r\n\r\n        if (notes.stateful) {\r\n            boundFilterMethod.$stateful = true;\r\n        }\r\n\r\n        return boundFilterMethod;\r\n    }));\r\n\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert'\r\nimport {getAnnotations, hasAnnotation, mergeAnnotations, Reflect} from './reflection'\r\nimport {makeDecorator, setIfInterface, FunctionReturningNothing} from './utils'\r\nimport {safeBind} from './di'\r\nimport {create, isString, isFunction, isArray} from './utils'\r\nimport {ValueWrapper, publishValue} from './value'\r\nimport {ConstantWrapper, publishConstant} from './constant'\r\nimport {FilterAnnotation, registerFilter} from './filter'\r\nimport {AnimationAnnotation, registerAnimation} from './animation'\r\nimport {ServiceAnnotation, publishService} from './service'\r\nimport {DecoratorAnnotation, publishDecorator} from './decorator'\r\nimport {DirectiveAnnotation, publishDirective} from './directive'\r\nimport {ComponentAnnotation, publishComponent} from './component'\r\nimport {publishStates} from './ui/router/states'\r\nimport {registerRoutes} from './ui/router/routes'\r\n\r\n\r\n\r\nconst PUBLISHED_ANNOTATION_KEY = 'tng:module-published-as';\r\n\r\nexport type Dependency = string|Function|ConstantWrapper<any>|ValueWrapper<any>;\r\nexport type DependenciesArray = (Dependency|Dependency[])[];\r\n\r\n/**\r\n * Options available when decorating a class as a module\r\n * TODO document\r\n */\r\nexport interface ModuleOptions {\r\n\tname?: string;\r\n\tdependencies?: DependenciesArray;\r\n\tconfig?: Function|Function[];\r\n\trun?: Function|Function[];\r\n\r\n    // modules?: (string|Function)[];\r\n\t// components?: Function[];\r\n\t// services?: Function[];\r\n\t// filters?: Function[];\r\n\t// decorators?: Function[];\r\n\t// animations?: Function[];\r\n\t// values?: Function[];\r\n\t// constants?: Function[];\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ModuleAnnotation {\r\n\r\n\tname: string = void 0;\r\n\tdependencies: DependenciesArray = void 0;\r\n\tconfig: Function|Function[] = void 0;\r\n\trun: Function|Function[] = void 0;\r\n\r\n\t// modules: (string|Function)[] = void 0;\r\n\t// components: Function[] = void 0;\r\n\t// services: Function[] = void 0;\r\n\t// filters: Function[] = void 0;\r\n\t// decorators: Function[] = void 0;\r\n\t// animations: Function[] = void 0;\r\n\t// values: Function[] = void 0;\r\n\t// constants: Function[] = void 0;\r\n\r\n\tconstructor(options?: ModuleOptions) {\r\n        setIfInterface(this, options);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Interface modules MAY implement\r\n * TODO document\r\n */\r\nexport interface Module {\r\n\tonConfig?: FunctionReturningNothing;\r\n\tonRun?: FunctionReturningNothing;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ModuleConstructor extends Function {\r\n\tnew (): Module;\r\n\tnew (ngModule: ng.IModule): Module;\r\n}\r\n\r\ntype ModuleSignature = (options?: ModuleOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a module\r\n */\r\nexport var Module = <ModuleSignature> makeDecorator(ModuleAnnotation);\r\n\r\nvar moduleCount = 0;\r\n\r\nfunction getNewModuleName() {\r\n\r\n    return `tng_generated_module#${++moduleCount}`;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function publishModule(moduleClass: ModuleConstructor, name?: string,\r\n    dependencies?: DependenciesArray, constructorParameters?: any[]): ng.IModule {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(moduleClass, ModuleAnnotation).reverse();\r\n    var aux = getAnnotations(moduleClass, ModuleAnnotation);\r\n\r\n    // TODO debug only?\r\n    assert.notEmpty(aux, 'Missing @Module decoration');\r\n\r\n    // Has this module already been published?\r\n    var publishedAs: string;\r\n    if (publishedAs = Reflect.getOwnMetadata(PUBLISHED_ANNOTATION_KEY, moduleClass)) {\r\n        return angular.module(publishedAs);\r\n    }\r\n\r\n    var annotation = <ModuleAnnotation> mergeAnnotations(Object.create(null), ...aux);\r\n\r\n    var constants: any[] = [];\r\n    var values: any[] = [];\r\n    var services: any[] = [];\r\n    var decorators: any[] = [];\r\n    var filters: any[] = [];\r\n    var animations: any[] = [];\r\n    var components: any[] = [];\r\n    var directives: any[] = [];\r\n    var modules: any[] = [];\r\n\r\n    // TODO optimize this.. too much reflection queries\r\n    function processDependency(dep: Dependency|Dependency[]): void {\r\n\r\n        // Regular angular module\r\n        if (isString(dep)) {\r\n            modules.push(dep);\r\n        }\r\n        else if (isArray(dep)) {\r\n            for (let _dep of <Dependency[]> dep) {\r\n                processDependency(_dep);\r\n            }\r\n        }\r\n        else if (hasAnnotation(dep, ModuleAnnotation)) {\r\n            // If the module has alrady been published, we just push it's name\r\n            // if (publishedAs = Reflect.getOwnMetadata(PUBLISHED_ANNOTATION_KEY, dep)) {\r\n                // modules.push(publishedAs);\r\n            // }\r\n            // else {\r\n                modules.push(publishModule(<ModuleConstructor> dep).name);\r\n            // }\r\n        }\r\n        else if (dep instanceof ConstantWrapper) {\r\n            constants.push(dep);\r\n        }\r\n        else if (dep instanceof ValueWrapper) {\r\n            values.push(dep);\r\n        }\r\n        else if (hasAnnotation(dep, ServiceAnnotation)) {\r\n            services.push(dep);\r\n        }\r\n        else if (hasAnnotation(dep, DecoratorAnnotation)) {\r\n            decorators.push(dep);\r\n        }\r\n        else if (hasAnnotation(dep, FilterAnnotation)) {\r\n            filters.push(dep);\r\n        }\r\n        else if (hasAnnotation(dep, AnimationAnnotation)) {\r\n            animations.push(dep);\r\n        }\r\n        else if (hasAnnotation(dep, ComponentAnnotation)) {\r\n            components.push(dep);\r\n        }\r\n        else if (hasAnnotation(dep, DirectiveAnnotation)) {\r\n            directives.push(dep);\r\n        }\r\n        else {\r\n            // TODO WTF?\r\n            throw new Error(`I don't recognize what kind of dependency this is: ${dep}`);\r\n        }\r\n\r\n    }\r\n\r\n    let allDeps = [].concat(\r\n        (annotation.dependencies || []),\r\n        (dependencies || [])\r\n    );\r\n\r\n    allDeps.forEach((dep) => processDependency(dep));\r\n\r\n    name = name || annotation.name || getNewModuleName();\r\n\r\n    // Register the module on Angular\r\n    var ngModule = angular.module(name, modules);\r\n\r\n    // Instantiate the module\r\n    // var module = new moduleClass(ngModule);\r\n    let module = Object.create(moduleClass.prototype);\r\n    moduleClass.apply(module, [ngModule].concat(constructorParameters || []))\r\n\r\n    // Register config functions\r\n    var configFns: Function[] = [];\r\n    if (isFunction(module.onConfig)) configFns.push(safeBind(module.onConfig, module));\r\n    if (annotation.config) {\r\n        if (isFunction(annotation.config)) configFns.push(<Function> annotation.config);\r\n        else if (isArray(annotation.config)) configFns = configFns.concat(<Function[]> annotation.config)\r\n    }\r\n    for (let fn of configFns) ngModule.config(fn);\r\n\r\n    // Register initialization functions\r\n    var runFns: Function[] = [];\r\n    if (isFunction(module.onRun)) runFns.push(safeBind(module.onRun, module));\r\n    if (annotation.run) {\r\n        if (isFunction(annotation.run)) runFns.push(<Function> annotation.run);\r\n        else if (isArray(annotation.run)) runFns = runFns.concat(<Function[]> annotation.run)\r\n    }\r\n    for (let fn of runFns) ngModule.run(fn);\r\n\r\n    publishStates(moduleClass, ngModule);\r\n    registerRoutes(moduleClass, ngModule);\r\n\r\n    for (let item of values) publishValue(item, ngModule);\r\n    for (let item of constants) publishConstant(item, ngModule);\r\n    for (let item of filters) registerFilter(item, ngModule);\r\n    for (let item of animations) registerAnimation(item, ngModule);\r\n    for (let item of services) publishService(item, ngModule);\r\n    for (let item of decorators) publishDecorator(item, ngModule);\r\n    for (let item of components) publishComponent(item, ngModule);\r\n    for (let item of directives) publishDirective(item, ngModule);\r\n\r\n    Reflect.defineMetadata(PUBLISHED_ANNOTATION_KEY, name, moduleClass);\r\n\r\n    return ngModule;\r\n\r\n}","/// <reference path=\"./_references\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert';\r\n\r\nimport {getAnnotations, mergeAnnotations} from './reflection';\r\nimport {makeDecorator, setIfInterface, isFunction} from './utils';\r\n\r\n/**\r\n * Options available when decorating a class as a service\r\n */\r\nexport interface ServiceOptions {\r\n    /**\r\n     * The name the service will be made available for injection\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * An optional provider object or provider factory\r\n     */\r\n    provider?: ng.IServiceProvider|ng.IServiceProviderFactory;\r\n\r\n    /**\r\n     * An optional service factory\r\n     */\r\n    factory?: Function;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ServiceAnnotation {\r\n\r\n    name: string = void 0;\r\n    provider: ng.IServiceProvider|ng.IServiceProviderFactory = void 0;\r\n    factory: Function = void 0;\r\n\r\n    constructor(options: ServiceOptions) {\r\n        // TODO debug only?\r\n        assert.notNull(options, 'options must not be null');\r\n        assert.notEmpty(options.name, 'name cannot be null or empty');\r\n\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Interface services may implement\r\n */\r\nexport interface Service {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ServiceConstructor extends Function {\r\n    new (...args: any[]): Service;\r\n    prototype: Service;\r\n}\r\n\r\ntype DecoratorSignature = (options: ServiceOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a service\r\n */\r\nexport var Service = <DecoratorSignature> makeDecorator(ServiceAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function publishService(serviceClass: ServiceConstructor, ngModule: ng.IModule, name?: string): ng.IModule {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(serviceClass, ServiceAnnotation).reverse();\r\n    var aux = getAnnotations(serviceClass, ServiceAnnotation);\r\n\r\n    // TODO debug only?\r\n    assert.notEmpty(aux, 'Did you decorate it with @Service?');\r\n\r\n    var annotation = <ServiceAnnotation> {/*no defalts*/};\r\n    mergeAnnotations(annotation, ...aux);\r\n\r\n    var name = name != null ? name : annotation.name;\r\n\r\n    if (annotation.provider) {\r\n        ngModule.provider(name, <any> annotation.provider);\r\n    }\r\n    else if (annotation.factory) {\r\n        ngModule.factory(name, annotation.factory);\r\n    }\r\n    else {\r\n        ngModule.service(name, serviceClass);\r\n    }\r\n\r\n    return ngModule;\r\n\r\n}","/// <reference path=\"../../_references.ts\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from '../../assert'\r\n\r\nimport {Inject, injectable} from '../../di'\r\nimport {makeDecorator, create, isDefined, isString, isFunction, Map, isArray, forEach, setIfInterface} from '../../utils'\r\nimport {hasAnnotation, getAnnotations, mergeAnnotations} from '../../reflection'\r\nimport {ModalViewAnnotation, MODAL_BACKDROP_MAP} from './modal-view'\r\n\r\nimport IModalServiceInstance = ng.ui.bootstrap.IModalServiceInstance\r\nimport IModalService = ng.ui.bootstrap.IModalService\r\nimport IModalSettings = ng.ui.bootstrap.IModalSettings\r\nimport IModalStackService = ng.ui.bootstrap.IModalStackService\r\nimport IModalScope = ng.ui.bootstrap.IModalScope\r\n\r\nexport {ModalView, ModalBackdrop, ModalViewOptions} from './modal-view'\r\n\r\n\r\n\r\nexport interface ModalOptions {\r\n\r\n    scope?: ng.IScope|IModalScope|{(...args: any[]): ng.IScope|IModalScope};\r\n    bindToController?: boolean;\r\n    // resolve?: Map<string|Function>;\r\n    resolve?: Map<Function>;\r\n    keyboard?: boolean;\r\n    dismissAll?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ModalAnnotation {\r\n\r\n    scope: ng.IScope|IModalScope|{(...args: any[]): ng.IScope|IModalScope} = void 0;\r\n    bindToController: boolean = true; // defautls to true; differs from the original\r\n    // resolve: Map<string|Function> = void 0; // It doesn't really support strings, as stated in the docs\r\n    resolve: Map<Function> = void 0;\r\n    keyboard: boolean = void 0;\r\n    dismissAll: boolean = void 0;\r\n\r\n    constructor(options?: ModalOptions) {\r\n\r\n        setIfInterface(this, options);\r\n\r\n    }\r\n\r\n}\r\n\r\ntype ModalDecorator = (options?: ModalOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a modal controller\r\n */\r\nexport var Modal = <ModalDecorator> makeDecorator(ModalAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ModalHandler {\r\n\r\n    private instance: IModalServiceInstance = null;\r\n\r\n    constructor(\r\n        private modalNotes: ModalAnnotation,\r\n        private viewNotes: ModalViewAnnotation,\r\n        private settings: IModalSettings) {\r\n    }\r\n\r\n    open(\r\n        @Inject('$injector') $injector: ng.auto.IInjectorService,\r\n        @Inject('$modal') $modal: IModalService,\r\n        @Inject('$modalStack') $modalStack: IModalStackService): IModalServiceInstance {\r\n\r\n        var view = this.viewNotes;\r\n        var modal = this.modalNotes;\r\n        var calltimeSettings: IModalSettings = angular.copy(this.settings);\r\n\r\n        if (modal.dismissAll) {\r\n            $modalStack.dismissAll();\r\n        }\r\n\r\n        if (isDefined(modal.scope)) {\r\n            calltimeSettings.scope = isFunction(modal.scope) ?\r\n                $injector.invoke(<any> modal.scope) :\r\n                    modal.scope;\r\n        }\r\n\r\n        if (isDefined(view.template)) {\r\n            calltimeSettings.template = isFunction(view.template) ?\r\n                $injector.invoke(<any> view.template) :\r\n                    <string> view.template;\r\n        }\r\n\r\n        if (isDefined(view.templateUrl)) {\r\n            calltimeSettings.templateUrl = isFunction(view.templateUrl) ?\r\n                $injector.invoke(<any> view.templateUrl) :\r\n                    view.templateUrl;\r\n        }\r\n\r\n        this.instance = $modal.open(calltimeSettings);\r\n        return this.instance;\r\n\r\n    }\r\n\r\n    dismiss(@Inject('$modalStack') $modalStack: IModalStackService) {\r\n\r\n        if (this.modalNotes.dismissAll) {\r\n            $modalStack.dismissAll();\r\n        }\r\n        else {\r\n            this.instance.dismiss();\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function getModalHandler(modalClass: Function, scope?: ng.IScope): ModalHandler {\r\n\r\n    var modalNotes = getAnnotations(modalClass, ModalAnnotation);\r\n    var viewNotes = getAnnotations(modalClass, ModalViewAnnotation);\r\n\r\n    // TODO debug only?\r\n    assert(modalNotes, 'Missing @Modal decoration');\r\n    assert(viewNotes, 'Missing @ModalView decoration');\r\n\r\n    var settings: ng.ui.bootstrap.IModalSettings = {\r\n        controller: modalClass\r\n    };\r\n\r\n    var modal = <ModalAnnotation> {/*no defaults*/};\r\n    mergeAnnotations(modal, ...modalNotes);\r\n\r\n    // Deferred to be handled by ModalHandler to allow DI\r\n    // if (isDefined(modal.scope)) {\r\n    //     settings.scope = modal.scope;\r\n    // }\r\n    if (scope) {\r\n        modal.scope = scope;\r\n    }\r\n\r\n    if (isDefined(modal.bindToController)) {\r\n        settings.bindToController = modal.bindToController;\r\n    }\r\n\r\n    if (isDefined(modal.resolve)) {\r\n        settings.resolve = modal.resolve;\r\n    }\r\n\r\n    if (isDefined(modal.keyboard)) {\r\n        settings.keyboard = modal.keyboard;\r\n    }\r\n\r\n    var view = <ModalViewAnnotation> {/*no defaults*/};\r\n    mergeAnnotations(view, ...viewNotes);\r\n\r\n    if (isDefined(view.animation)) {\r\n        settings.animation = view.animation;\r\n    }\r\n\r\n    if (isDefined(view.backdrop)) {\r\n        settings.backdrop = MODAL_BACKDROP_MAP[view.backdrop];\r\n    }\r\n\r\n    if (isDefined(view.backdropClass)) {\r\n        settings.backdropClass = view.backdropClass;\r\n    }\r\n\r\n    if (isDefined(view.keyboard)) {\r\n        settings.keyboard = view.keyboard;\r\n    }\r\n\r\n    if (isDefined(view.windowClass)) {\r\n        settings.windowClass = view.windowClass;\r\n    }\r\n\r\n    if (isDefined(view.windowTemplateUrl)) {\r\n        settings.windowTemplateUrl = view.windowTemplateUrl;\r\n    }\r\n\r\n    if (isDefined(view.size)) {\r\n        settings.size = view.size;\r\n    }\r\n\r\n    if (isDefined(view.controllerAs)) {\r\n        settings.controllerAs = view.controllerAs;\r\n    }\r\n\r\n    // Deferred to be handled by ModalHandler to allow DI\r\n    // if (isDefined(view.templateUrl)) {\r\n    //     settings.templateUrl = view.templateUrl;\r\n    // }\r\n\r\n    // Deferred to be handled by ModalHandler to allow DI\r\n    // if (isDefined(view.template)) {\r\n    //     settings.template = <string> view.template;\r\n    // }\r\n\r\n    // TODO styleUrl\r\n\r\n    return new ModalHandler(modal, view, settings);\r\n\r\n}","/// <reference path=\"../../_references.ts\" />\r\n\r\nimport {Module} from '../../module'\r\nimport {ModalServiceDecorator} from './modal-service-decorator'\r\n\r\n// export {Modal, ModalOptions} from './modal'\r\n// export {ModalView, ModalBackdrop, ModalViewOptions} from './modal-view'\r\n\r\n\r\n\r\n@Module({\r\n    name: 'tng.ui.bootstrap',\r\n    dependencies: [\r\n        ModalServiceDecorator\r\n    ]\r\n})\r\nexport class TngUiBootstrapModule {\r\n\r\n}","/// <reference path=\"../../_references.ts\" />\r\n\r\nimport {injectable} from '../../di'\r\nimport {makeDecorator, create, Map, forEach} from '../../utils'\r\nimport {getAnnotations, mergeAnnotations} from '../../reflection'\r\n\r\n\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class RoutesAnnotation {\r\n\r\n    routes: Map<string|Function>;\r\n\r\n    constructor(routes: Map<string|Function>) {\r\n        this.routes = routes;\r\n    }\r\n\r\n}\r\n\r\ntype RoutesDecorator = (routes: Map<string|Function>) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class with states\r\n */\r\nexport var Routes = <RoutesDecorator> makeDecorator(RoutesAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function registerRoutes(moduleController: Function, ngModule: ng.IModule) {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var notes = <RoutesAnnotation[]> getAnnotations(moduleController, RoutesAnnotation).reverse();\r\n    var notes = <RoutesAnnotation[]> getAnnotations(moduleController, RoutesAnnotation);\r\n\r\n    if (!notes.length) return;\r\n\r\n    var routes = {};\r\n    notes.forEach((note) => mergeAnnotations(routes, note.routes));\r\n\r\n    ngModule.config(injectable(['$urlRouterProvider'], ($urlRouterProvider: ng.ui.IUrlRouterProvider) => {\r\n\r\n        forEach(routes, (handler, route) => {\r\n            if (route === '?') {\r\n                $urlRouterProvider.otherwise(handler);\r\n            }\r\n            else {\r\n                $urlRouterProvider.when(route, handler);\r\n            }\r\n        });\r\n\r\n    }));\r\n\r\n}","/// <reference path=\"../../_references.ts\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from '../../assert'\r\n\r\nimport {injectable, safeBind} from '../../di'\r\nimport {makeDecorator, create, isDefined, isString, isFunction, Map, isArray, forEach} from '../../utils'\r\nimport {getAnnotations, mergeAnnotations} from '../../reflection'\r\nimport {ViewAnnotation} from '../../view'\r\nimport {On, publishListeners} from './events'\r\nimport {getModalHandler} from '../bootstrap/modal'\r\n\r\nexport {View} from '../../view'\r\nexport {StateChangeEvent, ViewLoadEvent} from './events'\r\n\r\n\r\n\r\n/**\r\n * Options available when decorating an application controller with states\r\n * TODO document\r\n */\r\nexport interface StateConfig {\r\n\r\n    url: string;\r\n    abstract?: boolean;\r\n    view?: Function;\r\n    views?: {[outlet:string]: Function};\r\n    modal?: Function,\r\n    parent?: StateConfig|string;\r\n    reloadOnSearch?: boolean;\r\n    onEnter?: Function;\r\n\tonExit?: Function;\r\n    resolve?: Map<string|Function>;\r\n\r\n    // TODO\r\n    // params\r\n    // data\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface InternalStateConfig extends StateConfig {\r\n    name: string;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class StatesAnnotation {\r\n\r\n    states: Map<InternalStateConfig>;\r\n\r\n    constructor(states: Map<InternalStateConfig>) {\r\n\r\n        forEach(states, (state, name) => state.name = name);\r\n        this.states = states;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport interface StatesDecorator {\r\n    (states: Map<StateConfig>): ClassDecorator;\r\n    on: typeof On;\r\n}\r\n\r\n/**\r\n * A decorator to annotate a class with states\r\n */\r\nexport var States = <StatesDecorator> <any> makeDecorator(StatesAnnotation);\r\nStates.on = On;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function publishStates(moduleController: Function, ngModule: ng.IModule) {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations to ge them on the original order\r\n    // var statesAnnotation = <StatesAnnotation[]> getAnnotations(moduleController, StatesAnnotation).reverse();\r\n    var statesAnnotation = <StatesAnnotation[]> getAnnotations(moduleController, StatesAnnotation);\r\n\r\n    if (statesAnnotation.length) {\r\n        let states: ng.ui.IState[] = [];\r\n\r\n        // Translate each state from each annotation and stack them in an array\r\n        forEach(statesAnnotation, (note) =>\r\n            forEach(note.states, (state) =>\r\n                states.push(translateToUiState(state))));\r\n\r\n        ngModule.config(injectable(['$stateProvider'], ($stateProvider: ng.ui.IStateProvider) => {\r\n\r\n            for (let state of states) {\r\n                $stateProvider.state(state);\r\n            }\r\n\r\n        }));\r\n    }\r\n\r\n    publishListeners(moduleController, ngModule);\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nfunction translateToUiState(state: InternalStateConfig): ng.ui.IState {\r\n\r\n    var translatedState: ng.ui.IState = {};\r\n\r\n    if (isDefined(state.name)) translatedState.name = state.name;\r\n    if (isDefined(state.url)) translatedState.url = state.url;\r\n    if (isDefined(state.abstract)) translatedState.abstract = state.abstract;\r\n    if (isDefined(state.reloadOnSearch)) translatedState.reloadOnSearch = state.reloadOnSearch;\r\n    if (isDefined(state.onEnter)) translatedState.onEnter = state.onEnter;\r\n    if (isDefined(state.onExit)) translatedState.onExit = state.onExit;\r\n    if (isDefined(state.resolve)) translatedState.resolve = state.resolve;\r\n\r\n    // If the state has a parent, we force the string way\r\n    if (isDefined(state.parent)) {\r\n        let parent = state.parent;\r\n        if (!isString(parent)) {\r\n            parent = (<InternalStateConfig> parent).name;\r\n        }\r\n        // ng.ui.IState is missing parent\r\n        (<any> translatedState).parent = parent;\r\n    }\r\n\r\n    // if (state.view && state.views) {\r\n    //     throw Error('Cannot provide both view and views');\r\n    // }\r\n    // else if (!state.view && !state.views) {\r\n    //     throw Error('Must provide either view or views');\r\n    // }\r\n    // else {\r\n    if (state.view || state.views) {\r\n        let views = <{[key:string]:any}> {};\r\n\r\n        if (state.view) {\r\n            views[''] = extractViewData(state.view);\r\n        }\r\n        else {\r\n            forEach(state.views, (controller, outlet) => views[outlet] = extractViewData(controller))\r\n        }\r\n\r\n        translatedState.views = views;\r\n    }\r\n    else if (state.modal) {\r\n        let handler = getModalHandler(state.modal);\r\n\r\n        if (translatedState.onEnter) {\r\n            let onEnter = <Function> translatedState.onEnter;\r\n            translatedState.onEnter = injectable(['$injector'], function($injector: ng.auto.IInjectorService) {\r\n                $injector.invoke(onEnter);\r\n                $injector.invoke(handler.open, handler);\r\n            });\r\n        }\r\n        else {\r\n            translatedState.onEnter = safeBind(handler.open, handler);\r\n        }\r\n\r\n        if (translatedState.onExit) {\r\n            let onExit = <Function> translatedState.onExit;\r\n            translatedState.onExit = injectable(['$injector'], function($injector: ng.auto.IInjectorService) {\r\n                $injector.invoke(handler.dismiss, handler);\r\n                $injector.invoke(onExit);\r\n            });\r\n        }\r\n        else {\r\n            translatedState.onExit = safeBind(handler.dismiss, handler);\r\n        }\r\n    }\r\n\r\n    return translatedState;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nfunction extractViewData(viewModel: Function) {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // let notes = getAnnotations(viewModel, ViewAnnotation).reverse();\r\n    let notes = getAnnotations(viewModel, ViewAnnotation);\r\n\r\n    if (!notes.length) {\r\n        throw new Error('Template not defined');\r\n    }\r\n\r\n    let template = <ViewAnnotation> mergeAnnotations({}, ...notes);\r\n    let data:any = {};\r\n\r\n    data.controller = viewModel;\r\n    if (template.controllerAs) data.controllerAs = template.controllerAs;\r\n    if (template.template) data.template = template.template;\r\n    if (template.templateUrl) data.templateUrl = template.templateUrl;\r\n    // TODO style?\r\n\r\n    return data;\r\n\r\n}","/// <reference path=\"./_references\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert';\r\n\r\n/**\r\n * A framework envelope for values\r\n */\r\nexport class ValueWrapper<Type> {\r\n\r\n    constructor(private _name: string, private _value: Type) {\r\n    }\r\n    \r\n    get name() {\r\n        return this._name;\r\n    }\r\n    \r\n    get value() {\r\n        return this._value;\r\n    }\r\n    \r\n}\r\n\r\n/**\r\n * Wraps a value to be made available for dependency injection\r\n * \r\n * @param name The name of the value through which it will made available\r\n * @param value The value to be injected, as is\r\n * \r\n * @return A wrapper instance, to be used as a module dependency\r\n */\r\nexport function Value<Type>(name: string, value: Type): ValueWrapper<Type> {\r\n    \r\n    // TODO debug only?\r\n    assert.notEmpty(name, 'name cannot be null or empty');\r\n\r\n    return new ValueWrapper(name, value);\r\n\r\n}\r\n\r\nexport function publishValue<Type>(value: ValueWrapper<Type>, ngModule: ng.IModule, name?: string): ng.IModule {\r\n\r\n    // TODO debug only?\r\n    assert(value instanceof ValueWrapper, 'constant must be a ConstantWrapper');\r\n    \r\n    name = name != null ? name : value.name;\r\n    ngModule.value(name, value.value);\r\n    \r\n    return ngModule;\r\n\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert'\r\nimport {makeDecorator, FunctionReturningString, setIfInterface} from './utils'\r\n\r\n\r\n\r\n/**\r\n * Options available when decorating a class with view information\r\n * TODO document\r\n */\r\nexport interface ViewOptions {\r\n\r\n    /**\r\n     * TODO should it be required?\r\n     */\r\n    controllerAs: string;\r\n\r\n    /**\r\n     *\r\n     */\r\n    template?: string|FunctionReturningString;\r\n\r\n    /**\r\n     *\r\n     */\r\n    templateUrl?: string|FunctionReturningString;\r\n\r\n    /**\r\n     * TODO\r\n     */\r\n    styles?: string|string[];\r\n\r\n    /**\r\n     * TODO\r\n     */\r\n    // stylesUrls?: string[];\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ViewAnnotation {\r\n\r\n    template: string|FunctionReturningString = void 0;\r\n    templateUrl: string|FunctionReturningString = void 0;\r\n    styles: string|string[] = void 0;\r\n    // stylesUrls: string[] = void 0;\r\n    controllerAs: string = void 0;\r\n\r\n    constructor(options: ViewOptions) {\r\n        // TODO debug only?\r\n        assert.notNull(options, 'options must not be null');\r\n        assert.notEmpty(options.controllerAs, 'controllerAs cannot be null or empty');\r\n\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\ntype ViewDecorator = (options: ViewOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a controller with view information\r\n */\r\nexport var View = <ViewDecorator> makeDecorator(ViewAnnotation);","export {Inject, injectable} from './di'\r\nexport {Value} from './value';\r\nexport {Constant} from './constant';\r\nexport {Filter} from './filter';\r\nexport {Animation} from './animation';\r\nexport {Service} from './service';\r\nexport {Decorator} from './decorator';\r\nexport {View} from './view';\r\nexport {ComponentView, ComponentTemplateNamespace} from './component-view';\r\nexport {Directive, Transclusion, Bind} from './directive';\r\nexport {Component} from './component';\r\nexport {Module, publishModule} from './module';\r\nexport {Application} from './application';\r\nexport {bootstrap} from './bootstrap';"]}