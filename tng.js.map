{"version":3,"sources":["node_modules/browser-pack/_prelude.js","tng-source/assert.ts","tng-source/reflection.ts","tng-source/ui/bootstrap/modal-service-decorator.ts","tng-source/ui/bootstrap/modal-view.ts","tng-source/ui/router/events.ts","tng-source/utils.ts","tng-source/animation.ts","tng-source/application.ts","tng-source/bootstrap.ts","tng-source/component-view.ts","tng-source/component.ts","tng-source/constant.ts","tng-source/controller.ts","tng-source/decorator.ts","tng-source/directive.ts","tng-source/di.ts","tng-source/filter.ts","tng-source/module.ts","tng-source/service.ts","tng-source/ui/bootstrap/modal.ts","tng-source/ui/bootstrap/bootstrap.ts","tng-source/ui/router/routes.ts","tng-source/ui/router/states.ts","tng-source/value.ts","tng-source/view.ts","tng-source/tng.ts"],"names":[],"mappings":"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","file":"tng.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/// <reference path=\"./_references\" />\r\n\r\nimport {isString, isArray} from './utils';\r\n\r\nvar slice = Array.prototype.slice;\r\n\r\nexport interface AssertFunction extends Function {\r\n\t(test: any): void;\r\n\t(test: any, errorMessage: string): void;\r\n\t(test: any, error: Error): void;\r\n}\r\n\r\nexport interface NotNullFunction extends Function {\r\n\t(value: any): void;\r\n\t(value: any, errorMessage: string): void;\r\n\t(value: any, error: Error): void;\r\n}\r\n\r\nexport interface NotEmptyFunction extends Function {\r\n\t(value: string|Array<any>): void;\r\n\t(value: string|Array<any>, errorMessage: string): void;\r\n\t(value: string|Array<any>, error: Error): void;\r\n}\r\n\r\nexport interface assert extends AssertFunction {\t\r\n\tnotNull: NotNullFunction;\r\n\tnotEmpty: NotEmptyFunction;\r\n}\r\n\r\nexport function AssertionError(message?: string) {\r\n    // Error.apply(this, arguments);\r\n    this.name = 'AssertionError';\r\n    this.message = message != null ? message : '';\r\n}\r\n(function() {\r\n    function __() { this.constructor = AssertionError; }\r\n    __.prototype = Error.prototype;\r\n    AssertionError.prototype = new (<any>__)();\r\n})();\r\n\r\nfunction _assert(condition: boolean, errorOrMessage?: any): void {    \r\n    if (!condition) {\r\n        throw (errorOrMessage instanceof Error) ? errorOrMessage :\r\n            new (<any>AssertionError)(errorOrMessage || 'Assertion failed');\r\n    }    \r\n}\r\n\r\nfunction _notNull(value: any, errorOrMessage?: any) {\t\r\n\t_assert(value != null, errorOrMessage);\r\n}\r\n\r\nfunction _notEmpty(value: any, errorOrMessage?: any) {\r\n    _notNull(value, errorOrMessage);\r\n    \r\n    if (isString(value)) {\r\n        _assert(value.trim().length > 0, errorOrMessage);\r\n    }\r\n    else {\r\n        _assert(value.length > 0, errorOrMessage);\r\n    }\r\n}\r\n\r\n(<assert> _assert).notNull = _notNull;\r\n(<assert> _assert).notEmpty = _notEmpty;\r\n\r\nexport var assert = <assert> _assert;","/// <reference path=\"./_references\" />\r\n\r\nimport {forEach, isDefined} from './utils';\r\n\r\nexport const ANNOTATIONS_METADATA_KEY = 'tng';\r\n\r\nvar _Reflect = Reflect;\r\nexport {_Reflect as Reflect};\r\n\r\nconst functionPrototype = Object.getPrototypeOf(Function);\r\n\r\nfunction GetPrototypeOf(O: any): Object {\r\n\r\n    let proto = Object.getPrototypeOf(O);\r\n    if (typeof O !== \"function\" || O === functionPrototype) {\r\n        return proto;\r\n    }\r\n\r\n    // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\r\n    // Try to determine the superclass constructor. Compatible implementations\r\n    // must either set __proto__ on a subclass constructor to the superclass constructor,\r\n    // or ensure each class has a valid `constructor` property on its prototype that\r\n    // points back to the constructor.\r\n\r\n    // If this is not the same as Function.[[Prototype]], then this is definately inherited.\r\n    // This is the case when in ES6 or when using __proto__ in a compatible browser.\r\n    if (proto !== functionPrototype) {\r\n        return proto;\r\n    }\r\n\r\n    // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\r\n    let prototype = O.prototype;\r\n    let prototypeProto = Object.getPrototypeOf(prototype);\r\n    if (prototypeProto == null || prototypeProto === Object.prototype) {\r\n        return proto;\r\n    }\r\n\r\n    // if the constructor was not a function, then we cannot determine the heritage.\r\n    let constructor = prototypeProto.constructor;\r\n    if (typeof constructor !== \"function\") {\r\n        return proto;\r\n    }\r\n\r\n    // if we have some kind of self-reference, then we cannot determine the heritage.\r\n    if (constructor === O) {\r\n        return proto;\r\n    }\r\n\r\n    // we have a pretty good guess at the heritage.\r\n    return constructor;\r\n\r\n}\r\n\r\nfunction getKey(key?: string): string {\r\n\treturn !key ? ANNOTATIONS_METADATA_KEY : `${ANNOTATIONS_METADATA_KEY}:${key}`;\r\n}\r\n\r\nexport function getAnnotations(target: any, type?: Function, key?: string): any[] {\r\n\r\n    let metas: any[] = [];\r\n    let proto = target;\r\n\r\n    do {\r\n        metas.push(getOwnAnnotations(proto, type, key));\r\n        proto = GetPrototypeOf(proto);\r\n    } while (typeof proto === \"function\" && proto !== functionPrototype);\r\n\r\n    metas.reverse();\r\n    let annotations: any[] = [];\r\n\r\n    for (let i = 0; i < metas.length; i++) {\r\n        annotations = annotations.concat(metas[i]);\r\n    }\r\n\r\n    return annotations;\r\n\r\n}\r\n\r\n// export function getAnnotations(target: any, type?: Function, key?: string): any[] {\r\n\r\n// \tvar annotations = <any[]> Reflect.getMetadata(getKey(key), target) || [];\r\n\r\n// \tif (type) {\r\n// \t\treturn annotations.filter((value) => value instanceof type);\r\n// \t}\r\n\r\n// \treturn annotations.slice(0);\r\n\r\n// }\r\n\r\nexport function getOwnAnnotations(target: any, type?: Function, key?: string): any[] {\r\n\r\n\tvar annotations = <any[]> Reflect.getOwnMetadata(getKey(key), target) || [];\r\n\r\n\tif (type) {\r\n\t\treturn annotations.filter((value) => value instanceof type).reverse();\r\n\t}\r\n\r\n\treturn annotations.slice(0).reverse();\r\n\r\n}\r\n\r\nexport function setAnnotations(target: any, annotations: any[], key?: string):void {\r\n\r\n\tReflect.defineMetadata(getKey(key), annotations, target);\r\n\r\n}\r\n\r\nexport function addAnnotation(target: any, annotation: any, key?: string):void {\r\n\r\n\tvar annotations = getOwnAnnotations(target, null, key);\r\n\tannotations.push(annotation);\r\n\tsetAnnotations(target, annotations, key);\r\n\r\n}\r\n\r\nexport function hasAnnotation(target: any, type?: Function, key?: string): boolean {\r\n\r\n\tif (!type) {\r\n\t\treturn Reflect.hasMetadata(getKey(key), target);\r\n\t}\r\n\r\n\treturn getAnnotations(target, type, key).length > 0;\r\n\r\n}\r\n\r\nexport function hasOwnAnnotation(target: any, type?: Function, key?: string): boolean {\r\n\r\n\tif (!type) {\r\n\t\treturn Reflect.hasOwnMetadata(getKey(key), target);\r\n\t}\r\n\r\n\treturn getAnnotations(target, type, key).length > 0;\r\n\r\n}\r\n\r\n// export function mergeAnnotations(...annotations: any[]): any;\r\nexport function mergeAnnotations<Type>(...annotations: any[]): Type;\r\nexport function mergeAnnotations(...annotations: any[]): any {\r\n\r\n\tif (!annotations.length) {\r\n\t\treturn null;\r\n\t}\r\n\telse if (annotations.length == 1) {\r\n\t\treturn annotations[0];\r\n\t}\r\n\r\n\tvar dest = <{ [key: string]: any }><any> annotations.shift();\r\n\r\n\tfor (let source of annotations) {\r\n\t\tforEach(source, (value, key) => {\r\n\t\t\t// We only replace if defined (nulls are ok, they remove previously set values)\r\n\t\t\tif (isDefined(value)) {\r\n\t\t\t\tdest[key] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn <any> dest;\r\n\r\n}","/// <reference path=\"../../_references.ts\" />\r\n\r\nimport {Inject} from '../../di'\r\nimport {Decorator} from '../../decorator'\r\nimport {getModalHandler} from './modal'\r\n\r\nimport IModalService = ng.ui.bootstrap.IModalService\r\nimport IModalSettings = ng.ui.bootstrap.IModalSettings\r\nimport IModalServiceInstance = ng.ui.bootstrap.IModalServiceInstance\r\nimport IInjectorService = ng.auto.IInjectorService\r\n\r\n\r\n\r\n@Decorator({\r\n\tname: '$modal'\r\n})\r\nexport class ModalServiceDecorator implements Decorator {\r\n\r\n\tdecorate(\r\n\t\t@Inject('$delegate') $modal: IModalService,\r\n\t\t@Inject('$injector') $injector: ng.auto.IInjectorService): IModalService {\r\n\r\n\t\tvar originalOpen = $modal.open;\r\n\t\t$modal.open = function(optionsOrModal: any, scope?: ng.IScope): IModalServiceInstance {\r\n\r\n\t\t\t// Usign @Modal decorator?\r\n\t\t\tif (typeof optionsOrModal === 'function') {\r\n\t\t\t\tvar handler = getModalHandler(<Function> optionsOrModal, scope);\r\n\t\t\t\treturn $injector.invoke(handler.open, handler);\r\n\t\t\t}\r\n\t\t\t// Using the original IModalSettings object\r\n\t\t\telse {\r\n\t\t\t\treturn originalOpen.call($modal, optionsOrModal);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn $modal;\r\n\r\n\t}\r\n\r\n}","/// <reference path=\"../../_references.ts\" />\r\n\r\nimport {makeDecorator, setIfInterface} from '../../utils'\r\nimport {ViewOptions, ViewAnnotation} from '../../view'\r\n\r\n\r\n\r\nexport enum ModalBackdrop {\r\n\tShow,\r\n\tHide,\r\n\tStatic\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const MODAL_BACKDROP_MAP = [true, false, 'static'];\r\n\r\n/**\r\n * Options available when decorating a modal with view information\r\n * TODO document\r\n */\r\nexport interface ModalViewOptions extends ViewOptions {\r\n\r\n    animation?: boolean;\r\n\tbackdrop?: ModalBackdrop;\r\n\tbackdropClass?: string;\r\n\tkeyboard?: boolean;\r\n\twindowClass?: string;\r\n\twindowTemplateUrl?: string;\r\n\tsize?: string;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ModalViewAnnotation extends ViewAnnotation {\r\n\r\n    animation: boolean = void 0;\r\n\tbackdrop: ModalBackdrop = void 0;\r\n\tbackdropClass: string = void 0;\r\n\tkeyboard: boolean = void 0;\r\n\twindowClass: string = void 0;\r\n\twindowTemplateUrl: string = void 0;\r\n\tsize: string = void 0;\r\n\r\n    constructor(options: ModalViewOptions) {\r\n\t\tsuper(options);\r\n\t\tsetIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\ntype ModalViewDecorator = (options: ModalViewOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a modal with view information\r\n */\r\nexport var ModalView = <ModalViewDecorator> makeDecorator(ModalViewAnnotation);","/// <reference path=\"../../_references.ts\" />\r\n\r\nimport {makeDecorator, isNumber} from '../../utils'\r\nimport {getAnnotations} from '../../reflection'\r\nimport {injectable} from '../../di'\r\n\r\n\r\n\r\n/**\r\n * Enumeration of events related to the transition of states.\r\n */\r\nexport const enum StateChangeEvent {\r\n\r\n    /**\r\n     * Fired when the transition begins.\r\n     *\r\n     * Translates to the UI-Router $stateChangeStart event.\r\n     *\r\n     * The $rootScope broadcasts this event down to child scopes.\r\n     *\r\n     * The handler function receives the following parameters:\r\n     *\r\n     * - event: ng.IAngularEvent\r\n     * - toState:\r\n     * - toParams:\r\n     * - fromState:\r\n     * - fromParams:\r\n     *\r\n     * Note: Use event.preventDefault() to prevent the transition from happening.\r\n     */\r\n    STATE_CHANGE_START,\r\n\r\n    /**\r\n     * Fired once the state transition is complete.\r\n     *\r\n     * Translates to the UI-Router $stateChangeSuccess event.\r\n     *\r\n     * The $rootScope broadcasts this event down to child scopes.\r\n     *\r\n     * The handler function receives the following parameters:\r\n     *\r\n     * - event: ng.IAngularEvent\r\n     * - toState:\r\n     * - toParams:\r\n     * - fromState:\r\n     * - fromParams:\r\n     */\r\n    STATE_CHANGE_SUCCESS,\r\n\r\n    /**\r\n     * Fired when an error occurs during transition.\r\n     *\r\n     * Translates to the UI-Router $stateChangeError event.\r\n     *\r\n     * The $rootScope broadcasts this event down to child scopes.\r\n     *\r\n     * The handler function receives the following parameters:\r\n     *\r\n     * - event: ng.IAngularEvent\r\n     * - toState:\r\n     * - toParams:\r\n     * - fromState:\r\n     * - fromParams:\r\n     * - error: Error\r\n     *\r\n     * Note: It's important to note that if you have any errors in your\r\n     * resolve functions (JavaScript errors, non-existent services, etc)\r\n     * they will not throw traditionally. You must listen for this\r\n     * event to catch ALL errors. Use event.preventDefault() to prevent\r\n     * the $UrlRouter from reverting the URL to the previous valid location\r\n     * (in case of a URL navigation).\r\n     */\r\n    STATE_CHANGE_ERROR\r\n\r\n    /**\r\n     * TODO: From version 0.3.0 and up. Does it have a stable release?\r\n     *\r\n     * Fired when a state cannot be found by its name.\r\n     *\r\n     * Translates to the UI-Router $stateNotFound event.\r\n     *\r\n     * The $rootScope broadcasts this event down to child scopes.\r\n     */\r\n    // STATE_NOT_FOUND\r\n\r\n}\r\n\r\n/**\r\n * Enumeration of events related to the loading of view contents.\r\n */\r\nexport const enum ViewLoadEvent {\r\n\r\n    /**\r\n     * Fired once the view begins loading, before the DOM is rendered.\r\n     *\r\n     * Translates to the UI-Router $viewContentLoading event.\r\n     *\r\n     * The $rootScope broadcasts this event down to child scopes.\r\n     *\r\n     * The handler function receives the following parameters:\r\n     *\r\n     * - event: ng.IAngularEvent\r\n     * - viewConfig:\r\n     */\r\n    VIEW_CONTENT_LOADING = 4,\r\n\r\n    /**\r\n     * Fired once the view is loaded, after the DOM is rendered.\r\n     *\r\n     * Translates to the UI-Router $viewContentLoaded event.\r\n     *\r\n     * The '$scope' of the view emits the event up to the $rootScope.\r\n     *\r\n     * The handler function receives the following parameter:\r\n     *\r\n     * - event: ng.IAngularEvent\r\n     */\r\n    VIEW_CONTENT_LOADED = 5\r\n\r\n}\r\n\r\n/**\r\n * Maps the event enums to the actual event names used by the UI-Router.\r\n * @internal\r\n */\r\nconst EVENTS_MAP = [\r\n    '$stateChangeStart',\r\n    '$stateChangeSuccess',\r\n    '$stateChangeError',\r\n    '$stateNotFound',\r\n\r\n    '$viewContentLoading',\r\n    '$viewContentLoaded'\r\n];\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class UiRouterEventListenerAnnotation {\r\n\r\n    constructor(public event: StateChangeEvent|ViewLoadEvent|string, public handler: Function) {\r\n        // TODO validate arguments\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\ntype OnDecorator = (event: StateChangeEvent|ViewLoadEvent|string, handler: Function) => ClassDecorator;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport var On = <OnDecorator> makeDecorator(UiRouterEventListenerAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function publishListeners(moduleController: Function, ngModule: ng.IModule) {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations to ge them on the original order\r\n    // var listenerNotes = <UiRouterEventListenerAnnotation[]> getAnnotations(moduleController, UiRouterEventListenerAnnotation).reverse();\r\n    var listenerNotes = <UiRouterEventListenerAnnotation[]> getAnnotations(moduleController, UiRouterEventListenerAnnotation);\r\n\r\n    if (listenerNotes.length) {\r\n        ngModule.run(injectable(['$rootScope'], ($rootScope: ng.IRootScopeService) => {\r\n\r\n            for (let listenerAnnotation of listenerNotes) {\r\n                let event = <string> listenerAnnotation.event;\r\n\r\n                if (isNumber(event)) {\r\n                    event = EVENTS_MAP[<number> listenerAnnotation.event];\r\n                }\r\n\r\n                $rootScope.$on(event, <any> listenerAnnotation.handler);\r\n            }\r\n\r\n        }));\r\n    }\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\nimport {Reflect, getAnnotations, addAnnotation} from './reflection'\r\n\r\n\r\n\r\ntype extendSignature = <Type>(dest: Type, ...rest: any[]) => Type;\r\n\r\nexport var isDefined = angular.isDefined;\r\nexport var isString = angular.isString;\r\nexport var isNumber = angular.isNumber;\r\nexport var isObject = angular.isObject;\r\nexport var isElement = angular.isElement;\r\nexport var isDate = angular.isDate;\r\nexport var isArray = angular.isArray;\r\nexport var isFunction = angular.isFunction;\r\nexport var forEach = angular.forEach;\r\nexport var extend = <extendSignature> angular.extend;\r\nexport var copy = <extendSignature> angular.copy;\r\nexport var merge = <extendSignature> (<any> angular).merge;\r\nexport var mergeIfValue = <extendSignature> _mergeIfValue;\r\n\r\nexport type FunctionReturningNothing = (...args: any[]) => void;\r\nexport type FunctionReturningSomething = (...args: any[]) => any;\r\nexport type FunctionReturningString = (...args: any[]) => string;\r\nexport type FunctionReturningNumber = (...args: any[]) => number;\r\n\r\nexport interface Map<TValue> {\r\n    [key: string]: TValue;\r\n}\r\n\r\nexport function create<Type>(constructor: { prototype: Type }): Type {\r\n\r\n    return Object.create(constructor.prototype);\r\n\r\n}\r\n\r\nexport function setIf(target:any, source:any) {\r\n\r\n    if (target == null || source == null) {\r\n        return;\r\n    }\r\n\r\n\tfor (let key in source) {\r\n        if (source.hasOwnProperty(key) && isDefined(source[key])) {\r\n            target[key] = source[key];\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function setIfInterface(target:any, source:any) {\r\n\r\n    if (target == null || source == null) {\r\n        return;\r\n    }\r\n\r\n\tfor (let key in source) {\r\n        if (source.hasOwnProperty(key) && isDefined(source[key])) {\r\n            if (target.hasOwnProperty(key)) {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function makeDecorator<T extends Function>(annotationClass: T) {\r\n\r\n    return function() {\r\n\r\n        var annotationInstance = Object.create(annotationClass.prototype);\r\n        annotationClass.apply(annotationInstance, arguments);\r\n\r\n        return function(target: T) {\r\n            addAnnotation(target, annotationInstance);\r\n            return target;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function makeParamDecorator<T extends Function>(annotationClass: T) {\r\n\r\n    return function() {\r\n\r\n        var annotationInstance = Object.create(annotationClass.prototype);\r\n        annotationClass.apply(annotationInstance, arguments);\r\n\r\n        return function(target: T, unusedKey: string, index: number) {\r\n\r\n            var parameters = Reflect.getMetadata('parameters', target);\r\n            parameters = parameters || [];\r\n\r\n            // there might be gaps if some in between parameters do not have annotations.\r\n            // we pad with nulls.\r\n            while (parameters.length <= index) {\r\n                parameters.push(null);\r\n            }\r\n\r\n            parameters[index] = annotationInstance;\r\n            Reflect.defineMetadata('parameters', parameters, target);\r\n            return target;\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const enum SelectorType {\r\n    Attribute,\r\n    Class,\r\n    //Comment,\r\n    Tag\r\n};\r\n\r\ntype Selector = {\r\n    semanticeName: string,\r\n    imperativeName: string,\r\n    type: SelectorType\r\n};\r\n\r\nconst RE_SELECTOR_ATTRIBUTE = /^\\[([a-z_][a-z\\-_0-9]+)\\]$/i;\r\nconst RE_SELECTOR_CLASS = /^\\.([a-z_][a-z\\-_0-9]+)$/i;\r\n//const RE_SELECTOR_COMMENT = /^\\/\\/([a-z_][a-z\\-_0-9]+)$/i;\r\nconst RE_SELECTOR_TAG = /^([a-z_][a-z\\-_0-9]+)$/i;\r\n\r\nexport function parseSelector(selector: string): Selector {\r\n\r\n    var semanticeName: string;\r\n    var type: SelectorType;\r\n    var m: RegExpMatchArray;\r\n\r\n    if (m = RE_SELECTOR_TAG.exec(selector)) {\r\n        type = SelectorType.Tag;\r\n    }\r\n    else if (m = RE_SELECTOR_ATTRIBUTE.exec(selector)) {\r\n        type = SelectorType.Attribute;\r\n    }\r\n    else if (m = RE_SELECTOR_CLASS.exec(selector)) {\r\n        type = SelectorType.Class;\r\n    }\r\n    //else if (m = RE_SELECTOR_COMMENT.exec(selector)) {\r\n    //    type = SelectorType.Comment;\r\n    //}\r\n    else {\r\n        throw new Error(`Invalid selector: ${selector}`);\r\n    }\r\n\r\n    return {\r\n        semanticeName: m[1],\r\n        imperativeName: toCamelCase(m[1]),\r\n        type: type\r\n    };\r\n}\r\n\r\n// from mout @ https://github.com/mout/mout/blob/v0.11.0/src/string/camelCase.js\r\nfunction toCamelCase(str: string) {\r\n    str = str.replace(/[\\-_]/g, ' ') //convert all hyphens and underscores to spaces\r\n        .replace(/\\s[a-z]/g, upperCase) //convert first char of each word to UPPERCASE\r\n        .replace(/\\s+/g, '') //remove spaces\r\n        .replace(/^[A-Z]/g, lowerCase); //convert first char to lowercase\r\n    return str;\r\n}\r\nfunction upperCase(str: string){\r\n    return str.toUpperCase();\r\n}\r\nfunction lowerCase(str: string) {\r\n    return str.toLowerCase();\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function bindFunctions<T>(host: T): T {\r\n\r\n    var aux = <any> host;\r\n\r\n    if (aux) {\r\n        for (let key in aux) {\r\n            if (isFunction(aux[key])) {\r\n                aux[key] = safeBind(aux[key], aux);\r\n            }\r\n        }\r\n    }\r\n\r\n    return host;\r\n\r\n}\r\n\r\nexport function safeBind<T extends Function>(func: T, context: any): T {\r\n\r\n    var bound = func.bind(context);\r\n\r\n    forEach(func, (value, name) => bound[name] = value);\r\n\r\n    return bound;\r\n\r\n}\r\n\r\n\r\n\r\n// --\r\n\r\n/**\r\n * Set or clear the hashkey for an object.\r\n * @param obj object\r\n * @param h the hashkey (!truthy to delete the hashkey)\r\n */\r\nfunction setHashKey(obj:any, h:any) {\r\n  if (h) {\r\n    obj.$$hashKey = h;\r\n  } else {\r\n    delete obj.$$hashKey;\r\n  }\r\n}\r\n\r\n\r\nfunction baseExtend(dst:any, objs:any[], deep:boolean, ifValue:boolean=false):any {\r\n  var h = dst.$$hashKey;\r\n\r\n  for (var i = 0, ii = objs.length; i < ii; ++i) {\r\n    var obj = objs[i];\r\n    if (!isObject(obj) && !isFunction(obj)) continue;\r\n    var keys = Object.keys(obj);\r\n    for (var j = 0, jj = keys.length; j < jj; j++) {\r\n      var key = keys[j];\r\n      var src = obj[key];\r\n\r\n      if (deep && isObject(src)) {\r\n        if (!isObject(dst[key])) dst[key] = isArray(src) ? [] : {};\r\n        baseExtend(dst[key], [src], true);\r\n      } else if (!ifValue || src != null) {\r\n        dst[key] = src;\r\n      }\r\n    }\r\n  }\r\n\r\n  setHashKey(dst, h);\r\n  return dst;\r\n}\r\n\r\nfunction _mergeIfValue(dst:any):any {\r\n    return baseExtend(dst, [].slice.call(arguments, 1), true, true);\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\nimport {getAnnotations, mergeAnnotations} from './reflection'\r\nimport {injectable} from './di'\r\nimport {makeDecorator, FunctionReturningSomething, setIfInterface} from './utils'\r\nimport {create, isFunction, bindFunctions} from './utils'\r\n\r\n\r\n\r\n/**\r\n * Options available when decorating a class as an animation controller\r\n * TODO document\r\n */\r\nexport interface AnimationOptions {\r\n\r\n    /**\r\n     * TODO rules?\r\n     */\r\n    name: string;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class AnimationAnnotation {\r\n\r\n    name: string = null;\r\n\r\n    constructor(options: AnimationOptions) {\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\ntype endFunction = (isCancelled: boolean) => void;\r\n\r\n/**\r\n * Interface animation controllers MAY implement\r\n * TODO document\r\n */\r\nexport interface Animation {\r\n    enter?: (element: ng.IAugmentedJQuery, done: Function) => endFunction;\r\n    leave?: (element: ng.IAugmentedJQuery, done: Function) => endFunction;\r\n    move?: (element: ng.IAugmentedJQuery, done: Function) => endFunction;\r\n    addClass?: (element: ng.IAugmentedJQuery, className: string, done: Function) => endFunction;\r\n    removeClass?: (element: ng.IAugmentedJQuery, className: string, done: Function) => endFunction;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface AnimationConstructor extends Function {\r\n    new (...args: any[]): Animation;\r\n    prototype: Animation;\r\n}\r\n\r\ntype DecoratorSignature = (options: AnimationOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being an animation controller\r\n */\r\nexport var Animation = <DecoratorSignature> makeDecorator(AnimationAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function registerAnimation(animationClass: AnimationConstructor, ngModule: ng.IModule) {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(animationClass, AnimationAnnotation).reverse();\r\n    var aux = getAnnotations(animationClass, AnimationAnnotation);\r\n\r\n    if (!aux.length) {\r\n        throw new Error(\"Filter annotation not found\");\r\n    }\r\n\r\n    var {name} = mergeAnnotations<AnimationAnnotation>(create(AnimationAnnotation), ...aux);\r\n\r\n    // TODO validate implementation?\r\n\r\n    ngModule.animation(name, injectable(['$injector'], function($injector: ng.auto.IInjectorService) {\r\n        var singleton = <Animation> $injector.instantiate(animationClass);\r\n        bindFunctions(singleton);\r\n        return singleton;\r\n    }));\r\n\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert'\r\nimport {makeDecorator, setIfInterface, isElement} from './utils'\r\nimport {ModuleOptions, ModuleAnnotation, Module, ModuleConstructor} from './module'\r\n\r\n\r\n\r\n/**\r\n * Options available when decorating a class as an application\r\n * TODO document\r\n */\r\nexport interface ApplicationOptions extends ModuleOptions {\r\n\t// selector?: string;\r\n\telement: Element\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ApplicationAnnotation extends ModuleAnnotation {\r\n\r\n\t// selector: string = void 0;\r\n\telement: Element|Document = void 0;\r\n\r\n\tconstructor(element: Element|Document);\r\n\tconstructor(options: ApplicationOptions);\r\n\tconstructor(elementOroptions: any) {\r\n\t\tsuper(options);\r\n\r\n\t\tvar options = isElement(elementOroptions) ? { element: elementOroptions } : elementOroptions;\r\n\r\n\t\t// TODO debug only?\r\n        assert(options && options.element, 'element must be provided');\r\n        // assert(options.element || options.selector, 'Either element or selector must be provided');\r\n\t\t// assert(!(options.element && options.selector), 'Provide either selector or element, but not both');\r\n\r\n\t\tsetIfInterface(this, options);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Interface applications MAY implement\r\n */\r\nexport interface Application extends Module {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ApplicationConstructor extends ModuleConstructor {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\ntype ApplicationSignature = (options: ApplicationOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being an application\r\n */\r\nexport var Application = <ApplicationSignature> makeDecorator(ApplicationAnnotation);","/// <reference path=\"./_references\" />\r\n\r\n/*\r\nApplications must have:\r\n    - Module annotation\r\n\r\nSteps to bootstrap:\r\n\r\n    - Process submodules (recursively)\r\n    - Process the application module\r\n    - Bootstrap\r\n\r\nTo process a module is to:\r\n    - Iterate through it's submodules and process them (recurse)\r\n        - Register the module on Angular\r\n        - Register services on Angular\r\n        - Register directives on Angular\r\n        - Register components on Angular\r\n            - Gather route annotations\r\n        - Register config and run functions\r\n*/\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert';\r\n\r\nimport {getAnnotations, mergeAnnotations} from './reflection';\r\nimport {create} from './utils';\r\nimport {ApplicationConstructor, ApplicationAnnotation} from './application';\r\nimport {ModuleConstructor, ModuleAnnotation, publishModule} from './module';\r\n\r\n/**\r\n *\r\n */\r\nexport function bootstrap(applicationClass: ApplicationConstructor): ng.auto.IInjectorService;\r\nexport function bootstrap(moduleClass: ModuleConstructor, element: Element|Document): ng.auto.IInjectorService;\r\n// export function bootstrap(moduleClass: ModuleConstructor, selector: string): ng.auto.IInjectorService;\r\nexport function bootstrap(moduleClass: ModuleConstructor, element?: Element|Document): ng.auto.IInjectorService {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(moduleClass, ModuleAnnotation).reverse();\r\n    var aux = getAnnotations(moduleClass, ModuleAnnotation);\r\n\r\n    // TODO debug only?\r\n    assert.notEmpty(aux, 'Missing @Application or @Module decoration');\r\n\r\n    var annotation = <ApplicationAnnotation> mergeAnnotations({}, ...aux);\r\n\r\n    element = element || annotation.element;\r\n\r\n    // TODO debug only?\r\n    assert(element, 'element must be provided');\r\n\r\n    var ngModule = publishModule(moduleClass);\r\n\r\n    return angular.bootstrap(<any> element, [ngModule.name]);\r\n\r\n}\r\n\r\n//export function bootstrapWhenReady(moduleClass: ModuleConstructor): Promise<ng.auto.IInjectorService>;\r\n//export function bootstrapWhenReady(moduleClass: ModuleConstructor, element: Element): Promise<ng.auto.IInjectorService>;\r\n//export function bootstrapWhenReady(moduleClass: ModuleConstructor, selector: string): Promise<ng.auto.IInjectorService>;\r\n//export function bootstrapWhenReady(moduleClass: ModuleConstructor, selectorOrElement?: any): Promise<ng.auto.IInjectorService> {\r\n//\r\n//    var promise = new Promise<ng.auto.IInjectorService>((resolve, reject) => {\r\n//        // TODO\r\n//    });\r\n//\r\n//    return promise;\r\n//\r\n//}","/// <reference path=\"./_references.ts\" />\r\n\r\nimport {makeDecorator, setIfInterface} from './utils'\r\nimport {ViewOptions, ViewAnnotation} from './view'\r\n\r\n\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport const enum ComponentTemplateNamespace {\r\n    HTML,\r\n    SVG,\r\n    MathML\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const NAMESPACE_MAP = ['html', 'svg', 'math'];\r\n\r\n/**\r\n * Options available when decorating a component with view information\r\n * TODO document\r\n */\r\nexport interface ComponentViewOptions extends ViewOptions {\r\n\r\n    /**\r\n     *\r\n     */\r\n    namespace?: ComponentTemplateNamespace;\r\n\r\n    /**\r\n     * @deprecated\r\n     */\r\n    replace?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ComponentViewAnnotation extends ViewAnnotation {\r\n\r\n    namespace: ComponentTemplateNamespace = void 0;\r\n    replace: boolean = void 0;\r\n\r\n    constructor(options: ComponentViewOptions) {\r\n        super(options);\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\ntype ComponentViewDecorator = (options: ComponentViewOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a component with view information\r\n */\r\nexport var ComponentView = <ComponentViewDecorator> makeDecorator(ComponentViewAnnotation);","/// <reference path=\"./_references.ts\" />\r\n\r\nimport {assert} from './assert'\r\nimport {Inject, injectable, isAnnotated} from './di'\r\nimport {makeDecorator, Map, setIfInterface, isFunction, isDefined} from './utils'\r\nimport {FunctionReturningString, FunctionReturningNothing, parseSelector, SelectorType} from './utils'\r\nimport {hasAnnotation, hasOwnAnnotation, getAnnotations, mergeAnnotations, addAnnotation} from './reflection'\r\nimport {ViewAnnotation} from './view'\r\nimport {ComponentViewAnnotation, NAMESPACE_MAP} from './component-view'\r\nimport {CommonDirectiveOptions, CommonDirectiveAnnotation} from './directive'\r\nimport {Directive, DirectiveAnnotation, DirectiveConstructor, Transclusion} from './directive'\r\nimport {makeCommonDO, DirectiveDefinitionObject, inFactory as inFactoryDirective} from './directive'\r\n\r\nexport {Bind} from './directive';\r\n\r\n\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport interface ComponentOptions extends CommonDirectiveOptions {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ComponentAnnotation extends CommonDirectiveAnnotation {\r\n\r\n    constructor(options: ComponentOptions) {\r\n        super(options); // TODO WTF needs casting?\r\n        //setIfInterface(this, options); nothing to do so far\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Interface components MAY implement\r\n */\r\nexport interface Component extends Directive {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ComponentConstructor extends DirectiveConstructor {\r\n    new (): Component;\r\n}\r\n\r\n\r\n/*function componentDecoratorExtensor(baseClass: Function) {\r\n\r\n    // debugger;\r\n\r\n    var annotations = <ComponentAnnotation[]> getAnnotations(baseClass, ComponentAnnotation);\r\n\r\n    return function(target: any) {\r\n        // debugger;\r\n        // TODO clone?\r\n        for (let annotation of annotations) {\r\n            addAnnotation(target, annotation)\r\n        }\r\n        return target;\r\n    }\r\n\r\n};*/\r\n\r\ninterface ComponentDecoratorType {\r\n    (options: ComponentOptions): ClassDecorator;\r\n    // extends: typeof componentDecoratorExtensor;\r\n}\r\n\r\ntype ComponentDecorator = (options: ComponentOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a component controller\r\n */\r\nexport var Component = <ComponentDecoratorType><any> makeDecorator(ComponentAnnotation);\r\n\r\n// Component.extends = componentDecoratorExtensor;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ComponentDefinitionObject extends DirectiveDefinitionObject {\r\n    controllerAs?: string;\r\n    template?: string|FunctionReturningString;\r\n    templateUrl?: string|FunctionReturningString;\r\n    templateNamespace?: string;\r\n}\r\n\r\nexport function publishComponent(componentClass: ComponentConstructor, ngModule: ng.IModule, selector?: string): ng.IModule {\r\n\r\n    // TODO debug only?\r\n    assert(hasOwnAnnotation(componentClass, ComponentAnnotation), 'Missing @Component decoration');\r\n    assert(hasAnnotation(componentClass, ViewAnnotation), 'Missing @View decoration');\r\n\r\n    var {name, factory} = makeComponentFactory(componentClass);\r\n\r\n    // TODO Allow for selector override through parameter\r\n\r\n    ngModule.directive(name, factory);\r\n\r\n    return ngModule;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function makeComponentDO(componentClass: ComponentConstructor): ComponentDefinitionObject {\r\n\r\n    var cdo = <ComponentDefinitionObject> makeCommonDO(<DirectiveConstructor> componentClass);\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(componentClass, ViewAnnotation).reverse();\r\n    var aux = getAnnotations(componentClass, ViewAnnotation);\r\n    var view = <ComponentViewAnnotation> {/*no defaults*/};\r\n    mergeAnnotations(view, ...aux);\r\n\r\n    if (!isDefined(cdo.scope)) cdo.scope = {}; // Default scope is isolate\r\n    if (!isDefined(cdo.bindToController)) cdo.bindToController = true; // Default bindToController value\r\n    if (isDefined(view.controllerAs)) cdo.controllerAs = view.controllerAs;\r\n    if (isDefined(view.namespace)) cdo.templateNamespace = NAMESPACE_MAP[view.namespace];\r\n\r\n    // TODO styleUrl\r\n\r\n    if (isDefined(view.template)) cdo.template = view.template;\r\n    else if (isDefined(view.templateUrl)) cdo.templateUrl = view.templateUrl;\r\n    else throw new Error('Component has no template. Use either template or templateUrl');\r\n\r\n    return cdo;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function inFactory(cdo: ComponentDefinitionObject, $injector: ng.auto.IInjectorService): ComponentDefinitionObject {\r\n\r\n    if (isFunction(cdo.template)) {\r\n        cdo.template = !isAnnotated(<any> cdo.template) ? cdo.template : (tElement: any, tAttrs: any) => {\r\n            return $injector.invoke(<any> cdo.template, null, {\r\n                element: tElement,\r\n                attributes: tAttrs\r\n            });\r\n        };\r\n    }\r\n\r\n    if (isFunction(cdo.templateUrl)) {\r\n        cdo.templateUrl = !isAnnotated(<any> cdo.templateUrl) ? cdo.templateUrl : (tElement: any, tAttrs: any) => {\r\n            return $injector.invoke(<any> cdo.templateUrl, null, {\r\n                element: tElement,\r\n                attributes: tAttrs\r\n            });\r\n        };\r\n    }\r\n\r\n    // TODO styleUrl\r\n\r\n    return cdo;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function makeComponentFactory(componentClass: ComponentConstructor) {\r\n\r\n    var cdo = makeComponentDO(componentClass);\r\n\r\n    var factory = injectable(['$injector'], function directiveFactory($injector: ng.auto.IInjectorService): ng.IDirective {\r\n        return <any> inFactory(inFactoryDirective(cdo, $injector), $injector);\r\n    });\r\n\r\n    return {\r\n        name: cdo.imperativeName,\r\n        factory: factory\r\n    };\r\n\r\n}","/// <reference path=\"./_references\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert';\r\n\r\n/**\r\n * A framework envelope for constants\r\n */\r\nexport class ConstantWrapper<Type> {\r\n\r\n    constructor(private _name: string, private _value: Type) {\r\n    }\r\n    \r\n    get name() {\r\n        return this._name;\r\n    }\r\n    \r\n    get value() {\r\n        return this._value;\r\n    }\r\n    \r\n}\r\n\r\n/**\r\n * Wraps a constant to be made available for dependency injection\r\n * \r\n * @param name The name of the constant through which it will made available\r\n * @param value The constant value to be injected, as is\r\n * \r\n * @return A wrapper, to be used as a module dependency\r\n */\r\nexport function Constant<Type>(name: string, value: Type): ConstantWrapper<Type> {\r\n\r\n    // TODO debug only?\r\n    assert.notEmpty(name, 'name cannot be null or empty');\r\n\r\n    return new ConstantWrapper(name, value);\r\n\r\n}\r\n\r\nexport function publishConstant<Type>(constant: ConstantWrapper<Type>, ngModule: ng.IModule, name?: string): ng.IModule {\r\n\r\n    // TODO debug only?\r\n    assert(constant instanceof ConstantWrapper, 'constant must be a ConstantWrapper');\r\n    \r\n    name = name != null ? name : constant.name;\r\n    ngModule.constant(name, constant.value);\r\n    \r\n    return ngModule;\r\n\r\n}","/// <reference path=\"./_references\" />\r\n\r\n// import {makeDecorator} from './utils';\r\n\r\n// export interface ControllerOptions {\r\n    \r\n// }\r\n\r\n// export class ControllerAnnotation {\r\n    \r\n//     constructor(options:ControllerOptions) {\r\n        \r\n//     }\r\n    \r\n// }\r\n\r\n// type ControllerAnnotationDecorator = (options:ControllerOptions) => ClassDecorator;\r\n// export var Controller = <ControllerAnnotationDecorator> makeDecorator(ControllerAnnotation);\r\n","/// <reference path=\"./_references\" />\r\n\r\nimport {injectable} from './di'\r\nimport {getAnnotations, mergeAnnotations} from './reflection'\r\nimport {makeDecorator, setIfInterface, create, isFunction} from './utils'\r\n\r\n\r\n\r\n/**\r\n * Options available when decorating a class as a service decorator\r\n */\r\nexport interface DecoratorOptions {\r\n\r\n    /**\r\n     * The name of service to decorate\r\n     */\r\n    name: string;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class DecoratorAnnotation {\r\n\r\n    name: string = null;\r\n\r\n    constructor(options: DecoratorOptions) {\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Interface service decorators MUST implement\r\n *\r\n * * It's a singleton, instantiated the first the decorated service is needed\r\n * * The constructor can receive dependency injections\r\n * * The original service instance is available for injection locally as $delegate\r\n * * When asked for, what is provided is actually the method decorate() bound the decorator instance\r\n */\r\nexport interface Decorator {\r\n\r\n    /**\r\n     * The method that does the actual decoration\r\n     *\r\n     * This method must return the decorated service, as it will be used when\r\n     * the service is asked for.\r\n     *\r\n     * * Can receive dependency injections\r\n     * * The original service instance is available for injection locally as $delegate\r\n     */\r\n    decorate(...args: any[]): any;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface DecoratorConstructor extends Function {\r\n    new (...args: any[]): Decorator;\r\n    prototype: Decorator;\r\n}\r\n\r\ntype DecoratorSignature = (options: DecoratorOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a service decorator\r\n */\r\nexport var Decorator = <DecoratorSignature> makeDecorator(DecoratorAnnotation);\r\n\r\nexport function publishDecorator(decoratorClass: DecoratorConstructor, ngModule: ng.IModule, name?: string): ng.IModule {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(decoratorClass, DecoratorAnnotation).reverse();\r\n    var aux = getAnnotations(decoratorClass, DecoratorAnnotation);\r\n\r\n    if (!aux.length) {\r\n        throw new Error(\"Decorator annotation not found\");\r\n    }\r\n\r\n    var annotation = <DecoratorAnnotation> mergeAnnotations(create(DecoratorAnnotation), ...aux);\r\n    name = name != null ? name : annotation.name;\r\n\r\n    if (!isFunction(decoratorClass.prototype.decorate)) {\r\n        throw new Error(`Decorator \"${name}\" does not implement a decorate method`);\r\n    }\r\n\r\n    ngModule.config(injectable(['$provide'], function($provide: ng.auto.IProvideService) {\r\n        $provide.decorator(name, injectable(['$delegate', '$injector'], function($delegate: any, $injector: ng.auto.IInjectorService) {\r\n\r\n            var instance = <Decorator> $injector.instantiate(decoratorClass, {\r\n                $delegate: $delegate\r\n            });\r\n\r\n            return $injector.invoke(instance.decorate, instance, {\r\n                $delegate: $delegate\r\n            });\r\n\r\n        }));\r\n    }));\r\n\r\n    return ngModule;\r\n\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert';\r\n\r\nimport {Inject, injectable, isAnnotated} from './di'\r\nimport {makeDecorator, Map, setIfInterface, create, isFunction, isDefined} from './utils'\r\nimport {FunctionReturningString, FunctionReturningNothing, parseSelector, SelectorType} from './utils'\r\nimport {hasOwnAnnotation, getAnnotations, mergeAnnotations, addAnnotation} from './reflection'\r\n\r\n\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport const enum Transclusion {\r\n    Content,\r\n    Element\r\n}\r\nconst TRANSCLUSION_MAP = [true, 'element'];\r\n\r\ntype PrePost = {\r\n    pre: FunctionReturningNothing,\r\n    post: FunctionReturningNothing\r\n};\r\ntype CompileFunction = (...args: any[]) => FunctionReturningNothing;\r\ntype FunctionReturningPrePost = (...args: any[]) => PrePost;\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport interface CommonDirectiveOptions {\r\n\r\n    // name = element\r\n    // .name = class\r\n    // [name] = attribute\r\n    // //name = comment (unavailable)\r\n    selector: string;\r\n\r\n    // infered from the selector\r\n    //restrict?: Restriction|Restriction[]; // [Restriction.Element, Restriction.Element]\r\n\r\n    scope?: boolean|Map<string>;\r\n    bindToController?: boolean;\r\n\r\n    require?: string[];\r\n\r\n    // needs mapping\r\n    transclude?: Transclusion; // Transclusion.Content\r\n\r\n    compile?: CompileFunction|FunctionReturningPrePost;\r\n    link?: FunctionReturningNothing|PrePost|string;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class CommonDirectiveAnnotation {\r\n\r\n    selector: string = void 0;\r\n    scope: boolean|Map<string> = void 0;\r\n    bindToController: boolean = void 0;\r\n    require: string[] = void 0;\r\n    transclude: Transclusion = void 0;\r\n    compile: CompileFunction|FunctionReturningPrePost = void 0;\r\n    link: FunctionReturningNothing|PrePost|string = void 0;\r\n\r\n    constructor(options: CommonDirectiveOptions) {\r\n        // TODO debug only?\r\n        assert.notNull(options, 'options must not be null');\r\n        assert.notEmpty(options.selector, 'selector must not be null or empty');\r\n\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport interface DirectiveOptions extends CommonDirectiveOptions {\r\n\r\n    priority?: number;\r\n    terminal?: boolean;\r\n    multiElement?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class DirectiveAnnotation extends CommonDirectiveAnnotation {\r\n\r\n    multiElement: boolean = void 0;\r\n    priority: number = void 0;\r\n    terminal: boolean = void 0;\r\n\r\n    constructor(options: DirectiveOptions) {\r\n        super(<any> options); // TODO WTF needs casting?\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport interface Directive {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface DirectiveConstructor extends Function {\r\n    new (): Directive;\r\n}\r\n\r\ntype DirectiveDecorator = (options: DirectiveOptions) => ClassDecorator;\r\n\r\n/**\r\n *\r\n */\r\nexport var Directive = <DirectiveDecorator> makeDecorator(DirectiveAnnotation);\r\n\r\n\r\n// ---\r\n\r\n// @Bind\r\n\r\nexport class BindAnnotation {\r\n    constructor(\r\n        public propertyKey: string,\r\n        public binding: string) {\r\n    }\r\n}\r\n\r\nfunction bindDecorator(binding: string): PropertyDecorator {\r\n\r\n    return function(target: any, propertyKey: string) {\r\n\r\n        var newBind = new BindAnnotation(propertyKey, binding);\r\n        addAnnotation(target.constructor, newBind);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport var Bind = bindDecorator;\r\n\r\n// ---\r\n\r\n\r\n\r\nexport function publishDirective(directiveClass: DirectiveConstructor, ngModule: ng.IModule, selector?: string): ng.IModule {\r\n\r\n    // TODO debug only?\r\n    assert(hasOwnAnnotation(directiveClass, DirectiveAnnotation), 'Did you decorate it with @Directive?');\r\n\r\n    var {name, factory} = makeDirectiveFactory(directiveClass);\r\n\r\n    // TODO consider provided selector, if any\r\n\r\n    ngModule.directive(name, factory);\r\n\r\n    return ngModule;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\n//export interface DirectiveDefinitionObject extends ng.IDirective { // bindToController incompatible with current angular.d.ts\r\nexport interface DirectiveDefinitionObject {\r\n    multiElement?: boolean;\r\n    compile?: CompileFunction|FunctionReturningPrePost;\r\n    controller?: any;\r\n    bindToController?: boolean|Map<string>;\r\n    link?: FunctionReturningNothing|PrePost|string;\r\n    name?: string;\r\n    priority?: number;\r\n    require?: string[];\r\n    restrict?: string;\r\n    scope?: boolean|Map<string>;\r\n    terminal?: boolean;\r\n    transclude?: boolean|string;\r\n\r\n    semanticName: string;\r\n    imperativeName: string;\r\n}\r\n\r\nconst RESTRICTION_MAP: Map<string> = {\r\n    [SelectorType.Attribute]: 'A',\r\n    [SelectorType.Tag]: 'E',\r\n    [SelectorType.Class]: 'C'\r\n    //[SelectorType.Comment]: 'M'\r\n};\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function makeCommonDO(directiveClass: DirectiveConstructor): DirectiveDefinitionObject {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(directiveClass, CommonDirectiveAnnotation).reverse();\r\n    var aux = getAnnotations(directiveClass, CommonDirectiveAnnotation);\r\n    var annotation = <CommonDirectiveAnnotation> {/*no defaults*/};\r\n    mergeAnnotations(annotation, ...aux);\r\n\r\n    var selectorData = parseSelector(annotation.selector);\r\n\r\n    var ddo: DirectiveDefinitionObject = {\r\n        semanticName: selectorData.semanticeName,\r\n        imperativeName: selectorData.imperativeName,\r\n        restrict: RESTRICTION_MAP[selectorData.type],\r\n        controller: directiveClass\r\n    };\r\n\r\n    if (isDefined(annotation.transclude)) ddo.transclude = TRANSCLUSION_MAP[annotation.transclude];\r\n    if (isDefined(annotation.compile)) ddo.compile = annotation.compile;\r\n    if (isDefined(annotation.link)) ddo.link = annotation.link;\r\n\r\n    // scope\r\n    if (isDefined(annotation.scope)) ddo.scope = annotation.scope;\r\n\r\n    // bindToController\r\n    // let bindAnnotations = <BindAnnotation[]> getAnnotations(directiveClass, BindAnnotation).reverse();\r\n    let bindAnnotations = <BindAnnotation[]> getAnnotations(directiveClass, BindAnnotation);\r\n    if (bindAnnotations.length) {\r\n        let map: Map<string> = {};\r\n        for (let bind of bindAnnotations) {\r\n            map[bind.propertyKey] = bind.binding;\r\n        }\r\n        ddo.bindToController = map;\r\n    }\r\n    else if (isDefined(annotation.bindToController)) ddo.bindToController = annotation.bindToController;\r\n\r\n    return ddo;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function makeDirectiveDO(directiveClass: DirectiveConstructor): DirectiveDefinitionObject {\r\n\r\n    var ddo = makeCommonDO(<DirectiveConstructor> directiveClass);\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(directiveClass, DirectiveAnnotation).reverse();\r\n    var aux = getAnnotations(directiveClass, DirectiveAnnotation);\r\n    var annotation = <DirectiveAnnotation> {/*no defaults*/};\r\n    mergeAnnotations(annotation, ...aux);\r\n\r\n    if (isDefined(annotation.multiElement)) ddo.multiElement = annotation.multiElement;\r\n    if (isDefined(annotation.priority)) ddo.priority = annotation.priority;\r\n    if (isDefined(annotation.terminal)) ddo.terminal = annotation.terminal;\r\n\r\n    return ddo;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function inFactory(ddo: DirectiveDefinitionObject, $injector: ng.auto.IInjectorService): DirectiveDefinitionObject {\r\n\r\n    if (isFunction(ddo.compile)) {\r\n        ddo.compile = !isAnnotated(ddo.compile) ? ddo.compile :\r\n            (tElement: any, tAttrs: any, transclude: any) => {\r\n                return $injector.invoke(ddo.compile, null, {\r\n                    $element: tElement,\r\n                    $attrs: tAttrs,\r\n                    $transclude: transclude\r\n                });\r\n            }\r\n    }\r\n\r\n    if (typeof ddo.link === \"string\") {\r\n        let linkFn = ddo.controller.prototype[<string> ddo.link];\r\n        if (!isAnnotated(linkFn)) {\r\n            ddo.link = function(scope: any, iElement: any, iAttrs: any, controllers: any, transclude: any) {\r\n                let controller = angular.isArray(controllers) ? controllers[controllers.lenght - 1] : controllers;\r\n                linkFn.apply(controller || null, [].slice.call(arguments, 0));\r\n            }\r\n        }\r\n        else {\r\n            ddo.link = function(scope: any, iElement: any, iAttrs: any, controllers: any, transclude: any) {\r\n                let controller = angular.isArray(controllers) ? controllers[controllers.lenght - 1] : controllers;\r\n                return $injector.invoke(<any> linkFn, controller, {\r\n                    $scope: scope,\r\n                    $element: iElement,\r\n                    $attrs: iAttrs,\r\n                    $controller: controllers,   // TODO deprecated\r\n                    $controllers: controllers,\r\n                    $transclude: transclude\r\n                });\r\n            }\r\n        }\r\n    }\r\n    else if (isAnnotated(<any> ddo.link)) {\r\n        let linkFn = ddo.link;\r\n        ddo.link = (scope: any, iElement: any, iAttrs: any, controllers: any, transclude: any) => {\r\n            return $injector.invoke(<any> linkFn, null, {\r\n                $scope: scope,\r\n                $element: iElement,\r\n                $attrs: iAttrs,\r\n                $controller: controllers,   // TODO deprecated\r\n                $controllers: controllers,\r\n                $transclude: transclude\r\n            });\r\n        }\r\n    }\r\n\r\n    return ddo;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function makeDirectiveFactory(directiveClass: DirectiveConstructor) {\r\n\r\n    var ddo = makeDirectiveDO(directiveClass);\r\n\r\n    var factory = injectable(['$injector'], function directiveFactory($injector: ng.auto.IInjectorService): ng.IDirective {\r\n        return <any> inFactory(ddo, $injector);\r\n    });\r\n\r\n    return {\r\n        name: ddo.imperativeName,\r\n        factory: factory\r\n    };\r\n\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\n\r\n\r\n/**\r\n * Annotates a function with information of dependencies to be injected as parameters\r\n *\r\n * * Overrides previous annotation (logs warning)\r\n * * All parameters should be annotated (logs warning)\r\n * * Dependencies will be injected in the order they are specified in the dependencies parameter\r\n *\r\n * @param dependencies Names of the dependencies to be injected, in order\r\n * @returns The provided function\r\n */\r\nexport function injectable<T extends Function>(dependencies: string[], func: T): T {\r\n\r\n\t// TODO warn about overriding annotation\r\n\t// TODO warn about mismatching number of parameters and dependencies\r\n\r\n    func.$inject = dependencies.slice();\r\n\treturn func;\r\n\r\n}\r\n\r\n/**\r\n * Binds a function to a context and preservers it's annotated dependencies\r\n *\r\n * @param func The function to be bound\r\n * @param context The object to which bind the funcion\r\n * @returns A bound function\r\n */\r\nexport function safeBind<T extends Function>(func: T, context: any): T {\r\n\r\n    var bound = func.bind(context);\r\n\r\n\tif (func.$inject) {\r\n\t\tbound.$inject = func.$inject;\r\n\t}\r\n\r\n    return bound;\r\n\r\n}\r\n\r\n/**\r\n * A decorator to annotate method parameterss with dependencies to be injected\r\n *\r\n * * Overrides previous annotation (logs warning)\r\n * * All parameters should be annotated (logs warning)\r\n *\r\n * @param dependency The name of the dependency to be injected\r\n */\r\nexport function Inject(dependency: string): ParameterDecorator {\r\n\r\n\treturn (target: Function, propertyKey: string|symbol, parameterIndex: number) => {\r\n\r\n\t\t// TODO warn about overriding annotation\r\n\t\t// TODO warn about mismatching number of parameters and dependencies\r\n\r\n        // If propertyKey is defined, we're decorating a parameter of a method\r\n        // If not, we're decorating a parameter of class constructor\r\n\t\ttarget = (typeof propertyKey == 'undefined') ? target : target = (<any>target)[propertyKey];\r\n\r\n\t\t// TODO what about missing elements in the $inject array?\r\n\t\t// ie. annotated the 2nd but not the 1st parameter\r\n\r\n\t\tvar $inject: string[] = (target.$inject = target.$inject || []);\r\n\t\t$inject[parameterIndex] = dependency;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Inspects a function for dependency injection annotation\r\n *\r\n * @param func The object to be inspected\r\n */\r\nexport function isAnnotated(func: Function): boolean {\r\n\r\n\treturn func && func.hasOwnProperty('$inject');\r\n\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\nimport {getAnnotations, mergeAnnotations} from './reflection'\r\nimport {makeDecorator, setIfInterface, create, isFunction} from './utils'\r\nimport {injectable} from './di'\r\n\r\n\r\n\r\n/**\r\n * Options available when decorating a class as a filter\r\n */\r\nexport interface FilterOptions {\r\n\r\n    /**\r\n     * The name with which the filter will be invoked in templates\r\n     *\r\n     * Must be valid angular Expressions identifiers, such as \"uppercase\",\r\n     * \"upperCase\" or \"upper_case\". Special charaters such as hyphens and dots\r\n     * are not allowed.\r\n     *\r\n     * To get a hold of the filter delegate through dependency injection,\r\n     * ask the injector for this name plus the suffix \"Filter\".\r\n     */\r\n    name: string;\r\n\r\n    stateful?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class FilterAnnotation {\r\n\r\n    name: string = void 0;\r\n    stateful: boolean = void 0;\r\n\r\n    constructor(options: FilterOptions) {\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Interface filter classes MUST implement\r\n *\r\n * * It's a singleton, instantiated the first time it is needed\r\n * * The constructor can receive dependency injections\r\n * * When asked for, what is provided is actually the method filter() bound the it's instance\r\n */\r\nexport interface Filter {\r\n\r\n    /**\r\n     * The method that does the actual filtering\r\n     *\r\n     * When asked for, what is provided is actually this method\r\n     * bound the it's instance\r\n     *\r\n     * * Cannot receive dependency injections (use the constructor)\r\n     */\r\n    filter(input: any, ...rest: any[]): any;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface FilterConstructor extends Function {\r\n    new (...args: any[]): Filter;\r\n    prototype: Filter;\r\n}\r\n\r\ntype DecoratorSignature = (options: FilterOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a filter\r\n */\r\nexport var Filter = <DecoratorSignature> makeDecorator(FilterAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function registerFilter(filterClass: FilterConstructor, ngModule: ng.IModule) {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(filterClass, FilterAnnotation).reverse();\r\n    var aux = getAnnotations(filterClass, FilterAnnotation);\r\n\r\n    if (!aux.length) {\r\n        throw new Error(\"Filter annotation not found\");\r\n    }\r\n\r\n    var notes = mergeAnnotations<FilterAnnotation>(create(FilterAnnotation), ...aux);\r\n\r\n    if (!isFunction(filterClass.prototype.filter)) {\r\n        throw new Error(`Filter \"${notes.name}\" does not implement a filter method`);\r\n    }\r\n\r\n    ngModule.filter(notes.name, injectable(['$injector'], function($injector: ng.auto.IInjectorService) {\r\n        var filterSingleton = <Filter> $injector.instantiate(filterClass);\r\n        var boundFilterMethod = filterSingleton.filter.bind(filterSingleton);\r\n\r\n        if (notes.stateful) {\r\n            boundFilterMethod.$stateful = true;\r\n        }\r\n\r\n        return boundFilterMethod;\r\n    }));\r\n\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert'\r\nimport {getAnnotations, hasAnnotation, mergeAnnotations, Reflect} from './reflection'\r\nimport {makeDecorator, setIfInterface, FunctionReturningNothing} from './utils'\r\nimport {safeBind} from './di'\r\nimport {create, isString, isFunction, isArray} from './utils'\r\nimport {ValueWrapper, publishValue} from './value'\r\nimport {ConstantWrapper, publishConstant} from './constant'\r\nimport {FilterAnnotation, registerFilter} from './filter'\r\nimport {AnimationAnnotation, registerAnimation} from './animation'\r\nimport {ServiceAnnotation, publishService} from './service'\r\nimport {DecoratorAnnotation, publishDecorator} from './decorator'\r\nimport {DirectiveAnnotation, publishDirective} from './directive'\r\nimport {ComponentAnnotation, publishComponent} from './component'\r\nimport {publishStates} from './ui/router/states'\r\nimport {registerRoutes} from './ui/router/routes'\r\n\r\n\r\n\r\nconst PUBLISHED_ANNOTATION_KEY = 'tng:module-published-as';\r\n\r\ntype DependenciesArray = (string|Function|ConstantWrapper<any>|ValueWrapper<any>)[];\r\n\r\n/**\r\n * Options available when decorating a class as a module\r\n * TODO document\r\n */\r\nexport interface ModuleOptions {\r\n\tname?: string;\r\n\tdependencies?: DependenciesArray;\r\n\tconfig?: Function|Function[];\r\n\trun?: Function|Function[];\r\n\r\n    // modules?: (string|Function)[];\r\n\t// components?: Function[];\r\n\t// services?: Function[];\r\n\t// filters?: Function[];\r\n\t// decorators?: Function[];\r\n\t// animations?: Function[];\r\n\t// values?: Function[];\r\n\t// constants?: Function[];\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ModuleAnnotation {\r\n\r\n\tname: string = void 0;\r\n\tdependencies: DependenciesArray = void 0;\r\n\tconfig: Function|Function[] = void 0;\r\n\trun: Function|Function[] = void 0;\r\n\r\n\t// modules: (string|Function)[] = void 0;\r\n\t// components: Function[] = void 0;\r\n\t// services: Function[] = void 0;\r\n\t// filters: Function[] = void 0;\r\n\t// decorators: Function[] = void 0;\r\n\t// animations: Function[] = void 0;\r\n\t// values: Function[] = void 0;\r\n\t// constants: Function[] = void 0;\r\n\r\n\tconstructor(options?: ModuleOptions) {\r\n        setIfInterface(this, options);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Interface modules MAY implement\r\n * TODO document\r\n */\r\nexport interface Module {\r\n\tonConfig?: FunctionReturningNothing;\r\n\tonRun?: FunctionReturningNothing;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ModuleConstructor extends Function {\r\n\tnew (): Module;\r\n\tnew (ngModule: ng.IModule): Module;\r\n}\r\n\r\ntype ModuleSignature = (options?: ModuleOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a module\r\n */\r\nexport var Module = <ModuleSignature> makeDecorator(ModuleAnnotation);\r\n\r\nvar moduleCount = 0;\r\n\r\nfunction getNewModuleName() {\r\n\r\n    return `tng_generated_module#${++moduleCount}`;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function publishModule(moduleClass: ModuleConstructor, name?: string): ng.IModule {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(moduleClass, ModuleAnnotation).reverse();\r\n    var aux = getAnnotations(moduleClass, ModuleAnnotation);\r\n\r\n    // TODO debug only?\r\n    assert.notEmpty(aux, 'Missing @Module decoration');\r\n\r\n    // Has this module already been published?\r\n    var publishedAs: string;\r\n    if (publishedAs = Reflect.getOwnMetadata(PUBLISHED_ANNOTATION_KEY, moduleClass)) {\r\n        return angular.module(publishedAs);\r\n    }\r\n\r\n    var annotation = <ModuleAnnotation> mergeAnnotations(Object.create(null), ...aux);\r\n\r\n    var constants: any[] = [];\r\n    var values: any[] = [];\r\n    var services: any[] = [];\r\n    var decorators: any[] = [];\r\n    var filters: any[] = [];\r\n    var animations: any[] = [];\r\n    var components: any[] = [];\r\n    var directives: any[] = [];\r\n    var modules: any[] = [];\r\n\r\n    // TODO optimize this.. to much reflection queries\r\n    if (annotation.dependencies) {\r\n        for (let dep of annotation.dependencies) {\r\n            // Regular angular module\r\n            if (isString(dep)) {\r\n                modules.push(dep);\r\n            }\r\n            else if (hasAnnotation(dep, ModuleAnnotation)) {\r\n                // If the module has alrady been published, we just push it's name\r\n                // if (publishedAs = Reflect.getOwnMetadata(PUBLISHED_ANNOTATION_KEY, dep)) {\r\n                    // modules.push(publishedAs);\r\n                // }\r\n                // else {\r\n                    modules.push(publishModule(<ModuleConstructor> dep).name);\r\n                // }\r\n            }\r\n            else if (dep instanceof ConstantWrapper) {\r\n                constants.push(dep);\r\n            }\r\n            else if (dep instanceof ValueWrapper) {\r\n                values.push(dep);\r\n            }\r\n            else if (hasAnnotation(dep, ServiceAnnotation)) {\r\n                services.push(dep);\r\n            }\r\n            else if (hasAnnotation(dep, DecoratorAnnotation)) {\r\n                decorators.push(dep);\r\n            }\r\n            else if (hasAnnotation(dep, FilterAnnotation)) {\r\n                filters.push(dep);\r\n            }\r\n            else if (hasAnnotation(dep, AnimationAnnotation)) {\r\n                animations.push(dep);\r\n            }\r\n            else if (hasAnnotation(dep, ComponentAnnotation)) {\r\n                components.push(dep);\r\n            }\r\n            else if (hasAnnotation(dep, DirectiveAnnotation)) {\r\n                directives.push(dep);\r\n            }\r\n            else {\r\n                // TODO WTF?\r\n                throw new Error(`I don't recognize what kind of dependency this is: ${dep}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    name = name || annotation.name || getNewModuleName();\r\n\r\n    // Register the module on Angular\r\n    var ngModule = angular.module(name, modules);\r\n\r\n    // Instantiate the module\r\n    var module = new moduleClass(ngModule);\r\n\r\n    // Register config functions\r\n    var configFns: Function[] = [];\r\n    if (isFunction(module.onConfig)) configFns.push(safeBind(module.onConfig, module));\r\n    if (annotation.config) {\r\n        if (isFunction(annotation.config)) configFns.push(<Function> annotation.config);\r\n        else if (isArray(annotation.config)) configFns = configFns.concat(<Function[]> annotation.config)\r\n    }\r\n    for (let fn of configFns) ngModule.config(fn);\r\n\r\n    // Register initialization functions\r\n    var runFns: Function[] = [];\r\n    if (isFunction(module.onRun)) runFns.push(safeBind(module.onRun, module));\r\n    if (annotation.run) {\r\n        if (isFunction(annotation.run)) runFns.push(<Function> annotation.run);\r\n        else if (isArray(annotation.run)) runFns = runFns.concat(<Function[]> annotation.run)\r\n    }\r\n    for (let fn of runFns) ngModule.run(fn);\r\n\r\n    publishStates(moduleClass, ngModule);\r\n    registerRoutes(moduleClass, ngModule);\r\n\r\n    for (let item of values) publishValue(item, ngModule);\r\n    for (let item of constants) publishConstant(item, ngModule);\r\n    for (let item of filters) registerFilter(item, ngModule);\r\n    for (let item of animations) registerAnimation(item, ngModule);\r\n    for (let item of services) publishService(item, ngModule);\r\n    for (let item of decorators) publishDecorator(item, ngModule);\r\n    for (let item of components) publishComponent(item, ngModule);\r\n    for (let item of directives) publishDirective(item, ngModule);\r\n\r\n    Reflect.defineMetadata(PUBLISHED_ANNOTATION_KEY, name, moduleClass);\r\n\r\n    return ngModule;\r\n\r\n}","/// <reference path=\"./_references\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert';\r\n\r\nimport {getAnnotations, mergeAnnotations} from './reflection';\r\nimport {makeDecorator, setIfInterface, isFunction} from './utils';\r\n\r\n/**\r\n * Options available when decorating a class as a service\r\n */\r\nexport interface ServiceOptions {\r\n    /**\r\n     * The name the service will be made available for injection\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * An optional provider object or provider factory\r\n     */\r\n    provider?: ng.IServiceProvider|ng.IServiceProviderFactory;\r\n\r\n    /**\r\n     * An optional service factory\r\n     */\r\n    factory?: Function;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ServiceAnnotation {\r\n\r\n    name: string = void 0;\r\n    provider: ng.IServiceProvider|ng.IServiceProviderFactory = void 0;\r\n    factory: Function = void 0;\r\n\r\n    constructor(options: ServiceOptions) {\r\n        // TODO debug only?\r\n        assert.notNull(options, 'options must not be null');\r\n        assert.notEmpty(options.name, 'name cannot be null or empty');\r\n\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Interface services may implement\r\n */\r\nexport interface Service {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ServiceConstructor extends Function {\r\n    new (...args: any[]): Service;\r\n    prototype: Service;\r\n}\r\n\r\ntype DecoratorSignature = (options: ServiceOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a service\r\n */\r\nexport var Service = <DecoratorSignature> makeDecorator(ServiceAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function publishService(serviceClass: ServiceConstructor, ngModule: ng.IModule, name?: string): ng.IModule {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var aux = getAnnotations(serviceClass, ServiceAnnotation).reverse();\r\n    var aux = getAnnotations(serviceClass, ServiceAnnotation);\r\n\r\n    // TODO debug only?\r\n    assert.notEmpty(aux, 'Did you decorate it with @Service?');\r\n\r\n    var annotation = <ServiceAnnotation> {/*no defalts*/};\r\n    mergeAnnotations(annotation, ...aux);\r\n\r\n    var name = name != null ? name : annotation.name;\r\n\r\n    if (annotation.provider) {\r\n        ngModule.provider(name, <any> annotation.provider);\r\n    }\r\n    else if (annotation.factory) {\r\n        ngModule.factory(name, annotation.factory);\r\n    }\r\n    else {\r\n        ngModule.service(name, serviceClass);\r\n    }\r\n\r\n    return ngModule;\r\n\r\n}","/// <reference path=\"../../_references.ts\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from '../../assert'\r\n\r\nimport {Inject, injectable} from '../../di'\r\nimport {makeDecorator, create, isDefined, isString, isFunction, Map, isArray, forEach, setIfInterface} from '../../utils'\r\nimport {hasAnnotation, getAnnotations, mergeAnnotations} from '../../reflection'\r\nimport {ModalViewAnnotation, MODAL_BACKDROP_MAP} from './modal-view'\r\n\r\nimport IModalServiceInstance = ng.ui.bootstrap.IModalServiceInstance\r\nimport IModalService = ng.ui.bootstrap.IModalService\r\nimport IModalSettings = ng.ui.bootstrap.IModalSettings\r\nimport IModalStackService = ng.ui.bootstrap.IModalStackService\r\nimport IModalScope = ng.ui.bootstrap.IModalScope\r\n\r\nexport {ModalView, ModalBackdrop, ModalViewOptions} from './modal-view'\r\n\r\n\r\n\r\nexport interface ModalOptions {\r\n\r\n    scope?: ng.IScope|IModalScope|{(...args: any[]): ng.IScope|IModalScope};\r\n    bindToController?: boolean;\r\n    // resolve?: Map<string|Function>;\r\n    resolve?: Map<Function>;\r\n    keyboard?: boolean;\r\n    dismissAll?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ModalAnnotation {\r\n\r\n    scope: ng.IScope|IModalScope|{(...args: any[]): ng.IScope|IModalScope} = void 0;\r\n    bindToController: boolean = true; // defautls to true; differs from the original\r\n    // resolve: Map<string|Function> = void 0; // It doesn't really support strings, as stated in the docs\r\n    resolve: Map<Function> = void 0;\r\n    keyboard: boolean = void 0;\r\n    dismissAll: boolean = void 0;\r\n\r\n    constructor(options?: ModalOptions) {\r\n\r\n        setIfInterface(this, options);\r\n\r\n    }\r\n\r\n}\r\n\r\ntype ModalDecorator = (options?: ModalOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a modal controller\r\n */\r\nexport var Modal = <ModalDecorator> makeDecorator(ModalAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ModalHandler {\r\n\r\n    private instance: IModalServiceInstance = null;\r\n\r\n    constructor(\r\n        private modalNotes: ModalAnnotation,\r\n        private viewNotes: ModalViewAnnotation,\r\n        private settings: IModalSettings) {\r\n    }\r\n\r\n    open(\r\n        @Inject('$injector') $injector: ng.auto.IInjectorService,\r\n        @Inject('$modal') $modal: IModalService,\r\n        @Inject('$modalStack') $modalStack: IModalStackService): IModalServiceInstance {\r\n\r\n        var view = this.viewNotes;\r\n        var modal = this.modalNotes;\r\n        var calltimeSettings: IModalSettings = angular.copy(this.settings);\r\n\r\n        if (modal.dismissAll) {\r\n            $modalStack.dismissAll();\r\n        }\r\n\r\n        if (isDefined(modal.scope)) {\r\n            calltimeSettings.scope = isFunction(modal.scope) ?\r\n                $injector.invoke(<any> modal.scope) :\r\n                    modal.scope;\r\n        }\r\n\r\n        if (isDefined(view.template)) {\r\n            calltimeSettings.template = isFunction(view.template) ?\r\n                $injector.invoke(<any> view.template) :\r\n                    <string> view.template;\r\n        }\r\n\r\n        if (isDefined(view.templateUrl)) {\r\n            calltimeSettings.templateUrl = isFunction(view.templateUrl) ?\r\n                $injector.invoke(<any> view.templateUrl) :\r\n                    view.templateUrl;\r\n        }\r\n\r\n        this.instance = $modal.open(calltimeSettings);\r\n        return this.instance;\r\n\r\n    }\r\n\r\n    dismiss(@Inject('$modalStack') $modalStack: IModalStackService) {\r\n\r\n        if (this.modalNotes.dismissAll) {\r\n            $modalStack.dismissAll();\r\n        }\r\n        else {\r\n            this.instance.dismiss();\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function getModalHandler(modalClass: Function, scope?: ng.IScope): ModalHandler {\r\n\r\n    var modalNotes = getAnnotations(modalClass, ModalAnnotation);\r\n    var viewNotes = getAnnotations(modalClass, ModalViewAnnotation);\r\n\r\n    // TODO debug only?\r\n    assert(modalNotes, 'Missing @Modal decoration');\r\n    assert(viewNotes, 'Missing @ModalView decoration');\r\n\r\n    var settings: ng.ui.bootstrap.IModalSettings = {\r\n        controller: modalClass\r\n    };\r\n\r\n    var modal = <ModalAnnotation> {/*no defaults*/};\r\n    mergeAnnotations(modal, ...modalNotes);\r\n\r\n    // Deferred to be handled by ModalHandler to allow DI\r\n    // if (isDefined(modal.scope)) {\r\n    //     settings.scope = modal.scope;\r\n    // }\r\n    if (scope) {\r\n        modal.scope = scope;\r\n    }\r\n\r\n    if (isDefined(modal.bindToController)) {\r\n        settings.bindToController = modal.bindToController;\r\n    }\r\n\r\n    if (isDefined(modal.resolve)) {\r\n        settings.resolve = modal.resolve;\r\n    }\r\n\r\n    if (isDefined(modal.keyboard)) {\r\n        settings.keyboard = modal.keyboard;\r\n    }\r\n\r\n    var view = <ModalViewAnnotation> {/*no defaults*/};\r\n    mergeAnnotations(view, ...viewNotes);\r\n\r\n    if (isDefined(view.animation)) {\r\n        settings.animation = view.animation;\r\n    }\r\n\r\n    if (isDefined(view.backdrop)) {\r\n        settings.backdrop = MODAL_BACKDROP_MAP[view.backdrop];\r\n    }\r\n\r\n    if (isDefined(view.backdropClass)) {\r\n        settings.backdropClass = view.backdropClass;\r\n    }\r\n\r\n    if (isDefined(view.keyboard)) {\r\n        settings.keyboard = view.keyboard;\r\n    }\r\n\r\n    if (isDefined(view.windowClass)) {\r\n        settings.windowClass = view.windowClass;\r\n    }\r\n\r\n    if (isDefined(view.windowTemplateUrl)) {\r\n        settings.windowTemplateUrl = view.windowTemplateUrl;\r\n    }\r\n\r\n    if (isDefined(view.size)) {\r\n        settings.size = view.size;\r\n    }\r\n\r\n    if (isDefined(view.controllerAs)) {\r\n        settings.controllerAs = view.controllerAs;\r\n    }\r\n\r\n    // Deferred to be handled by ModalHandler to allow DI\r\n    // if (isDefined(view.templateUrl)) {\r\n    //     settings.templateUrl = view.templateUrl;\r\n    // }\r\n\r\n    // Deferred to be handled by ModalHandler to allow DI\r\n    // if (isDefined(view.template)) {\r\n    //     settings.template = <string> view.template;\r\n    // }\r\n\r\n    // TODO styleUrl\r\n\r\n    return new ModalHandler(modal, view, settings);\r\n\r\n}","/// <reference path=\"../../_references.ts\" />\r\n\r\nimport {Module} from '../../module'\r\nimport {ModalServiceDecorator} from './modal-service-decorator'\r\n\r\n// export {Modal, ModalOptions} from './modal'\r\n// export {ModalView, ModalBackdrop, ModalViewOptions} from './modal-view'\r\n\r\n\r\n\r\n@Module({\r\n    name: 'tng.ui.bootstrap',\r\n    dependencies: [\r\n        ModalServiceDecorator\r\n    ]\r\n})\r\nexport class TngUiBootstrapModule {\r\n\r\n}","/// <reference path=\"../../_references.ts\" />\r\n\r\nimport {injectable} from '../../di'\r\nimport {makeDecorator, create, Map, forEach} from '../../utils'\r\nimport {getAnnotations, mergeAnnotations} from '../../reflection'\r\n\r\n\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class RoutesAnnotation {\r\n\r\n    routes: Map<string|Function>;\r\n\r\n    constructor(routes: Map<string|Function>) {\r\n        this.routes = routes;\r\n    }\r\n\r\n}\r\n\r\ntype RoutesDecorator = (routes: Map<string|Function>) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class with states\r\n */\r\nexport var Routes = <RoutesDecorator> makeDecorator(RoutesAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function registerRoutes(moduleController: Function, ngModule: ng.IModule) {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // var notes = <RoutesAnnotation[]> getAnnotations(moduleController, RoutesAnnotation).reverse();\r\n    var notes = <RoutesAnnotation[]> getAnnotations(moduleController, RoutesAnnotation);\r\n\r\n    if (!notes.length) return;\r\n\r\n    var routes = {};\r\n    notes.forEach((note) => mergeAnnotations(routes, note.routes));\r\n\r\n    ngModule.config(injectable(['$urlRouterProvider'], ($urlRouterProvider: ng.ui.IUrlRouterProvider) => {\r\n\r\n        forEach(routes, (handler, route) => {\r\n            if (route === '?') {\r\n                $urlRouterProvider.otherwise(handler);\r\n            }\r\n            else {\r\n                $urlRouterProvider.when(route, handler);\r\n            }\r\n        });\r\n\r\n    }));\r\n\r\n}","/// <reference path=\"../../_references.ts\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from '../../assert'\r\n\r\nimport {injectable, safeBind} from '../../di'\r\nimport {makeDecorator, create, isDefined, isString, isFunction, Map, isArray, forEach} from '../../utils'\r\nimport {getAnnotations, mergeAnnotations} from '../../reflection'\r\nimport {ViewAnnotation} from '../../view'\r\nimport {On, publishListeners} from './events'\r\nimport {getModalHandler} from '../bootstrap/modal'\r\n\r\nexport {View} from '../../view'\r\nexport {StateChangeEvent, ViewLoadEvent} from './events'\r\n\r\n\r\n\r\n/**\r\n * Options available when decorating an application controller with states\r\n * TODO document\r\n */\r\nexport interface StateConfig {\r\n\r\n    url: string;\r\n    abstract?: boolean;\r\n    view?: Function;\r\n    views?: {[outlet:string]: Function};\r\n    modal?: Function,\r\n    parent?: StateConfig|string;\r\n    reloadOnSearch?: boolean;\r\n    onEnter?: Function;\r\n\tonExit?: Function;\r\n    resolve?: Map<string|Function>;\r\n\r\n    // TODO\r\n    // params\r\n    // data\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface InternalStateConfig extends StateConfig {\r\n    name: string;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class StatesAnnotation {\r\n\r\n    states: Map<InternalStateConfig>;\r\n\r\n    constructor(states: Map<InternalStateConfig>) {\r\n\r\n        forEach(states, (state, name) => state.name = name);\r\n        this.states = states;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport interface StatesDecorator {\r\n    (states: Map<StateConfig>): ClassDecorator;\r\n    on: typeof On;\r\n}\r\n\r\n/**\r\n * A decorator to annotate a class with states\r\n */\r\nexport var States = <StatesDecorator> <any> makeDecorator(StatesAnnotation);\r\nStates.on = On;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function publishStates(moduleController: Function, ngModule: ng.IModule) {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations to ge them on the original order\r\n    // var statesAnnotation = <StatesAnnotation[]> getAnnotations(moduleController, StatesAnnotation).reverse();\r\n    var statesAnnotation = <StatesAnnotation[]> getAnnotations(moduleController, StatesAnnotation);\r\n\r\n    if (statesAnnotation.length) {\r\n        let states: ng.ui.IState[] = [];\r\n\r\n        // Translate each state from each annotation and stack them in an array\r\n        forEach(statesAnnotation, (note) =>\r\n            forEach(note.states, (state) =>\r\n                states.push(translateToUiState(state))));\r\n\r\n        ngModule.config(injectable(['$stateProvider'], ($stateProvider: ng.ui.IStateProvider) => {\r\n\r\n            for (let state of states) {\r\n                $stateProvider.state(state);\r\n            }\r\n\r\n        }));\r\n    }\r\n\r\n    publishListeners(moduleController, ngModule);\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nfunction translateToUiState(state: InternalStateConfig): ng.ui.IState {\r\n\r\n    var translatedState: ng.ui.IState = {};\r\n\r\n    if (isDefined(state.name)) translatedState.name = state.name;\r\n    if (isDefined(state.url)) translatedState.url = state.url;\r\n    if (isDefined(state.abstract)) translatedState.abstract = state.abstract;\r\n    if (isDefined(state.reloadOnSearch)) translatedState.reloadOnSearch = state.reloadOnSearch;\r\n    if (isDefined(state.onEnter)) translatedState.onEnter = state.onEnter;\r\n    if (isDefined(state.onExit)) translatedState.onExit = state.onExit;\r\n    if (isDefined(state.resolve)) translatedState.resolve = state.resolve;\r\n\r\n    // If the state has a parent, we force the string way\r\n    if (isDefined(state.parent)) {\r\n        let parent = state.parent;\r\n        if (!isString(parent)) {\r\n            parent = (<InternalStateConfig> parent).name;\r\n        }\r\n        // ng.ui.IState is missing parent\r\n        (<any> translatedState).parent = parent;\r\n    }\r\n\r\n    // if (state.view && state.views) {\r\n    //     throw Error('Cannot provide both view and views');\r\n    // }\r\n    // else if (!state.view && !state.views) {\r\n    //     throw Error('Must provide either view or views');\r\n    // }\r\n    // else {\r\n    if (state.view || state.views) {\r\n        let views = <{[key:string]:any}> {};\r\n\r\n        if (state.view) {\r\n            views[''] = extractViewData(state.view);\r\n        }\r\n        else {\r\n            forEach(state.views, (controller, outlet) => views[outlet] = extractViewData(controller))\r\n        }\r\n\r\n        translatedState.views = views;\r\n    }\r\n    else if (state.modal) {\r\n        let handler = getModalHandler(state.modal);\r\n\r\n        if (translatedState.onEnter) {\r\n            let onEnter = <Function> translatedState.onEnter;\r\n            translatedState.onEnter = injectable(['$injector'], function($injector: ng.auto.IInjectorService) {\r\n                $injector.invoke(onEnter);\r\n                $injector.invoke(handler.open, handler);\r\n            });\r\n        }\r\n        else {\r\n            translatedState.onEnter = safeBind(handler.open, handler);\r\n        }\r\n\r\n        if (translatedState.onExit) {\r\n            let onExit = <Function> translatedState.onExit;\r\n            translatedState.onExit = injectable(['$injector'], function($injector: ng.auto.IInjectorService) {\r\n                $injector.invoke(handler.dismiss, handler);\r\n                $injector.invoke(onExit);\r\n            });\r\n        }\r\n        else {\r\n            translatedState.onExit = safeBind(handler.dismiss, handler);\r\n        }\r\n    }\r\n\r\n    return translatedState;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nfunction extractViewData(viewModel: Function) {\r\n\r\n    // Reflect.decorate apply decorators reversely, so we need to reverse\r\n    // the extracted annotations before merging them\r\n    // let notes = getAnnotations(viewModel, ViewAnnotation).reverse();\r\n    let notes = getAnnotations(viewModel, ViewAnnotation);\r\n\r\n    if (!notes.length) {\r\n        throw new Error('Template not defined');\r\n    }\r\n\r\n    let template = <ViewAnnotation> mergeAnnotations({}, ...notes);\r\n    let data:any = {};\r\n\r\n    data.controller = viewModel;\r\n    if (template.controllerAs) data.controllerAs = template.controllerAs;\r\n    if (template.template) data.template = template.template;\r\n    if (template.templateUrl) data.templateUrl = template.templateUrl;\r\n    // TODO style?\r\n\r\n    return data;\r\n\r\n}","/// <reference path=\"./_references\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert';\r\n\r\n/**\r\n * A framework envelope for values\r\n */\r\nexport class ValueWrapper<Type> {\r\n\r\n    constructor(private _name: string, private _value: Type) {\r\n    }\r\n    \r\n    get name() {\r\n        return this._name;\r\n    }\r\n    \r\n    get value() {\r\n        return this._value;\r\n    }\r\n    \r\n}\r\n\r\n/**\r\n * Wraps a value to be made available for dependency injection\r\n * \r\n * @param name The name of the value through which it will made available\r\n * @param value The value to be injected, as is\r\n * \r\n * @return A wrapper instance, to be used as a module dependency\r\n */\r\nexport function Value<Type>(name: string, value: Type): ValueWrapper<Type> {\r\n    \r\n    // TODO debug only?\r\n    assert.notEmpty(name, 'name cannot be null or empty');\r\n\r\n    return new ValueWrapper(name, value);\r\n\r\n}\r\n\r\nexport function publishValue<Type>(value: ValueWrapper<Type>, ngModule: ng.IModule, name?: string): ng.IModule {\r\n\r\n    // TODO debug only?\r\n    assert(value instanceof ValueWrapper, 'constant must be a ConstantWrapper');\r\n    \r\n    name = name != null ? name : value.name;\r\n    ngModule.value(name, value.value);\r\n    \r\n    return ngModule;\r\n\r\n}","/// <reference path=\"./_references.ts\" />\r\n\r\n// TODO debug only?\r\nimport {assert} from './assert'\r\nimport {makeDecorator, FunctionReturningString, setIfInterface} from './utils'\r\n\r\n\r\n\r\n/**\r\n * Options available when decorating a class with view information\r\n * TODO document\r\n */\r\nexport interface ViewOptions {\r\n\r\n    /**\r\n     * TODO should it be required?\r\n     */\r\n    controllerAs: string;\r\n\r\n    /**\r\n     *\r\n     */\r\n    template?: string|FunctionReturningString;\r\n\r\n    /**\r\n     *\r\n     */\r\n    templateUrl?: string|FunctionReturningString;\r\n\r\n    /**\r\n     * TODO\r\n     */\r\n    styleUrl?: string;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ViewAnnotation {\r\n\r\n    template: string|FunctionReturningString = void 0;\r\n    templateUrl: string|FunctionReturningString = void 0;\r\n    styleUrl: string = void 0;\r\n    controllerAs: string = void 0;\r\n\r\n    constructor(options: ViewOptions) {\r\n        // TODO debug only?\r\n        assert.notNull(options, 'options must not be null');\r\n        assert.notEmpty(options.controllerAs, 'controllerAs cannot be null or empty');\r\n\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\ntype ViewDecorator = (options: ViewOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a controller with view information\r\n */\r\nexport var View = <ViewDecorator> makeDecorator(ViewAnnotation);","export {Inject, injectable} from './di'\r\nexport {Value} from './value';\r\nexport {Constant} from './constant';\r\nexport {Filter} from './filter';\r\nexport {Animation} from './animation';\r\nexport {Service} from './service';\r\nexport {Decorator} from './decorator';\r\nexport {View} from './view';\r\nexport {ComponentView, ComponentTemplateNamespace} from './component-view';\r\nexport {Directive, Transclusion, Bind} from './directive';\r\nexport {Component} from './component';\r\nexport {Module, publishModule} from './module';\r\nexport {Application} from './application';\r\nexport {bootstrap} from './bootstrap';"]}